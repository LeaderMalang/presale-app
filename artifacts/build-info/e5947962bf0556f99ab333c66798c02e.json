{
	"id": "e5947962bf0556f99ab333c66798c02e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Escrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./interfaces/IFeeTreasury.sol\";\r\n\r\n/**\r\n * @title Escrow\r\n * @author Hassan Ali\r\n * @notice Holds payments temporarily to allow for disputes. Integrates with FeeTreasury\r\n * to split protocol fees on successful payments.\r\n */\r\ncontract Escrow is AccessControl {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // --- Enums and Structs ---\r\n    enum Status { Held, Disputed, Released, Refunded }\r\n\r\n    struct EscrowItem {\r\n        uint256 id;\r\n        address user;\r\n        uint256 assetId;\r\n        uint256 amount;\r\n        address paymentSplitter;\r\n        uint256 releaseTime;\r\n        Status status;\r\n    }\r\n\r\n    // --- Roles ---\r\n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\r\n    bytes32 public constant ARBITER_ROLE = keccak256(\"ARBITER_ROLE\");\r\n\r\n    // --- State Variables ---\r\n    IERC20 public immutable usdc;\r\n    IFeeTreasury public immutable feeTreasury; // ADDED: FeeTreasury integration\r\n\r\n    mapping(uint256 => EscrowItem) public escrows;\r\n    uint256 private _escrowIdCounter;\r\n\r\n    // --- Constants ---\r\n    uint256 public constant HOLD_PERIOD = 3 days;\r\n\r\n    // --- Events ---\r\n    event PaymentHeld(uint256 indexed escrowId, uint256 indexed assetId, address indexed user, uint256 amount);\r\n    event DisputeOpened(uint256 indexed escrowId);\r\n    event PaymentReleased(uint256 indexed escrowId, uint256 amountToContributors, uint256 protocolFee);\r\n    event PaymentRefunded(uint256 indexed escrowId);\r\n\r\n    // --- Errors ---\r\n    error InvalidStatus();\r\n    error NotAuthorized();\r\n    error HoldPeriodNotOver();\r\n    error DisputeWindowClosed();\r\n    error ZeroAddress();\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        address _admin,\r\n        address _arbiter,\r\n        address _verifier,\r\n        address _usdcAddress,\r\n        address _feeTreasuryAddress // ADDED: FeeTreasury address\r\n    ) {\r\n        if (_admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) || _feeTreasuryAddress == address(0)) {\r\n            revert ZeroAddress();\r\n        }\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\r\n        _grantRole(ARBITER_ROLE, _arbiter);\r\n        _grantRole(VERIFIER_ROLE, _verifier);\r\n\r\n        usdc = IERC20(_usdcAddress);\r\n        feeTreasury = IFeeTreasury(_feeTreasuryAddress); // ADDED: Initialize FeeTreasury\r\n    }\r\n\r\n    // --- Core Functions ---\r\n\r\n    /**\r\n     * @notice Holds a payment in escrow.\r\n     * @dev Can only be called by a trusted Verifier contract.\r\n     */\r\n    function holdPayment(\r\n        uint256 _assetId,\r\n        address _user,\r\n        uint256 _amount,\r\n        address _paymentSplitter\r\n    ) external onlyRole(VERIFIER_ROLE) {\r\n        uint256 escrowId = ++_escrowIdCounter;\r\n        escrows[escrowId] = EscrowItem({\r\n            id: escrowId,\r\n            user: _user,\r\n            assetId: _assetId,\r\n            amount: _amount,\r\n            paymentSplitter: _paymentSplitter,\r\n            releaseTime: block.timestamp + HOLD_PERIOD,\r\n            status: Status.Held\r\n        });\r\n        emit PaymentHeld(escrowId, _assetId, _user, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Opens a dispute for a payment held in escrow.\r\n     * @dev Can only be called by the user who made the payment, and only while status is Held.\r\n     */\r\n    function openDispute(uint256 _escrowId) external {\r\n        EscrowItem storage item = escrows[_escrowId];\r\n        if (item.user != msg.sender) revert NotAuthorized();\r\n        if (item.status != Status.Held) revert InvalidStatus();\r\n        if (block.timestamp > item.releaseTime) revert DisputeWindowClosed();\r\n\r\n        item.status = Status.Disputed;\r\n        emit DisputeOpened(_escrowId);\r\n    }\r\n    \r\n    /**\r\n     * @notice Releases a payment after the hold period is over.\r\n     * @dev Can be called by anyone, but only executes if status is Held and time is up.\r\n     * This function will split the payment between the contributors and the protocol treasury.\r\n     */\r\n    function release(uint256 _escrowId) external {\r\n        EscrowItem storage item = escrows[_escrowId];\r\n        if (item.status != Status.Held) revert InvalidStatus();\r\n        if (block.timestamp < item.releaseTime) revert HoldPeriodNotOver();\r\n\r\n        _splitAndSend(item); // MODIFIED: Use internal split function\r\n\r\n        item.status = Status.Released;\r\n    }\r\n    \r\n    /**\r\n     * @notice Resolves a dispute.\r\n     * @dev Can only be called by an Arbiter.\r\n     */\r\n    function resolveDispute(uint256 _escrowId, bool _refundToUser) external onlyRole(ARBITER_ROLE) {\r\n        EscrowItem storage item = escrows[_escrowId];\r\n        if (item.status != Status.Disputed) revert InvalidStatus();\r\n\r\n        if (_refundToUser) {\r\n            item.status = Status.Refunded;\r\n            usdc.safeTransfer(item.user, item.amount);\r\n            emit PaymentRefunded(_escrowId);\r\n        } else {\r\n            item.status = Status.Released;\r\n            _splitAndSend(item); // MODIFIED: Use internal split function\r\n        }\r\n    }\r\n\r\n    // --- Internal Functions ---\r\n\r\n    /**\r\n     * @notice Internal function to calculate fees and send funds.\r\n     * @dev Splits funds between contributors and the treasury.\r\n     */\r\n    function _splitAndSend(EscrowItem storage _item) internal {\r\n        uint16 currentFeeBps = feeTreasury.feeBps();\r\n        address multisig = feeTreasury.treasuryMultisig();\r\n        \r\n        uint256 totalAmount = _item.amount;\r\n        uint256 protocolFee = (totalAmount * currentFeeBps) / 10000;\r\n        uint256 amountToContributors = totalAmount - protocolFee;\r\n\r\n        // Transfer funds\r\n        usdc.safeTransfer(multisig, protocolFee);\r\n        usdc.safeTransfer(_item.paymentSplitter, amountToContributors);\r\n        \r\n        emit PaymentReleased(_item.id, amountToContributors, protocolFee);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/interfaces/IFeeTreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title IFeeTreasury Interface\r\n * @notice Defines the external functions for the FeeTreasury contract.\r\n */\r\ninterface IFeeTreasury {\r\n    /**\r\n     * @notice Returns the current protocol fee in basis points.\r\n     * @return The fee in basis points (e.g., 250 for 2.5%).\r\n     */\r\n    function feeBps() external view returns (uint16);\r\n\r\n    /**\r\n     * @notice Returns the address of the multisig wallet where fees are sent.\r\n     * @return The address of the treasury multisig.\r\n     */\r\n    function treasuryMultisig() external view returns (address);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Escrow.sol",
								"contracts/interfaces/IFeeTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Escrow.sol": {
				"Escrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_arbiter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_verifier",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeTreasuryAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DisputeWindowClosed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HoldPeriodNotOver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidStatus",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "escrowId",
									"type": "uint256"
								}
							],
							"name": "DisputeOpened",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "escrowId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PaymentHeld",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "escrowId",
									"type": "uint256"
								}
							],
							"name": "PaymentRefunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "escrowId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountToContributors",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"name": "PaymentReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARBITER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HOLD_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VERIFIER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "escrows",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "paymentSplitter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								},
								{
									"internalType": "enum Escrow.Status",
									"name": "status",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTreasury",
							"outputs": [
								{
									"internalType": "contract IFeeTreasury",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_paymentSplitter",
									"type": "address"
								}
							],
							"name": "holdPayment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_escrowId",
									"type": "uint256"
								}
							],
							"name": "openDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_escrowId",
									"type": "uint256"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_escrowId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_refundToUser",
									"type": "bool"
								}
							],
							"name": "resolveDispute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Hassan Ali",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"holdPayment(uint256,address,uint256,address)": {
								"details": "Can only be called by a trusted Verifier contract."
							},
							"openDispute(uint256)": {
								"details": "Can only be called by the user who made the payment, and only while status is Held."
							},
							"release(uint256)": {
								"details": "Can be called by anyone, but only executes if status is Held and time is up. This function will split the payment between the contributors and the protocol treasury."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"resolveDispute(uint256,bool)": {
								"details": "Can only be called by an Arbiter."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "Escrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Escrow.sol\":481:6064  contract Escrow is AccessControl {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/Escrow.sol\":1906:2589  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Escrow.sol\":2137:2138  0 */\n  0x00\n    /* \"contracts/Escrow.sol\":2119:2139  _admin == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Escrow.sol\":2119:2125  _admin */\n  dup6\n    /* \"contracts/Escrow.sol\":2119:2139  _admin == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Escrow.sol\":2119:2165  _admin == address(0) || _arbiter == address(0) */\n  dup1\n  tag_6\n  jumpi\n  pop\n    /* \"contracts/Escrow.sol\":2163:2164  0 */\n  0x00\n    /* \"contracts/Escrow.sol\":2143:2165  _arbiter == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Escrow.sol\":2143:2151  _arbiter */\n  dup5\n    /* \"contracts/Escrow.sol\":2143:2165  _arbiter == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Escrow.sol\":2119:2165  _admin == address(0) || _arbiter == address(0) */\ntag_6:\n    /* \"contracts/Escrow.sol\":2119:2192  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) */\n  dup1\n  tag_7\n  jumpi\n  pop\n    /* \"contracts/Escrow.sol\":2190:2191  0 */\n  0x00\n    /* \"contracts/Escrow.sol\":2169:2192  _verifier == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Escrow.sol\":2169:2178  _verifier */\n  dup4\n    /* \"contracts/Escrow.sol\":2169:2192  _verifier == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Escrow.sol\":2119:2192  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) */\ntag_7:\n    /* \"contracts/Escrow.sol\":2119:2222  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) */\n  dup1\n  tag_8\n  jumpi\n  pop\n    /* \"contracts/Escrow.sol\":2220:2221  0 */\n  0x00\n    /* \"contracts/Escrow.sol\":2196:2222  _usdcAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Escrow.sol\":2196:2208  _usdcAddress */\n  dup3\n    /* \"contracts/Escrow.sol\":2196:2222  _usdcAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Escrow.sol\":2119:2222  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) */\ntag_8:\n    /* \"contracts/Escrow.sol\":2119:2259  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) || _feeTreasuryAddress == address(0) */\n  dup1\n  tag_9\n  jumpi\n  pop\n    /* \"contracts/Escrow.sol\":2257:2258  0 */\n  0x00\n    /* \"contracts/Escrow.sol\":2226:2259  _feeTreasuryAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Escrow.sol\":2226:2245  _feeTreasuryAddress */\n  dup2\n    /* \"contracts/Escrow.sol\":2226:2259  _feeTreasuryAddress == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Escrow.sol\":2119:2259  _admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) || _feeTreasuryAddress == address(0) */\ntag_9:\n    /* \"contracts/Escrow.sol\":2115:2308  if (_admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) || _feeTreasuryAddress == address(0)) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"contracts/Escrow.sol\":2283:2296  ZeroAddress() */\n  mload(0x40)\n  0xd92e233d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Escrow.sol\":2115:2308  if (_admin == address(0) || _arbiter == address(0) || _verifier == address(0) || _usdcAddress == address(0) || _feeTreasuryAddress == address(0)) {... */\ntag_10:\n    /* \"contracts/Escrow.sol\":2320:2358  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/Escrow.sol\":2331:2349  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/Escrow.sol\":2351:2357  _admin */\n  dup7\n    /* \"contracts/Escrow.sol\":2320:2330  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/Escrow.sol\":2320:2358  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/Escrow.sol\":2369:2403  _grantRole(ARBITER_ROLE, _arbiter) */\n  tag_13\n    /* \"contracts/Escrow.sol\":999:1024  keccak256(\"ARBITER_ROLE\") */\n  0xbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae\n    /* \"contracts/Escrow.sol\":2394:2402  _arbiter */\n  dup6\n    /* \"contracts/Escrow.sol\":2369:2379  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/Escrow.sol\":2369:2403  _grantRole(ARBITER_ROLE, _arbiter) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/Escrow.sol\":2414:2450  _grantRole(VERIFIER_ROLE, _verifier) */\n  tag_14\n    /* \"contracts/Escrow.sol\":927:953  keccak256(\"VERIFIER_ROLE\") */\n  0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n    /* \"contracts/Escrow.sol\":2440:2449  _verifier */\n  dup5\n    /* \"contracts/Escrow.sol\":2414:2424  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/Escrow.sol\":2414:2450  _grantRole(VERIFIER_ROLE, _verifier) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/Escrow.sol\":2477:2489  _usdcAddress */\n  dup2\n    /* \"contracts/Escrow.sol\":2463:2490  usdc = IERC20(_usdcAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Escrow.sol\":2528:2547  _feeTreasuryAddress */\n  dup1\n    /* \"contracts/Escrow.sol\":2501:2548  feeTreasury = IFeeTreasury(_feeTreasuryAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Escrow.sol\":1906:2589  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Escrow.sol\":481:6064  contract Escrow is AccessControl {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_16:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_26:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_28:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_29:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_38\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_28\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_30:\n    /* \"#utility.yul\":641:665   */\n  tag_40\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_29\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_41:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_31:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_43\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_30\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1822   */\ntag_3:\n    /* \"#utility.yul\":951:957   */\n  0x00\n    /* \"#utility.yul\":959:965   */\n  dup1\n    /* \"#utility.yul\":967:973   */\n  0x00\n    /* \"#utility.yul\":975:981   */\n  dup1\n    /* \"#utility.yul\":983:989   */\n  0x00\n    /* \"#utility.yul\":1032:1035   */\n  0xa0\n    /* \"#utility.yul\":1020:1029   */\n  dup7\n    /* \"#utility.yul\":1011:1018   */\n  dup9\n    /* \"#utility.yul\":1007:1030   */\n  sub\n    /* \"#utility.yul\":1003:1036   */\n  slt\n    /* \"#utility.yul\":1000:1120   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1039:1118   */\n  tag_46\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1000:1120   */\ntag_45:\n    /* \"#utility.yul\":1159:1160   */\n  0x00\n    /* \"#utility.yul\":1184:1248   */\n  tag_47\n    /* \"#utility.yul\":1240:1247   */\n  dup9\n    /* \"#utility.yul\":1231:1237   */\n  dup3\n    /* \"#utility.yul\":1220:1229   */\n  dup10\n    /* \"#utility.yul\":1216:1238   */\n  add\n    /* \"#utility.yul\":1184:1248   */\n  tag_31\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1174:1248   */\n  swap6\n  pop\n    /* \"#utility.yul\":1130:1258   */\n  pop\n    /* \"#utility.yul\":1297:1299   */\n  0x20\n    /* \"#utility.yul\":1323:1387   */\n  tag_48\n    /* \"#utility.yul\":1379:1386   */\n  dup9\n    /* \"#utility.yul\":1370:1376   */\n  dup3\n    /* \"#utility.yul\":1359:1368   */\n  dup10\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1323:1387   */\n  tag_31\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1313:1387   */\n  swap5\n  pop\n    /* \"#utility.yul\":1268:1397   */\n  pop\n    /* \"#utility.yul\":1436:1438   */\n  0x40\n    /* \"#utility.yul\":1462:1526   */\n  tag_49\n    /* \"#utility.yul\":1518:1525   */\n  dup9\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1498:1507   */\n  dup10\n    /* \"#utility.yul\":1494:1516   */\n  add\n    /* \"#utility.yul\":1462:1526   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1452:1526   */\n  swap4\n  pop\n    /* \"#utility.yul\":1407:1536   */\n  pop\n    /* \"#utility.yul\":1575:1577   */\n  0x60\n    /* \"#utility.yul\":1601:1665   */\n  tag_50\n    /* \"#utility.yul\":1657:1664   */\n  dup9\n    /* \"#utility.yul\":1648:1654   */\n  dup3\n    /* \"#utility.yul\":1637:1646   */\n  dup10\n    /* \"#utility.yul\":1633:1655   */\n  add\n    /* \"#utility.yul\":1601:1665   */\n  tag_31\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1591:1665   */\n  swap3\n  pop\n    /* \"#utility.yul\":1546:1675   */\n  pop\n    /* \"#utility.yul\":1714:1717   */\n  0x80\n    /* \"#utility.yul\":1741:1805   */\n  tag_51\n    /* \"#utility.yul\":1797:1804   */\n  dup9\n    /* \"#utility.yul\":1788:1794   */\n  dup3\n    /* \"#utility.yul\":1777:1786   */\n  dup10\n    /* \"#utility.yul\":1773:1795   */\n  add\n    /* \"#utility.yul\":1741:1805   */\n  tag_31\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1731:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1685:1815   */\n  pop\n    /* \"#utility.yul\":845:1822   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"contracts/Escrow.sol\":481:6064  contract Escrow is AccessControl {... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xea1c3a463a334d4502a6bc7c1ce6676ab071cb26e08d8d603278a360d97dc14c\")\n  0x00\n  assignImmutable(\"0x9b67abc7a7f76ccc26ad76abed83eb7d77aa7a9a12352409554da899fc785375\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Escrow.sol\":481:6064  contract Escrow is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3e413bee\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe317ce7a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe7705db6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe86ca065\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x3e413bee\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4d104adf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x60dc2340\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x34b25ee2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x37bdc99b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x012f52ee\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27d00fb0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Escrow.sol\":1184:1229  mapping(uint256 => EscrowItem) public escrows */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Escrow.sol\":3540:3940  function openDispute(uint256 _escrowId) external {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Escrow.sol\":4701:5254  function resolveDispute(uint256 _escrowId, bool _refundToUser) external onlyRole(ARBITER_ROLE) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Escrow.sol\":4223:4588  function release(uint256 _escrowId) external {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/Escrow.sol\":1065:1093  IERC20 public immutable usdc */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Escrow.sol\":960:1024  bytes32 public constant ARBITER_ROLE = keccak256(\"ARBITER_ROLE\") */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Escrow.sol\":1100:1141  IFeeTreasury public immutable feeTreasury */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/Escrow.sol\":2755:3355  function holdPayment(... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/Escrow.sol\":887:953  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Escrow.sol\":1303:1347  uint256 public constant HOLD_PERIOD = 3 days */\n    tag_19:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Escrow.sol\":1184:1229  mapping(uint256 => EscrowItem) public escrows */\n    tag_26:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":3540:3940  function openDispute(uint256 _escrowId) external {... */\n    tag_43:\n        /* \"contracts/Escrow.sol\":3600:3623  EscrowItem storage item */\n      0x00\n        /* \"contracts/Escrow.sol\":3626:3633  escrows */\n      0x01\n        /* \"contracts/Escrow.sol\":3626:3644  escrows[_escrowId] */\n      0x00\n        /* \"contracts/Escrow.sol\":3634:3643  _escrowId */\n      dup4\n        /* \"contracts/Escrow.sol\":3626:3644  escrows[_escrowId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Escrow.sol\":3600:3644  EscrowItem storage item = escrows[_escrowId] */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":3672:3682  msg.sender */\n      caller\n        /* \"contracts/Escrow.sol\":3659:3682  item.user != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Escrow.sol\":3659:3663  item */\n      dup2\n        /* \"contracts/Escrow.sol\":3659:3668  item.user */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Escrow.sol\":3659:3682  item.user != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Escrow.sol\":3655:3706  if (item.user != msg.sender) revert NotAuthorized() */\n      tag_96\n      jumpi\n        /* \"contracts/Escrow.sol\":3691:3706  NotAuthorized() */\n      mload(0x40)\n      0xea8e4eb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":3655:3706  if (item.user != msg.sender) revert NotAuthorized() */\n    tag_96:\n        /* \"contracts/Escrow.sol\":3736:3747  Status.Held */\n      0x00\n        /* \"contracts/Escrow.sol\":3721:3747  item.status != Status.Held */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_97\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n    tag_97:\n        /* \"contracts/Escrow.sol\":3721:3725  item */\n      dup2\n        /* \"contracts/Escrow.sol\":3721:3732  item.status */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Escrow.sol\":3721:3747  item.status != Status.Held */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_100\n      jumpi\n      tag_101\n      tag_99\n      jump\t// in\n    tag_101:\n    tag_100:\n      eq\n        /* \"contracts/Escrow.sol\":3717:3771  if (item.status != Status.Held) revert InvalidStatus() */\n      tag_102\n      jumpi\n        /* \"contracts/Escrow.sol\":3756:3771  InvalidStatus() */\n      mload(0x40)\n      0xf525e32000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":3717:3771  if (item.status != Status.Held) revert InvalidStatus() */\n    tag_102:\n        /* \"contracts/Escrow.sol\":3804:3808  item */\n      dup1\n        /* \"contracts/Escrow.sol\":3804:3820  item.releaseTime */\n      0x05\n      add\n      sload\n        /* \"contracts/Escrow.sol\":3786:3801  block.timestamp */\n      timestamp\n        /* \"contracts/Escrow.sol\":3786:3820  block.timestamp > item.releaseTime */\n      gt\n        /* \"contracts/Escrow.sol\":3782:3850  if (block.timestamp > item.releaseTime) revert DisputeWindowClosed() */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/Escrow.sol\":3829:3850  DisputeWindowClosed() */\n      mload(0x40)\n      0x435a3cfe00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":3782:3850  if (block.timestamp > item.releaseTime) revert DisputeWindowClosed() */\n    tag_103:\n        /* \"contracts/Escrow.sol\":3877:3892  Status.Disputed */\n      0x01\n        /* \"contracts/Escrow.sol\":3863:3867  item */\n      dup2\n        /* \"contracts/Escrow.sol\":3863:3874  item.status */\n      0x06\n      add\n      0x00\n        /* \"contracts/Escrow.sol\":3863:3892  item.status = Status.Disputed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_104\n      jumpi\n      tag_105\n      tag_99\n      jump\t// in\n    tag_105:\n    tag_104:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Escrow.sol\":3922:3931  _escrowId */\n      dup2\n        /* \"contracts/Escrow.sol\":3908:3932  DisputeOpened(_escrowId) */\n      0xed50123fe46d12537dcaae53f33aee1c64bcc9e4f222560f3bae6c0824040dd3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Escrow.sol\":3589:3940  {... */\n      pop\n        /* \"contracts/Escrow.sol\":3540:3940  function openDispute(uint256 _escrowId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_38\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":4701:5254  function resolveDispute(uint256 _escrowId, bool _refundToUser) external onlyRole(ARBITER_ROLE) {... */\n    tag_51:\n        /* \"contracts/Escrow.sol\":999:1024  keccak256(\"ARBITER_ROLE\") */\n      0xbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/Escrow.sol\":4807:4830  EscrowItem storage item */\n      0x00\n        /* \"contracts/Escrow.sol\":4833:4840  escrows */\n      0x01\n        /* \"contracts/Escrow.sol\":4833:4851  escrows[_escrowId] */\n      0x00\n        /* \"contracts/Escrow.sol\":4841:4850  _escrowId */\n      dup6\n        /* \"contracts/Escrow.sol\":4833:4851  escrows[_escrowId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Escrow.sol\":4807:4851  EscrowItem storage item = escrows[_escrowId] */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":4881:4896  Status.Disputed */\n      0x01\n        /* \"contracts/Escrow.sol\":4866:4896  item.status != Status.Disputed */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_99\n      jump\t// in\n    tag_117:\n    tag_116:\n        /* \"contracts/Escrow.sol\":4866:4870  item */\n      dup2\n        /* \"contracts/Escrow.sol\":4866:4877  item.status */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Escrow.sol\":4866:4896  item.status != Status.Disputed */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_118\n      jumpi\n      tag_119\n      tag_99\n      jump\t// in\n    tag_119:\n    tag_118:\n      eq\n        /* \"contracts/Escrow.sol\":4862:4920  if (item.status != Status.Disputed) revert InvalidStatus() */\n      tag_120\n      jumpi\n        /* \"contracts/Escrow.sol\":4905:4920  InvalidStatus() */\n      mload(0x40)\n      0xf525e32000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":4862:4920  if (item.status != Status.Disputed) revert InvalidStatus() */\n    tag_120:\n        /* \"contracts/Escrow.sol\":4937:4950  _refundToUser */\n      dup3\n        /* \"contracts/Escrow.sol\":4933:5247  if (_refundToUser) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/Escrow.sol\":4981:4996  Status.Refunded */\n      0x03\n        /* \"contracts/Escrow.sol\":4967:4971  item */\n      dup2\n        /* \"contracts/Escrow.sol\":4967:4978  item.status */\n      0x06\n      add\n      0x00\n        /* \"contracts/Escrow.sol\":4967:4996  item.status = Status.Refunded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_99\n      jump\t// in\n    tag_123:\n    tag_122:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Escrow.sol\":5011:5052  usdc.safeTransfer(item.user, item.amount) */\n      tag_124\n        /* \"contracts/Escrow.sol\":5029:5033  item */\n      dup2\n        /* \"contracts/Escrow.sol\":5029:5038  item.user */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Escrow.sol\":5040:5044  item */\n      dup3\n        /* \"contracts/Escrow.sol\":5040:5051  item.amount */\n      0x03\n      add\n      sload\n        /* \"contracts/Escrow.sol\":5011:5015  usdc */\n      immutable(\"0x9b67abc7a7f76ccc26ad76abed83eb7d77aa7a9a12352409554da899fc785375\")\n        /* \"contracts/Escrow.sol\":5011:5028  usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_125\n      swap1\n        /* \"contracts/Escrow.sol\":5011:5052  usdc.safeTransfer(item.user, item.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/Escrow.sol\":5088:5097  _escrowId */\n      dup4\n        /* \"contracts/Escrow.sol\":5072:5098  PaymentRefunded(_escrowId) */\n      0xc12258dbc8f5aaf21f9b7ef40fbfb87befc7c46ac42dccc2c5cc565347e56ee6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Escrow.sol\":4933:5247  if (_refundToUser) {... */\n      jump(tag_126)\n    tag_121:\n        /* \"contracts/Escrow.sol\":5145:5160  Status.Released */\n      0x02\n        /* \"contracts/Escrow.sol\":5131:5135  item */\n      dup2\n        /* \"contracts/Escrow.sol\":5131:5142  item.status */\n      0x06\n      add\n      0x00\n        /* \"contracts/Escrow.sol\":5131:5160  item.status = Status.Released */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_99\n      jump\t// in\n    tag_128:\n    tag_127:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Escrow.sol\":5175:5194  _splitAndSend(item) */\n      tag_129\n        /* \"contracts/Escrow.sol\":5189:5193  item */\n      dup2\n        /* \"contracts/Escrow.sol\":5175:5188  _splitAndSend */\n      tag_130\n        /* \"contracts/Escrow.sol\":5175:5194  _splitAndSend(item) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Escrow.sol\":4933:5247  if (_refundToUser) {... */\n    tag_126:\n        /* \"contracts/Escrow.sol\":4796:5254  {... */\n      pop\n        /* \"contracts/Escrow.sol\":4701:5254  function resolveDispute(uint256 _escrowId, bool _refundToUser) external onlyRole(ARBITER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":4223:4588  function release(uint256 _escrowId) external {... */\n    tag_57:\n        /* \"contracts/Escrow.sol\":4279:4302  EscrowItem storage item */\n      0x00\n        /* \"contracts/Escrow.sol\":4305:4312  escrows */\n      0x01\n        /* \"contracts/Escrow.sol\":4305:4323  escrows[_escrowId] */\n      0x00\n        /* \"contracts/Escrow.sol\":4313:4322  _escrowId */\n      dup4\n        /* \"contracts/Escrow.sol\":4305:4323  escrows[_escrowId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Escrow.sol\":4279:4323  EscrowItem storage item = escrows[_escrowId] */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":4353:4364  Status.Held */\n      0x00\n        /* \"contracts/Escrow.sol\":4338:4364  item.status != Status.Held */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_138\n      jumpi\n      tag_139\n      tag_99\n      jump\t// in\n    tag_139:\n    tag_138:\n        /* \"contracts/Escrow.sol\":4338:4342  item */\n      dup2\n        /* \"contracts/Escrow.sol\":4338:4349  item.status */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Escrow.sol\":4338:4364  item.status != Status.Held */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      tag_141\n      tag_99\n      jump\t// in\n    tag_141:\n    tag_140:\n      eq\n        /* \"contracts/Escrow.sol\":4334:4388  if (item.status != Status.Held) revert InvalidStatus() */\n      tag_142\n      jumpi\n        /* \"contracts/Escrow.sol\":4373:4388  InvalidStatus() */\n      mload(0x40)\n      0xf525e32000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":4334:4388  if (item.status != Status.Held) revert InvalidStatus() */\n    tag_142:\n        /* \"contracts/Escrow.sol\":4421:4425  item */\n      dup1\n        /* \"contracts/Escrow.sol\":4421:4437  item.releaseTime */\n      0x05\n      add\n      sload\n        /* \"contracts/Escrow.sol\":4403:4418  block.timestamp */\n      timestamp\n        /* \"contracts/Escrow.sol\":4403:4437  block.timestamp < item.releaseTime */\n      lt\n        /* \"contracts/Escrow.sol\":4399:4465  if (block.timestamp < item.releaseTime) revert HoldPeriodNotOver() */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/Escrow.sol\":4446:4465  HoldPeriodNotOver() */\n      mload(0x40)\n      0x5d5690e000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Escrow.sol\":4399:4465  if (block.timestamp < item.releaseTime) revert HoldPeriodNotOver() */\n    tag_143:\n        /* \"contracts/Escrow.sol\":4478:4497  _splitAndSend(item) */\n      tag_144\n        /* \"contracts/Escrow.sol\":4492:4496  item */\n      dup2\n        /* \"contracts/Escrow.sol\":4478:4491  _splitAndSend */\n      tag_130\n        /* \"contracts/Escrow.sol\":4478:4497  _splitAndSend(item) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Escrow.sol\":4565:4580  Status.Released */\n      0x02\n        /* \"contracts/Escrow.sol\":4551:4555  item */\n      dup2\n        /* \"contracts/Escrow.sol\":4551:4562  item.status */\n      0x06\n      add\n      0x00\n        /* \"contracts/Escrow.sol\":4551:4580  item.status = Status.Released */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_145\n      jumpi\n      tag_146\n      tag_99\n      jump\t// in\n    tag_146:\n    tag_145:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Escrow.sol\":4268:4588  {... */\n      pop\n        /* \"contracts/Escrow.sol\":4223:4588  function release(uint256 _escrowId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":1065:1093  IERC20 public immutable usdc */\n    tag_59:\n      immutable(\"0x9b67abc7a7f76ccc26ad76abed83eb7d77aa7a9a12352409554da899fc785375\")\n      dup2\n      jump\t// out\n        /* \"contracts/Escrow.sol\":960:1024  bytes32 public constant ARBITER_ROLE = keccak256(\"ARBITER_ROLE\") */\n    tag_63:\n        /* \"contracts/Escrow.sol\":999:1024  keccak256(\"ARBITER_ROLE\") */\n      0xbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae\n        /* \"contracts/Escrow.sol\":960:1024  bytes32 public constant ARBITER_ROLE = keccak256(\"ARBITER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/Escrow.sol\":1100:1141  IFeeTreasury public immutable feeTreasury */\n    tag_66:\n      immutable(\"0xea1c3a463a334d4502a6bc7c1ce6676ab071cb26e08d8d603278a360d97dc14c\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_38\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":2755:3355  function holdPayment(... */\n    tag_82:\n        /* \"contracts/Escrow.sol\":927:953  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Escrow.sol\":2939:2955  uint256 escrowId */\n      0x00\n        /* \"contracts/Escrow.sol\":2960:2976  _escrowIdCounter */\n      0x02\n      0x00\n        /* \"contracts/Escrow.sol\":2958:2976  ++_escrowIdCounter */\n      dup2\n      sload\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Escrow.sol\":2939:2976  uint256 escrowId = ++_escrowIdCounter */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Escrow.sol\":3037:3045  escrowId */\n      dup3\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":3066:3071  _user */\n      dup7\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":3095:3103  _assetId */\n      dup8\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":3126:3133  _amount */\n      dup6\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":3165:3181  _paymentSplitter */\n      dup5\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":1341:1347  3 days */\n      0x03f480\n        /* \"contracts/Escrow.sol\":3209:3224  block.timestamp */\n      timestamp\n        /* \"contracts/Escrow.sol\":3209:3238  block.timestamp + HOLD_PERIOD */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Escrow.sol\":3261:3272  Status.Held */\n      0x00\n        /* \"contracts/Escrow.sol\":3007:3284  EscrowItem({... */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_161\n      tag_99\n      jump\t// in\n    tag_161:\n    tag_160:\n      dup2\n      mstore\n      pop\n        /* \"contracts/Escrow.sol\":2987:2994  escrows */\n      0x01\n        /* \"contracts/Escrow.sol\":2987:3004  escrows[escrowId] */\n      0x00\n        /* \"contracts/Escrow.sol\":2995:3003  escrowId */\n      dup4\n        /* \"contracts/Escrow.sol\":2987:3004  escrows[escrowId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Escrow.sol\":2987:3284  escrows[escrowId] = EscrowItem({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      tag_163\n      tag_99\n      jump\t// in\n    tag_163:\n    tag_162:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Escrow.sol\":3332:3337  _user */\n      dup5\n        /* \"contracts/Escrow.sol\":3300:3347  PaymentHeld(escrowId, _assetId, _user, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Escrow.sol\":3322:3330  _assetId */\n      dup7\n        /* \"contracts/Escrow.sol\":3312:3320  escrowId */\n      dup3\n        /* \"contracts/Escrow.sol\":3300:3347  PaymentHeld(escrowId, _assetId, _user, _amount) */\n      0x43984c1e017ed0311ce2b121da72130b77d64f8b0652c8c80d70a31ead3e2904\n        /* \"contracts/Escrow.sol\":3339:3346  _amount */\n      dup8\n        /* \"contracts/Escrow.sol\":3300:3347  PaymentHeld(escrowId, _assetId, _user, _amount) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Escrow.sol\":2928:3355  {... */\n      pop\n        /* \"contracts/Escrow.sol\":2755:3355  function holdPayment(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":887:953  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n    tag_84:\n        /* \"contracts/Escrow.sol\":927:953  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"contracts/Escrow.sol\":887:953  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/Escrow.sol\":1303:1347  uint256 public constant HOLD_PERIOD = 3 days */\n    tag_87:\n        /* \"contracts/Escrow.sol\":1341:1347  3 days */\n      0x03f480\n        /* \"contracts/Escrow.sol\":1303:1347  uint256 public constant HOLD_PERIOD = 3 days */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_170)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_170:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Escrow.sol\":5450:6061  function _splitAndSend(EscrowItem storage _item) internal {... */\n    tag_130:\n        /* \"contracts/Escrow.sol\":5519:5539  uint16 currentFeeBps */\n      0x00\n        /* \"contracts/Escrow.sol\":5542:5553  feeTreasury */\n      immutable(\"0xea1c3a463a334d4502a6bc7c1ce6676ab071cb26e08d8d603278a360d97dc14c\")\n        /* \"contracts/Escrow.sol\":5542:5560  feeTreasury.feeBps */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24a9d853\n        /* \"contracts/Escrow.sol\":5542:5562  feeTreasury.feeBps() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/Escrow.sol\":5519:5562  uint16 currentFeeBps = feeTreasury.feeBps() */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":5573:5589  address multisig */\n      0x00\n        /* \"contracts/Escrow.sol\":5592:5603  feeTreasury */\n      immutable(\"0xea1c3a463a334d4502a6bc7c1ce6676ab071cb26e08d8d603278a360d97dc14c\")\n        /* \"contracts/Escrow.sol\":5592:5620  feeTreasury.treasuryMultisig */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbf628408\n        /* \"contracts/Escrow.sol\":5592:5622  feeTreasury.treasuryMultisig() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/Escrow.sol\":5573:5622  address multisig = feeTreasury.treasuryMultisig() */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":5643:5662  uint256 totalAmount */\n      0x00\n        /* \"contracts/Escrow.sol\":5665:5670  _item */\n      dup4\n        /* \"contracts/Escrow.sol\":5665:5677  _item.amount */\n      0x03\n      add\n      sload\n        /* \"contracts/Escrow.sol\":5643:5677  uint256 totalAmount = _item.amount */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":5688:5707  uint256 protocolFee */\n      0x00\n        /* \"contracts/Escrow.sol\":5742:5747  10000 */\n      0x2710\n        /* \"contracts/Escrow.sol\":5725:5738  currentFeeBps */\n      dup5\n        /* \"contracts/Escrow.sol\":5711:5738  totalAmount * currentFeeBps */\n      0xffff\n      and\n        /* \"contracts/Escrow.sol\":5711:5722  totalAmount */\n      dup4\n        /* \"contracts/Escrow.sol\":5711:5738  totalAmount * currentFeeBps */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/Escrow.sol\":5710:5747  (totalAmount * currentFeeBps) / 10000 */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/Escrow.sol\":5688:5747  uint256 protocolFee = (totalAmount * currentFeeBps) / 10000 */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":5758:5786  uint256 amountToContributors */\n      0x00\n        /* \"contracts/Escrow.sol\":5803:5814  protocolFee */\n      dup2\n        /* \"contracts/Escrow.sol\":5789:5800  totalAmount */\n      dup4\n        /* \"contracts/Escrow.sol\":5789:5814  totalAmount - protocolFee */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/Escrow.sol\":5758:5814  uint256 amountToContributors = totalAmount - protocolFee */\n      swap1\n      pop\n        /* \"contracts/Escrow.sol\":5854:5894  usdc.safeTransfer(multisig, protocolFee) */\n      tag_195\n        /* \"contracts/Escrow.sol\":5872:5880  multisig */\n      dup5\n        /* \"contracts/Escrow.sol\":5882:5893  protocolFee */\n      dup4\n        /* \"contracts/Escrow.sol\":5854:5858  usdc */\n      immutable(\"0x9b67abc7a7f76ccc26ad76abed83eb7d77aa7a9a12352409554da899fc785375\")\n        /* \"contracts/Escrow.sol\":5854:5871  usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_125\n      swap1\n        /* \"contracts/Escrow.sol\":5854:5894  usdc.safeTransfer(multisig, protocolFee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/Escrow.sol\":5905:5967  usdc.safeTransfer(_item.paymentSplitter, amountToContributors) */\n      tag_196\n        /* \"contracts/Escrow.sol\":5923:5928  _item */\n      dup7\n        /* \"contracts/Escrow.sol\":5923:5944  _item.paymentSplitter */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Escrow.sol\":5946:5966  amountToContributors */\n      dup3\n        /* \"contracts/Escrow.sol\":5905:5909  usdc */\n      immutable(\"0x9b67abc7a7f76ccc26ad76abed83eb7d77aa7a9a12352409554da899fc785375\")\n        /* \"contracts/Escrow.sol\":5905:5922  usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_125\n      swap1\n        /* \"contracts/Escrow.sol\":5905:5967  usdc.safeTransfer(_item.paymentSplitter, amountToContributors) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"contracts/Escrow.sol\":6009:6014  _item */\n      dup6\n        /* \"contracts/Escrow.sol\":6009:6017  _item.id */\n      0x00\n      add\n      sload\n        /* \"contracts/Escrow.sol\":5993:6053  PaymentReleased(_item.id, amountToContributors, protocolFee) */\n      0x3c70b1e8034b5738ec77fbfdaa4d28906a0b3160018d67a2dc7b534e53e33fe0\n        /* \"contracts/Escrow.sol\":6019:6039  amountToContributors */\n      dup3\n        /* \"contracts/Escrow.sol\":6041:6052  protocolFee */\n      dup5\n        /* \"contracts/Escrow.sol\":5993:6053  PaymentReleased(_item.id, amountToContributors, protocolFee) */\n      mload(0x40)\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Escrow.sol\":5508:6061  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Escrow.sol\":5450:6061  function _splitAndSend(EscrowItem storage _item) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_200)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_200:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_213)\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_220:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_221:\n        /* \"#utility.yul\":490:514   */\n      tag_263\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_220\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_264:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_222:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_266\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_221\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_25:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_269\n      tag_218\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":766:885   */\n    tag_268:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_270\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_222\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_223:\n        /* \"#utility.yul\":1112:1136   */\n      tag_272\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_220\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1275   */\n    tag_224:\n        /* \"#utility.yul\":1186:1193   */\n      0x00\n        /* \"#utility.yul\":1226:1268   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1219:1224   */\n      dup3\n        /* \"#utility.yul\":1215:1269   */\n      and\n        /* \"#utility.yul\":1204:1269   */\n      swap1\n      pop\n        /* \"#utility.yul\":1149:1275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1377   */\n    tag_225:\n        /* \"#utility.yul\":1318:1325   */\n      0x00\n        /* \"#utility.yul\":1347:1371   */\n      tag_275\n        /* \"#utility.yul\":1365:1370   */\n      dup3\n        /* \"#utility.yul\":1347:1371   */\n      tag_224\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1336:1371   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1501   */\n    tag_226:\n        /* \"#utility.yul\":1470:1494   */\n      tag_277\n        /* \"#utility.yul\":1488:1493   */\n      dup2\n        /* \"#utility.yul\":1470:1494   */\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1465:1468   */\n      dup3\n        /* \"#utility.yul\":1458:1495   */\n      mstore\n        /* \"#utility.yul\":1383:1501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1687   */\n    tag_99:\n        /* \"#utility.yul\":1555:1632   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1633   */\n      mstore\n        /* \"#utility.yul\":1652:1656   */\n      0x21\n        /* \"#utility.yul\":1649:1650   */\n      0x04\n        /* \"#utility.yul\":1642:1657   */\n      mstore\n        /* \"#utility.yul\":1676:1680   */\n      0x24\n        /* \"#utility.yul\":1673:1674   */\n      0x00\n        /* \"#utility.yul\":1666:1681   */\n      revert\n        /* \"#utility.yul\":1693:1809   */\n    tag_227:\n        /* \"#utility.yul\":1777:1778   */\n      0x04\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1779   */\n      lt\n        /* \"#utility.yul\":1757:1803   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1783:1801   */\n      tag_281\n      tag_99\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1757:1803   */\n    tag_280:\n        /* \"#utility.yul\":1693:1809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1815:1948   */\n    tag_228:\n        /* \"#utility.yul\":1863:1870   */\n      0x00\n        /* \"#utility.yul\":1892:1897   */\n      dup2\n        /* \"#utility.yul\":1881:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1898:1942   */\n      tag_283\n        /* \"#utility.yul\":1936:1941   */\n      dup3\n        /* \"#utility.yul\":1898:1942   */\n      tag_227\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1815:1948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1954:2087   */\n    tag_229:\n        /* \"#utility.yul\":2013:2022   */\n      0x00\n        /* \"#utility.yul\":2046:2081   */\n      tag_285\n        /* \"#utility.yul\":2075:2080   */\n      dup3\n        /* \"#utility.yul\":2046:2081   */\n      tag_228\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2033:2081   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2242   */\n    tag_230:\n        /* \"#utility.yul\":2189:2235   */\n      tag_287\n        /* \"#utility.yul\":2229:2234   */\n      dup2\n        /* \"#utility.yul\":2189:2235   */\n      tag_229\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2184:2187   */\n      dup3\n        /* \"#utility.yul\":2177:2236   */\n      mstore\n        /* \"#utility.yul\":2093:2242   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2248:3152   */\n    tag_28:\n        /* \"#utility.yul\":2518:2522   */\n      0x00\n        /* \"#utility.yul\":2556:2559   */\n      0xe0\n        /* \"#utility.yul\":2545:2554   */\n      dup3\n        /* \"#utility.yul\":2541:2560   */\n      add\n        /* \"#utility.yul\":2533:2560   */\n      swap1\n      pop\n        /* \"#utility.yul\":2570:2641   */\n      tag_289\n        /* \"#utility.yul\":2638:2639   */\n      0x00\n        /* \"#utility.yul\":2627:2636   */\n      dup4\n        /* \"#utility.yul\":2623:2640   */\n      add\n        /* \"#utility.yul\":2614:2620   */\n      dup11\n        /* \"#utility.yul\":2570:2641   */\n      tag_223\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2651:2723   */\n      tag_290\n        /* \"#utility.yul\":2719:2721   */\n      0x20\n        /* \"#utility.yul\":2708:2717   */\n      dup4\n        /* \"#utility.yul\":2704:2722   */\n      add\n        /* \"#utility.yul\":2695:2701   */\n      dup10\n        /* \"#utility.yul\":2651:2723   */\n      tag_226\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2733:2805   */\n      tag_291\n        /* \"#utility.yul\":2801:2803   */\n      0x40\n        /* \"#utility.yul\":2790:2799   */\n      dup4\n        /* \"#utility.yul\":2786:2804   */\n      add\n        /* \"#utility.yul\":2777:2783   */\n      dup9\n        /* \"#utility.yul\":2733:2805   */\n      tag_223\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2815:2887   */\n      tag_292\n        /* \"#utility.yul\":2883:2885   */\n      0x60\n        /* \"#utility.yul\":2872:2881   */\n      dup4\n        /* \"#utility.yul\":2868:2886   */\n      add\n        /* \"#utility.yul\":2859:2865   */\n      dup8\n        /* \"#utility.yul\":2815:2887   */\n      tag_223\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2897:2970   */\n      tag_293\n        /* \"#utility.yul\":2965:2968   */\n      0x80\n        /* \"#utility.yul\":2954:2963   */\n      dup4\n        /* \"#utility.yul\":2950:2969   */\n      add\n        /* \"#utility.yul\":2941:2947   */\n      dup7\n        /* \"#utility.yul\":2897:2970   */\n      tag_226\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2980:3053   */\n      tag_294\n        /* \"#utility.yul\":3048:3051   */\n      0xa0\n        /* \"#utility.yul\":3037:3046   */\n      dup4\n        /* \"#utility.yul\":3033:3052   */\n      add\n        /* \"#utility.yul\":3024:3030   */\n      dup6\n        /* \"#utility.yul\":2980:3053   */\n      tag_223\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3063:3145   */\n      tag_295\n        /* \"#utility.yul\":3140:3143   */\n      0xc0\n        /* \"#utility.yul\":3129:3138   */\n      dup4\n        /* \"#utility.yul\":3125:3144   */\n      add\n        /* \"#utility.yul\":3116:3122   */\n      dup5\n        /* \"#utility.yul\":3063:3145   */\n      tag_230\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2248:3152   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3307   */\n    tag_231:\n        /* \"#utility.yul\":3194:3201   */\n      0x00\n        /* \"#utility.yul\":3234:3300   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3227:3232   */\n      dup3\n        /* \"#utility.yul\":3223:3301   */\n      and\n        /* \"#utility.yul\":3212:3301   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3313:3433   */\n    tag_232:\n        /* \"#utility.yul\":3385:3408   */\n      tag_298\n        /* \"#utility.yul\":3402:3407   */\n      dup2\n        /* \"#utility.yul\":3385:3408   */\n      tag_231\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3378:3383   */\n      dup2\n        /* \"#utility.yul\":3375:3409   */\n      eq\n        /* \"#utility.yul\":3365:3427   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3420:3421   */\n      dup1\n        /* \"#utility.yul\":3413:3425   */\n      revert\n        /* \"#utility.yul\":3365:3427   */\n    tag_299:\n        /* \"#utility.yul\":3313:3433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3439:3576   */\n    tag_233:\n        /* \"#utility.yul\":3484:3489   */\n      0x00\n        /* \"#utility.yul\":3522:3528   */\n      dup2\n        /* \"#utility.yul\":3509:3529   */\n      calldataload\n        /* \"#utility.yul\":3500:3529   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3570   */\n      tag_301\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3538:3570   */\n      tag_232\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3439:3576   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3909   */\n    tag_31:\n        /* \"#utility.yul\":3640:3646   */\n      0x00\n        /* \"#utility.yul\":3689:3691   */\n      0x20\n        /* \"#utility.yul\":3677:3686   */\n      dup3\n        /* \"#utility.yul\":3668:3675   */\n      dup5\n        /* \"#utility.yul\":3664:3687   */\n      sub\n        /* \"#utility.yul\":3660:3692   */\n      slt\n        /* \"#utility.yul\":3657:3776   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3695:3774   */\n      tag_304\n      tag_218\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3657:3776   */\n    tag_303:\n        /* \"#utility.yul\":3815:3816   */\n      0x00\n        /* \"#utility.yul\":3840:3892   */\n      tag_305\n        /* \"#utility.yul\":3884:3891   */\n      dup5\n        /* \"#utility.yul\":3875:3881   */\n      dup3\n        /* \"#utility.yul\":3864:3873   */\n      dup6\n        /* \"#utility.yul\":3860:3882   */\n      add\n        /* \"#utility.yul\":3840:3892   */\n      tag_233\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3830:3892   */\n      swap2\n      pop\n        /* \"#utility.yul\":3786:3902   */\n      pop\n        /* \"#utility.yul\":3582:3909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3915:4005   */\n    tag_234:\n        /* \"#utility.yul\":3949:3956   */\n      0x00\n        /* \"#utility.yul\":3992:3997   */\n      dup2\n        /* \"#utility.yul\":3985:3998   */\n      iszero\n        /* \"#utility.yul\":3978:3999   */\n      iszero\n        /* \"#utility.yul\":3967:3999   */\n      swap1\n      pop\n        /* \"#utility.yul\":3915:4005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4120   */\n    tag_235:\n        /* \"#utility.yul\":4092:4113   */\n      tag_308\n        /* \"#utility.yul\":4107:4112   */\n      dup2\n        /* \"#utility.yul\":4092:4113   */\n      tag_234\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4087:4090   */\n      dup3\n        /* \"#utility.yul\":4080:4114   */\n      mstore\n        /* \"#utility.yul\":4011:4120   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4126:4336   */\n    tag_34:\n        /* \"#utility.yul\":4213:4217   */\n      0x00\n        /* \"#utility.yul\":4251:4253   */\n      0x20\n        /* \"#utility.yul\":4240:4249   */\n      dup3\n        /* \"#utility.yul\":4236:4254   */\n      add\n        /* \"#utility.yul\":4228:4254   */\n      swap1\n      pop\n        /* \"#utility.yul\":4264:4329   */\n      tag_310\n        /* \"#utility.yul\":4326:4327   */\n      0x00\n        /* \"#utility.yul\":4315:4324   */\n      dup4\n        /* \"#utility.yul\":4311:4328   */\n      add\n        /* \"#utility.yul\":4302:4308   */\n      dup5\n        /* \"#utility.yul\":4264:4329   */\n      tag_235\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4126:4336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4342:4419   */\n    tag_236:\n        /* \"#utility.yul\":4379:4386   */\n      0x00\n        /* \"#utility.yul\":4408:4413   */\n      dup2\n        /* \"#utility.yul\":4397:4413   */\n      swap1\n      pop\n        /* \"#utility.yul\":4342:4419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4425:4547   */\n    tag_237:\n        /* \"#utility.yul\":4498:4522   */\n      tag_313\n        /* \"#utility.yul\":4516:4521   */\n      dup2\n        /* \"#utility.yul\":4498:4522   */\n      tag_236\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4491:4496   */\n      dup2\n        /* \"#utility.yul\":4488:4523   */\n      eq\n        /* \"#utility.yul\":4478:4541   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4537:4538   */\n      0x00\n        /* \"#utility.yul\":4534:4535   */\n      dup1\n        /* \"#utility.yul\":4527:4539   */\n      revert\n        /* \"#utility.yul\":4478:4541   */\n    tag_314:\n        /* \"#utility.yul\":4425:4547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4553:4692   */\n    tag_238:\n        /* \"#utility.yul\":4599:4604   */\n      0x00\n        /* \"#utility.yul\":4637:4643   */\n      dup2\n        /* \"#utility.yul\":4624:4644   */\n      calldataload\n        /* \"#utility.yul\":4615:4644   */\n      swap1\n      pop\n        /* \"#utility.yul\":4653:4686   */\n      tag_316\n        /* \"#utility.yul\":4680:4685   */\n      dup2\n        /* \"#utility.yul\":4653:4686   */\n      tag_237\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4553:4692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4698:5027   */\n    tag_37:\n        /* \"#utility.yul\":4757:4763   */\n      0x00\n        /* \"#utility.yul\":4806:4808   */\n      0x20\n        /* \"#utility.yul\":4794:4803   */\n      dup3\n        /* \"#utility.yul\":4785:4792   */\n      dup5\n        /* \"#utility.yul\":4781:4804   */\n      sub\n        /* \"#utility.yul\":4777:4809   */\n      slt\n        /* \"#utility.yul\":4774:4893   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4812:4891   */\n      tag_319\n      tag_218\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4774:4893   */\n    tag_318:\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4957:5010   */\n      tag_320\n        /* \"#utility.yul\":5002:5009   */\n      dup5\n        /* \"#utility.yul\":4993:4999   */\n      dup3\n        /* \"#utility.yul\":4982:4991   */\n      dup6\n        /* \"#utility.yul\":4978:5000   */\n      add\n        /* \"#utility.yul\":4957:5010   */\n      tag_238\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4947:5010   */\n      swap2\n      pop\n        /* \"#utility.yul\":4903:5020   */\n      pop\n        /* \"#utility.yul\":4698:5027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5033:5151   */\n    tag_239:\n        /* \"#utility.yul\":5120:5144   */\n      tag_322\n        /* \"#utility.yul\":5138:5143   */\n      dup2\n        /* \"#utility.yul\":5120:5144   */\n      tag_236\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5115:5118   */\n      dup3\n        /* \"#utility.yul\":5108:5145   */\n      mstore\n        /* \"#utility.yul\":5033:5151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5379   */\n    tag_40:\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5288:5290   */\n      0x20\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5273:5291   */\n      add\n        /* \"#utility.yul\":5265:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5372   */\n      tag_324\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5358:5367   */\n      dup4\n        /* \"#utility.yul\":5354:5371   */\n      add\n        /* \"#utility.yul\":5345:5351   */\n      dup5\n        /* \"#utility.yul\":5301:5372   */\n      tag_239\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5157:5379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5385:5507   */\n    tag_240:\n        /* \"#utility.yul\":5458:5482   */\n      tag_326\n        /* \"#utility.yul\":5476:5481   */\n      dup2\n        /* \"#utility.yul\":5458:5482   */\n      tag_225\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5451:5456   */\n      dup2\n        /* \"#utility.yul\":5448:5483   */\n      eq\n        /* \"#utility.yul\":5438:5501   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5497:5498   */\n      0x00\n        /* \"#utility.yul\":5494:5495   */\n      dup1\n        /* \"#utility.yul\":5487:5499   */\n      revert\n        /* \"#utility.yul\":5438:5501   */\n    tag_327:\n        /* \"#utility.yul\":5385:5507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5513:5652   */\n    tag_241:\n        /* \"#utility.yul\":5559:5564   */\n      0x00\n        /* \"#utility.yul\":5597:5603   */\n      dup2\n        /* \"#utility.yul\":5584:5604   */\n      calldataload\n        /* \"#utility.yul\":5575:5604   */\n      swap1\n      pop\n        /* \"#utility.yul\":5613:5646   */\n      tag_329\n        /* \"#utility.yul\":5640:5645   */\n      dup2\n        /* \"#utility.yul\":5613:5646   */\n      tag_240\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5513:5652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5658:6132   */\n    tag_46:\n        /* \"#utility.yul\":5726:5732   */\n      0x00\n        /* \"#utility.yul\":5734:5740   */\n      dup1\n        /* \"#utility.yul\":5783:5785   */\n      0x40\n        /* \"#utility.yul\":5771:5780   */\n      dup4\n        /* \"#utility.yul\":5762:5769   */\n      dup6\n        /* \"#utility.yul\":5758:5781   */\n      sub\n        /* \"#utility.yul\":5754:5786   */\n      slt\n        /* \"#utility.yul\":5751:5870   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5789:5868   */\n      tag_332\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5751:5870   */\n    tag_331:\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5934:5987   */\n      tag_333\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5970:5976   */\n      dup3\n        /* \"#utility.yul\":5959:5968   */\n      dup7\n        /* \"#utility.yul\":5955:5977   */\n      add\n        /* \"#utility.yul\":5934:5987   */\n      tag_238\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5924:5987   */\n      swap3\n      pop\n        /* \"#utility.yul\":5880:5997   */\n      pop\n        /* \"#utility.yul\":6036:6038   */\n      0x20\n        /* \"#utility.yul\":6062:6115   */\n      tag_334\n        /* \"#utility.yul\":6107:6114   */\n      dup6\n        /* \"#utility.yul\":6098:6104   */\n      dup3\n        /* \"#utility.yul\":6087:6096   */\n      dup7\n        /* \"#utility.yul\":6083:6105   */\n      add\n        /* \"#utility.yul\":6062:6115   */\n      tag_241\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6052:6115   */\n      swap2\n      pop\n        /* \"#utility.yul\":6007:6125   */\n      pop\n        /* \"#utility.yul\":5658:6132   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6138:6254   */\n    tag_242:\n        /* \"#utility.yul\":6208:6229   */\n      tag_336\n        /* \"#utility.yul\":6223:6228   */\n      dup2\n        /* \"#utility.yul\":6208:6229   */\n      tag_234\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6201:6206   */\n      dup2\n        /* \"#utility.yul\":6198:6230   */\n      eq\n        /* \"#utility.yul\":6188:6248   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6244:6245   */\n      0x00\n        /* \"#utility.yul\":6241:6242   */\n      dup1\n        /* \"#utility.yul\":6234:6246   */\n      revert\n        /* \"#utility.yul\":6188:6248   */\n    tag_337:\n        /* \"#utility.yul\":6138:6254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6260:6393   */\n    tag_243:\n        /* \"#utility.yul\":6303:6308   */\n      0x00\n        /* \"#utility.yul\":6341:6347   */\n      dup2\n        /* \"#utility.yul\":6328:6348   */\n      calldataload\n        /* \"#utility.yul\":6319:6348   */\n      swap1\n      pop\n        /* \"#utility.yul\":6357:6387   */\n      tag_339\n        /* \"#utility.yul\":6381:6386   */\n      dup2\n        /* \"#utility.yul\":6357:6387   */\n      tag_242\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6260:6393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6399:6867   */\n    tag_50:\n        /* \"#utility.yul\":6464:6470   */\n      0x00\n        /* \"#utility.yul\":6472:6478   */\n      dup1\n        /* \"#utility.yul\":6521:6523   */\n      0x40\n        /* \"#utility.yul\":6509:6518   */\n      dup4\n        /* \"#utility.yul\":6500:6507   */\n      dup6\n        /* \"#utility.yul\":6496:6519   */\n      sub\n        /* \"#utility.yul\":6492:6524   */\n      slt\n        /* \"#utility.yul\":6489:6608   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6527:6606   */\n      tag_342\n      tag_218\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6489:6608   */\n    tag_341:\n        /* \"#utility.yul\":6647:6648   */\n      0x00\n        /* \"#utility.yul\":6672:6725   */\n      tag_343\n        /* \"#utility.yul\":6717:6724   */\n      dup6\n        /* \"#utility.yul\":6708:6714   */\n      dup3\n        /* \"#utility.yul\":6697:6706   */\n      dup7\n        /* \"#utility.yul\":6693:6715   */\n      add\n        /* \"#utility.yul\":6672:6725   */\n      tag_222\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6662:6725   */\n      swap3\n      pop\n        /* \"#utility.yul\":6618:6735   */\n      pop\n        /* \"#utility.yul\":6774:6776   */\n      0x20\n        /* \"#utility.yul\":6800:6850   */\n      tag_344\n        /* \"#utility.yul\":6842:6849   */\n      dup6\n        /* \"#utility.yul\":6833:6839   */\n      dup3\n        /* \"#utility.yul\":6822:6831   */\n      dup7\n        /* \"#utility.yul\":6818:6840   */\n      add\n        /* \"#utility.yul\":6800:6850   */\n      tag_243\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6790:6850   */\n      swap2\n      pop\n        /* \"#utility.yul\":6745:6860   */\n      pop\n        /* \"#utility.yul\":6399:6867   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:6933   */\n    tag_244:\n        /* \"#utility.yul\":6901:6904   */\n      0x00\n        /* \"#utility.yul\":6922:6927   */\n      dup2\n        /* \"#utility.yul\":6915:6927   */\n      swap1\n      pop\n        /* \"#utility.yul\":6873:6933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6939:7081   */\n    tag_245:\n        /* \"#utility.yul\":6989:6998   */\n      0x00\n        /* \"#utility.yul\":7022:7075   */\n      tag_347\n        /* \"#utility.yul\":7040:7074   */\n      tag_348\n        /* \"#utility.yul\":7049:7073   */\n      tag_349\n        /* \"#utility.yul\":7067:7072   */\n      dup5\n        /* \"#utility.yul\":7049:7073   */\n      tag_224\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7040:7074   */\n      tag_244\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7022:7075   */\n      tag_224\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7009:7075   */\n      swap1\n      pop\n        /* \"#utility.yul\":6939:7081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7087:7213   */\n    tag_246:\n        /* \"#utility.yul\":7137:7146   */\n      0x00\n        /* \"#utility.yul\":7170:7207   */\n      tag_351\n        /* \"#utility.yul\":7201:7206   */\n      dup3\n        /* \"#utility.yul\":7170:7207   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7157:7207   */\n      swap1\n      pop\n        /* \"#utility.yul\":7087:7213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7219:7359   */\n    tag_247:\n        /* \"#utility.yul\":7283:7292   */\n      0x00\n        /* \"#utility.yul\":7316:7353   */\n      tag_353\n        /* \"#utility.yul\":7347:7352   */\n      dup3\n        /* \"#utility.yul\":7316:7353   */\n      tag_246\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7303:7353   */\n      swap1\n      pop\n        /* \"#utility.yul\":7219:7359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7365:7524   */\n    tag_248:\n        /* \"#utility.yul\":7466:7517   */\n      tag_355\n        /* \"#utility.yul\":7511:7516   */\n      dup2\n        /* \"#utility.yul\":7466:7517   */\n      tag_247\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7461:7464   */\n      dup3\n        /* \"#utility.yul\":7454:7518   */\n      mstore\n        /* \"#utility.yul\":7365:7524   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7530:7780   */\n    tag_61:\n        /* \"#utility.yul\":7637:7641   */\n      0x00\n        /* \"#utility.yul\":7675:7677   */\n      0x20\n        /* \"#utility.yul\":7664:7673   */\n      dup3\n        /* \"#utility.yul\":7660:7678   */\n      add\n        /* \"#utility.yul\":7652:7678   */\n      swap1\n      pop\n        /* \"#utility.yul\":7688:7773   */\n      tag_357\n        /* \"#utility.yul\":7770:7771   */\n      0x00\n        /* \"#utility.yul\":7759:7768   */\n      dup4\n        /* \"#utility.yul\":7755:7772   */\n      add\n        /* \"#utility.yul\":7746:7752   */\n      dup5\n        /* \"#utility.yul\":7688:7773   */\n      tag_248\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7530:7780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7786:7933   */\n    tag_249:\n        /* \"#utility.yul\":7857:7866   */\n      0x00\n        /* \"#utility.yul\":7890:7927   */\n      tag_359\n        /* \"#utility.yul\":7921:7926   */\n      dup3\n        /* \"#utility.yul\":7890:7927   */\n      tag_246\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7877:7927   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7939:8112   */\n    tag_250:\n        /* \"#utility.yul\":8047:8105   */\n      tag_361\n        /* \"#utility.yul\":8099:8104   */\n      dup2\n        /* \"#utility.yul\":8047:8105   */\n      tag_249\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8042:8045   */\n      dup3\n        /* \"#utility.yul\":8035:8106   */\n      mstore\n        /* \"#utility.yul\":7939:8112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8118:8382   */\n    tag_68:\n        /* \"#utility.yul\":8232:8236   */\n      0x00\n        /* \"#utility.yul\":8270:8272   */\n      0x20\n        /* \"#utility.yul\":8259:8268   */\n      dup3\n        /* \"#utility.yul\":8255:8273   */\n      add\n        /* \"#utility.yul\":8247:8273   */\n      swap1\n      pop\n        /* \"#utility.yul\":8283:8375   */\n      tag_363\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8361:8370   */\n      dup4\n        /* \"#utility.yul\":8357:8374   */\n      add\n        /* \"#utility.yul\":8348:8354   */\n      dup5\n        /* \"#utility.yul\":8283:8375   */\n      tag_250\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8118:8382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8388:9153   */\n    tag_81:\n        /* \"#utility.yul\":8474:8480   */\n      0x00\n        /* \"#utility.yul\":8482:8488   */\n      dup1\n        /* \"#utility.yul\":8490:8496   */\n      0x00\n        /* \"#utility.yul\":8498:8504   */\n      dup1\n        /* \"#utility.yul\":8547:8550   */\n      0x80\n        /* \"#utility.yul\":8535:8544   */\n      dup6\n        /* \"#utility.yul\":8526:8533   */\n      dup8\n        /* \"#utility.yul\":8522:8545   */\n      sub\n        /* \"#utility.yul\":8518:8551   */\n      slt\n        /* \"#utility.yul\":8515:8635   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8554:8633   */\n      tag_366\n      tag_218\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8515:8635   */\n    tag_365:\n        /* \"#utility.yul\":8674:8675   */\n      0x00\n        /* \"#utility.yul\":8699:8752   */\n      tag_367\n        /* \"#utility.yul\":8744:8751   */\n      dup8\n        /* \"#utility.yul\":8735:8741   */\n      dup3\n        /* \"#utility.yul\":8724:8733   */\n      dup9\n        /* \"#utility.yul\":8720:8742   */\n      add\n        /* \"#utility.yul\":8699:8752   */\n      tag_222\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8689:8752   */\n      swap5\n      pop\n        /* \"#utility.yul\":8645:8762   */\n      pop\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8827:8880   */\n      tag_368\n        /* \"#utility.yul\":8872:8879   */\n      dup8\n        /* \"#utility.yul\":8863:8869   */\n      dup3\n        /* \"#utility.yul\":8852:8861   */\n      dup9\n        /* \"#utility.yul\":8848:8870   */\n      add\n        /* \"#utility.yul\":8827:8880   */\n      tag_241\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8817:8880   */\n      swap4\n      pop\n        /* \"#utility.yul\":8772:8890   */\n      pop\n        /* \"#utility.yul\":8929:8931   */\n      0x40\n        /* \"#utility.yul\":8955:9008   */\n      tag_369\n        /* \"#utility.yul\":9000:9007   */\n      dup8\n        /* \"#utility.yul\":8991:8997   */\n      dup3\n        /* \"#utility.yul\":8980:8989   */\n      dup9\n        /* \"#utility.yul\":8976:8998   */\n      add\n        /* \"#utility.yul\":8955:9008   */\n      tag_222\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8945:9008   */\n      swap3\n      pop\n        /* \"#utility.yul\":8900:9018   */\n      pop\n        /* \"#utility.yul\":9057:9059   */\n      0x60\n        /* \"#utility.yul\":9083:9136   */\n      tag_370\n        /* \"#utility.yul\":9128:9135   */\n      dup8\n        /* \"#utility.yul\":9119:9125   */\n      dup3\n        /* \"#utility.yul\":9108:9117   */\n      dup9\n        /* \"#utility.yul\":9104:9126   */\n      add\n        /* \"#utility.yul\":9083:9136   */\n      tag_241\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9073:9136   */\n      swap2\n      pop\n        /* \"#utility.yul\":9028:9146   */\n      pop\n        /* \"#utility.yul\":8388:9153   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9159:9381   */\n    tag_89:\n        /* \"#utility.yul\":9252:9256   */\n      0x00\n        /* \"#utility.yul\":9290:9292   */\n      0x20\n        /* \"#utility.yul\":9279:9288   */\n      dup3\n        /* \"#utility.yul\":9275:9293   */\n      add\n        /* \"#utility.yul\":9267:9293   */\n      swap1\n      pop\n        /* \"#utility.yul\":9303:9374   */\n      tag_372\n        /* \"#utility.yul\":9371:9372   */\n      0x00\n        /* \"#utility.yul\":9360:9369   */\n      dup4\n        /* \"#utility.yul\":9356:9373   */\n      add\n        /* \"#utility.yul\":9347:9353   */\n      dup5\n        /* \"#utility.yul\":9303:9374   */\n      tag_223\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9159:9381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9387:9567   */\n    tag_251:\n        /* \"#utility.yul\":9435:9512   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9425:9513   */\n      mstore\n        /* \"#utility.yul\":9532:9536   */\n      0x11\n        /* \"#utility.yul\":9529:9530   */\n      0x04\n        /* \"#utility.yul\":9522:9537   */\n      mstore\n        /* \"#utility.yul\":9556:9560   */\n      0x24\n        /* \"#utility.yul\":9553:9554   */\n      0x00\n        /* \"#utility.yul\":9546:9561   */\n      revert\n        /* \"#utility.yul\":9573:9806   */\n    tag_157:\n        /* \"#utility.yul\":9612:9615   */\n      0x00\n        /* \"#utility.yul\":9635:9659   */\n      tag_375\n        /* \"#utility.yul\":9653:9658   */\n      dup3\n        /* \"#utility.yul\":9635:9659   */\n      tag_220\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9626:9659   */\n      swap2\n      pop\n        /* \"#utility.yul\":9681:9747   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9674:9679   */\n      dup3\n        /* \"#utility.yul\":9671:9748   */\n      sub\n        /* \"#utility.yul\":9668:9771   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":9751:9769   */\n      tag_377\n      tag_251\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9668:9771   */\n    tag_376:\n        /* \"#utility.yul\":9798:9799   */\n      0x01\n        /* \"#utility.yul\":9791:9796   */\n      dup3\n        /* \"#utility.yul\":9787:9800   */\n      add\n        /* \"#utility.yul\":9780:9800   */\n      swap1\n      pop\n        /* \"#utility.yul\":9573:9806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9812:10003   */\n    tag_159:\n        /* \"#utility.yul\":9852:9855   */\n      0x00\n        /* \"#utility.yul\":9871:9891   */\n      tag_379\n        /* \"#utility.yul\":9889:9890   */\n      dup3\n        /* \"#utility.yul\":9871:9891   */\n      tag_220\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9866:9891   */\n      swap2\n      pop\n        /* \"#utility.yul\":9905:9925   */\n      tag_380\n        /* \"#utility.yul\":9923:9924   */\n      dup4\n        /* \"#utility.yul\":9905:9925   */\n      tag_220\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9900:9925   */\n      swap3\n      pop\n        /* \"#utility.yul\":9948:9949   */\n      dup3\n        /* \"#utility.yul\":9945:9946   */\n      dup3\n        /* \"#utility.yul\":9941:9950   */\n      add\n        /* \"#utility.yul\":9934:9950   */\n      swap1\n      pop\n        /* \"#utility.yul\":9969:9972   */\n      dup1\n        /* \"#utility.yul\":9966:9967   */\n      dup3\n        /* \"#utility.yul\":9963:9973   */\n      gt\n        /* \"#utility.yul\":9960:9996   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":9976:9994   */\n      tag_382\n      tag_251\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9960:9996   */\n    tag_381:\n        /* \"#utility.yul\":9812:10003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10009:10341   */\n    tag_178:\n        /* \"#utility.yul\":10130:10134   */\n      0x00\n        /* \"#utility.yul\":10168:10170   */\n      0x40\n        /* \"#utility.yul\":10157:10166   */\n      dup3\n        /* \"#utility.yul\":10153:10171   */\n      add\n        /* \"#utility.yul\":10145:10171   */\n      swap1\n      pop\n        /* \"#utility.yul\":10181:10252   */\n      tag_384\n        /* \"#utility.yul\":10249:10250   */\n      0x00\n        /* \"#utility.yul\":10238:10247   */\n      dup4\n        /* \"#utility.yul\":10234:10251   */\n      add\n        /* \"#utility.yul\":10225:10231   */\n      dup6\n        /* \"#utility.yul\":10181:10252   */\n      tag_226\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10262:10334   */\n      tag_385\n        /* \"#utility.yul\":10330:10332   */\n      0x20\n        /* \"#utility.yul\":10319:10328   */\n      dup4\n        /* \"#utility.yul\":10315:10333   */\n      add\n        /* \"#utility.yul\":10306:10312   */\n      dup5\n        /* \"#utility.yul\":10262:10334   */\n      tag_223\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10009:10341   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10347:10436   */\n    tag_252:\n        /* \"#utility.yul\":10383:10390   */\n      0x00\n        /* \"#utility.yul\":10423:10429   */\n      0xffff\n        /* \"#utility.yul\":10416:10421   */\n      dup3\n        /* \"#utility.yul\":10412:10430   */\n      and\n        /* \"#utility.yul\":10401:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10347:10436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10442:10562   */\n    tag_253:\n        /* \"#utility.yul\":10514:10537   */\n      tag_388\n        /* \"#utility.yul\":10531:10536   */\n      dup2\n        /* \"#utility.yul\":10514:10537   */\n      tag_252\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10507:10512   */\n      dup2\n        /* \"#utility.yul\":10504:10538   */\n      eq\n        /* \"#utility.yul\":10494:10556   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":10552:10553   */\n      0x00\n        /* \"#utility.yul\":10549:10550   */\n      dup1\n        /* \"#utility.yul\":10542:10554   */\n      revert\n        /* \"#utility.yul\":10494:10556   */\n    tag_389:\n        /* \"#utility.yul\":10442:10562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10709   */\n    tag_254:\n        /* \"#utility.yul\":10624:10629   */\n      0x00\n        /* \"#utility.yul\":10655:10661   */\n      dup2\n        /* \"#utility.yul\":10649:10662   */\n      mload\n        /* \"#utility.yul\":10640:10662   */\n      swap1\n      pop\n        /* \"#utility.yul\":10671:10703   */\n      tag_391\n        /* \"#utility.yul\":10697:10702   */\n      dup2\n        /* \"#utility.yul\":10671:10703   */\n      tag_253\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10568:10709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10715:11064   */\n    tag_184:\n        /* \"#utility.yul\":10784:10790   */\n      0x00\n        /* \"#utility.yul\":10833:10835   */\n      0x20\n        /* \"#utility.yul\":10821:10830   */\n      dup3\n        /* \"#utility.yul\":10812:10819   */\n      dup5\n        /* \"#utility.yul\":10808:10831   */\n      sub\n        /* \"#utility.yul\":10804:10836   */\n      slt\n        /* \"#utility.yul\":10801:10920   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_394\n      tag_218\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10801:10920   */\n    tag_393:\n        /* \"#utility.yul\":10959:10960   */\n      0x00\n        /* \"#utility.yul\":10984:11047   */\n      tag_395\n        /* \"#utility.yul\":11039:11046   */\n      dup5\n        /* \"#utility.yul\":11030:11036   */\n      dup3\n        /* \"#utility.yul\":11019:11028   */\n      dup6\n        /* \"#utility.yul\":11015:11037   */\n      add\n        /* \"#utility.yul\":10984:11047   */\n      tag_254\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10974:11047   */\n      swap2\n      pop\n        /* \"#utility.yul\":10930:11057   */\n      pop\n        /* \"#utility.yul\":10715:11064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11070:11213   */\n    tag_255:\n        /* \"#utility.yul\":11127:11132   */\n      0x00\n        /* \"#utility.yul\":11158:11164   */\n      dup2\n        /* \"#utility.yul\":11152:11165   */\n      mload\n        /* \"#utility.yul\":11143:11165   */\n      swap1\n      pop\n        /* \"#utility.yul\":11174:11207   */\n      tag_397\n        /* \"#utility.yul\":11201:11206   */\n      dup2\n        /* \"#utility.yul\":11174:11207   */\n      tag_240\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11070:11213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11219:11570   */\n    tag_188:\n        /* \"#utility.yul\":11289:11295   */\n      0x00\n        /* \"#utility.yul\":11338:11340   */\n      0x20\n        /* \"#utility.yul\":11326:11335   */\n      dup3\n        /* \"#utility.yul\":11317:11324   */\n      dup5\n        /* \"#utility.yul\":11313:11336   */\n      sub\n        /* \"#utility.yul\":11309:11341   */\n      slt\n        /* \"#utility.yul\":11306:11425   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":11344:11423   */\n      tag_400\n      tag_218\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11306:11425   */\n    tag_399:\n        /* \"#utility.yul\":11464:11465   */\n      0x00\n        /* \"#utility.yul\":11489:11553   */\n      tag_401\n        /* \"#utility.yul\":11545:11552   */\n      dup5\n        /* \"#utility.yul\":11536:11542   */\n      dup3\n        /* \"#utility.yul\":11525:11534   */\n      dup6\n        /* \"#utility.yul\":11521:11543   */\n      add\n        /* \"#utility.yul\":11489:11553   */\n      tag_255\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11479:11553   */\n      swap2\n      pop\n        /* \"#utility.yul\":11435:11563   */\n      pop\n        /* \"#utility.yul\":11219:11570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11576:11986   */\n    tag_190:\n        /* \"#utility.yul\":11616:11623   */\n      0x00\n        /* \"#utility.yul\":11639:11659   */\n      tag_403\n        /* \"#utility.yul\":11657:11658   */\n      dup3\n        /* \"#utility.yul\":11639:11659   */\n      tag_220\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":11634:11659   */\n      swap2\n      pop\n        /* \"#utility.yul\":11673:11693   */\n      tag_404\n        /* \"#utility.yul\":11691:11692   */\n      dup4\n        /* \"#utility.yul\":11673:11693   */\n      tag_220\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11668:11693   */\n      swap3\n      pop\n        /* \"#utility.yul\":11728:11729   */\n      dup3\n        /* \"#utility.yul\":11725:11726   */\n      dup3\n        /* \"#utility.yul\":11721:11730   */\n      mul\n        /* \"#utility.yul\":11750:11780   */\n      tag_405\n        /* \"#utility.yul\":11768:11779   */\n      dup2\n        /* \"#utility.yul\":11750:11780   */\n      tag_220\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11739:11780   */\n      swap2\n      pop\n        /* \"#utility.yul\":11929:11930   */\n      dup3\n        /* \"#utility.yul\":11920:11927   */\n      dup3\n        /* \"#utility.yul\":11916:11931   */\n      div\n        /* \"#utility.yul\":11913:11914   */\n      dup5\n        /* \"#utility.yul\":11910:11932   */\n      eq\n        /* \"#utility.yul\":11890:11891   */\n      dup4\n        /* \"#utility.yul\":11883:11892   */\n      iszero\n        /* \"#utility.yul\":11863:11946   */\n      or\n        /* \"#utility.yul\":11840:11979   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":11959:11977   */\n      tag_407\n      tag_251\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11840:11979   */\n    tag_406:\n        /* \"#utility.yul\":11624:11986   */\n      pop\n        /* \"#utility.yul\":11576:11986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11992:12172   */\n    tag_256:\n        /* \"#utility.yul\":12040:12117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12037:12038   */\n      0x00\n        /* \"#utility.yul\":12030:12118   */\n      mstore\n        /* \"#utility.yul\":12137:12141   */\n      0x12\n        /* \"#utility.yul\":12134:12135   */\n      0x04\n        /* \"#utility.yul\":12127:12142   */\n      mstore\n        /* \"#utility.yul\":12161:12165   */\n      0x24\n        /* \"#utility.yul\":12158:12159   */\n      0x00\n        /* \"#utility.yul\":12151:12166   */\n      revert\n        /* \"#utility.yul\":12178:12363   */\n    tag_192:\n        /* \"#utility.yul\":12218:12219   */\n      0x00\n        /* \"#utility.yul\":12235:12255   */\n      tag_410\n        /* \"#utility.yul\":12253:12254   */\n      dup3\n        /* \"#utility.yul\":12235:12255   */\n      tag_220\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12230:12255   */\n      swap2\n      pop\n        /* \"#utility.yul\":12269:12289   */\n      tag_411\n        /* \"#utility.yul\":12287:12288   */\n      dup4\n        /* \"#utility.yul\":12269:12289   */\n      tag_220\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12264:12289   */\n      swap3\n      pop\n        /* \"#utility.yul\":12308:12309   */\n      dup3\n        /* \"#utility.yul\":12298:12333   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":12313:12331   */\n      tag_413\n      tag_256\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12298:12333   */\n    tag_412:\n        /* \"#utility.yul\":12355:12356   */\n      dup3\n        /* \"#utility.yul\":12352:12353   */\n      dup3\n        /* \"#utility.yul\":12348:12357   */\n      div\n        /* \"#utility.yul\":12343:12357   */\n      swap1\n      pop\n        /* \"#utility.yul\":12178:12363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12369:12563   */\n    tag_194:\n        /* \"#utility.yul\":12409:12413   */\n      0x00\n        /* \"#utility.yul\":12429:12449   */\n      tag_415\n        /* \"#utility.yul\":12447:12448   */\n      dup3\n        /* \"#utility.yul\":12429:12449   */\n      tag_220\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12424:12449   */\n      swap2\n      pop\n        /* \"#utility.yul\":12463:12483   */\n      tag_416\n        /* \"#utility.yul\":12481:12482   */\n      dup4\n        /* \"#utility.yul\":12463:12483   */\n      tag_220\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12458:12483   */\n      swap3\n      pop\n        /* \"#utility.yul\":12507:12508   */\n      dup3\n        /* \"#utility.yul\":12504:12505   */\n      dup3\n        /* \"#utility.yul\":12500:12509   */\n      sub\n        /* \"#utility.yul\":12492:12509   */\n      swap1\n      pop\n        /* \"#utility.yul\":12531:12532   */\n      dup2\n        /* \"#utility.yul\":12525:12529   */\n      dup2\n        /* \"#utility.yul\":12522:12533   */\n      gt\n        /* \"#utility.yul\":12519:12556   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":12536:12554   */\n      tag_418\n      tag_251\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12519:12556   */\n    tag_417:\n        /* \"#utility.yul\":12369:12563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12569:12901   */\n    tag_198:\n        /* \"#utility.yul\":12690:12694   */\n      0x00\n        /* \"#utility.yul\":12728:12730   */\n      0x40\n        /* \"#utility.yul\":12717:12726   */\n      dup3\n        /* \"#utility.yul\":12713:12731   */\n      add\n        /* \"#utility.yul\":12705:12731   */\n      swap1\n      pop\n        /* \"#utility.yul\":12741:12812   */\n      tag_420\n        /* \"#utility.yul\":12809:12810   */\n      0x00\n        /* \"#utility.yul\":12798:12807   */\n      dup4\n        /* \"#utility.yul\":12794:12811   */\n      add\n        /* \"#utility.yul\":12785:12791   */\n      dup6\n        /* \"#utility.yul\":12741:12812   */\n      tag_223\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12822:12894   */\n      tag_421\n        /* \"#utility.yul\":12890:12892   */\n      0x20\n        /* \"#utility.yul\":12879:12888   */\n      dup4\n        /* \"#utility.yul\":12875:12893   */\n      add\n        /* \"#utility.yul\":12866:12872   */\n      dup5\n        /* \"#utility.yul\":12822:12894   */\n      tag_223\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12569:12901   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12907:13239   */\n    tag_209:\n        /* \"#utility.yul\":13028:13032   */\n      0x00\n        /* \"#utility.yul\":13066:13068   */\n      0x40\n        /* \"#utility.yul\":13055:13064   */\n      dup3\n        /* \"#utility.yul\":13051:13069   */\n      add\n        /* \"#utility.yul\":13043:13069   */\n      swap1\n      pop\n        /* \"#utility.yul\":13079:13150   */\n      tag_423\n        /* \"#utility.yul\":13147:13148   */\n      0x00\n        /* \"#utility.yul\":13136:13145   */\n      dup4\n        /* \"#utility.yul\":13132:13149   */\n      add\n        /* \"#utility.yul\":13123:13129   */\n      dup6\n        /* \"#utility.yul\":13079:13150   */\n      tag_226\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13160:13232   */\n      tag_424\n        /* \"#utility.yul\":13228:13230   */\n      0x20\n        /* \"#utility.yul\":13217:13226   */\n      dup4\n        /* \"#utility.yul\":13213:13231   */\n      add\n        /* \"#utility.yul\":13204:13210   */\n      dup5\n        /* \"#utility.yul\":13160:13232   */\n      tag_239\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12907:13239   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13245:13467   */\n    tag_216:\n        /* \"#utility.yul\":13338:13342   */\n      0x00\n        /* \"#utility.yul\":13376:13378   */\n      0x20\n        /* \"#utility.yul\":13365:13374   */\n      dup3\n        /* \"#utility.yul\":13361:13379   */\n      add\n        /* \"#utility.yul\":13353:13379   */\n      swap1\n      pop\n        /* \"#utility.yul\":13389:13460   */\n      tag_426\n        /* \"#utility.yul\":13457:13458   */\n      0x00\n        /* \"#utility.yul\":13446:13455   */\n      dup4\n        /* \"#utility.yul\":13442:13459   */\n      add\n        /* \"#utility.yul\":13433:13439   */\n      dup5\n        /* \"#utility.yul\":13389:13460   */\n      tag_226\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13245:13467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c2cf9c58448e78312d05779cb88ea3f9d0a466d5a64312957702df16b59b6d5464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 615,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1023": {
									"entryPoint": 965,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 866,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1825:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "990:832:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1037:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1039:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1039:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1039:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1007:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1003:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:33:12"
															},
															"nodeType": "YulIf",
															"src": "1000:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1130:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1174:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1220:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1231:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1216:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1240:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1184:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1268:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1283:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1287:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1313:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1323:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1313:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1407:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1422:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1426:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1452:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1462:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1637:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1648:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1633:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1633:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1601:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1685:130:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1700:17:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1704:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1731:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1777:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1788:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1741:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1731:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "928:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "939:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "951:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "959:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "967:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "975:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "983:6:12",
														"type": ""
													}
												],
												"src": "845:977:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F3E CODESIZE SUB DUP1 PUSH3 0x1F3E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x431 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH3 0x9C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0xD3 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x10A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH3 0x141 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x179 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x18D PUSH0 DUP1 SHL DUP7 PUSH3 0x267 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C0 PUSH32 0xBB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE DUP6 PUSH3 0x267 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1F3 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP5 PUSH3 0x267 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x4B5 JUMP JUMPDEST PUSH0 PUSH3 0x27A DUP4 DUP4 PUSH3 0x362 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x358 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x2F4 PUSH3 0x3C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x35C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3FB DUP3 PUSH3 0x3D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40D DUP2 PUSH3 0x3EF JUMP JUMPDEST DUP2 EQ PUSH3 0x418 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x42B DUP2 PUSH3 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x44D JUMPI PUSH3 0x44C PUSH3 0x3CC JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x45C DUP9 DUP3 DUP10 ADD PUSH3 0x41B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x46F DUP9 DUP3 DUP10 ADD PUSH3 0x41B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x482 DUP9 DUP3 DUP10 ADD PUSH3 0x41B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x495 DUP9 DUP3 DUP10 ADD PUSH3 0x41B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x4A8 DUP9 DUP3 DUP10 ADD PUSH3 0x41B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1A44 PUSH3 0x4FA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x9A9 ADD MSTORE DUP2 DUP2 PUSH2 0xE76 ADD MSTORE PUSH2 0xF06 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x73A ADD MSTORE DUP2 DUP2 PUSH2 0x961 ADD MSTORE DUP2 DUP2 PUSH2 0xFD1 ADD MSTORE PUSH2 0x103F ADD MSTORE PUSH2 0x1A44 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E413BEE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xE317CE7A EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xE86CA065 EQ PUSH2 0x32D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x4D104ADF EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x60DC2340 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x34B25EE2 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x37BDC99B EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x12F52EE EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x27D00FB0 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x445 JUMPI POP PUSH2 0x444 DUP3 PUSH2 0xC8E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x517 JUMPI PUSH2 0x516 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x435A3CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xED50123FE46D12537DCAAE53F33AEE1C64BCC9E4F222560F3BAE6C0824040DD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x615 DUP3 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x628 DUP4 DUP4 PUSH2 0xD0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xBB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE PUSH2 0x658 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x3 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x77E DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x3 ADD SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH32 0xC12258DBC8F5AAF21F9B7EF40FBFB87BEFC7C46AC42DCCC2C5CC565347E56EE6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x7E5 DUP2 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x862 DUP3 DUP3 PUSH2 0x10CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D5690E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92F DUP2 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xBB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xA3D DUP3 PUSH2 0x44C JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0xA50 DUP4 DUP4 PUSH2 0x10CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0xA80 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP2 SLOAD PUSH2 0xA8F SWAP1 PUSH2 0x1794 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3F480 TIMESTAMP PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP3 PUSH32 0x43984C1E017ED0311CE2B121DA72130B77D64F8B0652C8C80D70A31EAD3E2904 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH3 0x3F480 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD08 DUP2 PUSH2 0xD03 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0xDEA JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD87 PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDEE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE27 SWAP3 SWAP2 SWAP1 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1209 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24A9D853 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEDD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF628408 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP PUSH2 0x1015 DUP5 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1083 DUP7 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH0 ADD SLOAD PUSH32 0x3C70B1E8034B5738EC77FBFDAA4D28906A0B3160018D67A2DC7B534E53E33FE0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10B8 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x10DA DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST ISZERO PUSH2 0x11AE JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x114B PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x11B2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x1205 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP3 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1241 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x125C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x129E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BA DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D5 DUP2 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F0 JUMPI PUSH2 0x12EF PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FD DUP5 DUP3 DUP6 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x133E DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x1334 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x13A2 DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B1 DUP3 PUSH2 0x1395 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x13A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH0 DUP4 ADD DUP11 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x13E7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1401 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x140E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x141B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1428 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1483 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH2 0x149D PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AB DUP5 DUP3 DUP6 ADD PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1503 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1514 DUP2 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153C DUP5 DUP3 DUP6 ADD PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1567 PUSH0 DUP4 ADD DUP5 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1576 DUP2 PUSH2 0x1334 JUMP JUMPDEST DUP2 EQ PUSH2 0x1580 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1591 DUP2 PUSH2 0x156D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BA DUP6 DUP3 DUP7 ADD PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15CB DUP6 DUP3 DUP7 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F9 DUP2 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1622 DUP6 DUP3 DUP7 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1633 DUP6 DUP3 DUP7 ADD PUSH2 0x15EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x165B PUSH2 0x1656 DUP5 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 DUP3 PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1682 DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1692 DUP2 PUSH2 0x1678 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CB DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x16C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1702 JUMPI PUSH2 0x1701 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x170F DUP8 DUP3 DUP9 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1720 DUP8 DUP3 DUP9 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1731 DUP8 DUP3 DUP9 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1742 DUP8 DUP3 DUP9 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1761 PUSH0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x179E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1767 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17E5 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1821 PUSH0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x182E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1835 JUMP JUMPDEST DUP2 EQ PUSH2 0x1855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1866 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1881 JUMPI PUSH2 0x1880 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188E DUP5 DUP3 DUP6 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A5 DUP2 PUSH2 0x156D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18CD DUP5 DUP3 DUP6 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18F9 DUP2 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x1767 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x194E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x1917 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1989 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BA PUSH0 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x19C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x19EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1545 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A08 PUSH0 DUP4 ADD DUP5 PUSH2 0x1345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xCF SWAP13 PC PREVRANDAO DUP15 PUSH25 0x312D05779CB88EA3F9D0A466D5A64312957702DF16B59B6D54 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "481:5583:10:-:0;;;1906:683;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2137:1;2119:20;;:6;:20;;;:46;;;;2163:1;2143:22;;:8;:22;;;2119:46;:73;;;;2190:1;2169:23;;:9;:23;;;2119:73;:103;;;;2220:1;2196:26;;:12;:26;;;2119:103;:140;;;;2257:1;2226:33;;:19;:33;;;2119:140;2115:193;;;2283:13;;;;;;;;;;;;;;2115:193;2320:38;2241:4:0;2331:18:10;;2351:6;2320:10;;;:38;;:::i;:::-;;2369:34;999:25;2394:8;2369:10;;;:34;;:::i;:::-;;2414:36;927:26;2440:9;2414:10;;;:36;;:::i;:::-;;2477:12;2463:27;;;;;;;;;;2528:19;2501:47;;;;;;;;;;1906:683;;;;;481:5583;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:977::-;951:6;959;967;975;983;1032:3;1020:9;1011:7;1007:23;1003:33;1000:120;;;1039:79;;:::i;:::-;1000:120;1159:1;1184:64;1240:7;1231:6;1220:9;1216:22;1184:64;:::i;:::-;1174:74;;1130:128;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;1575:2;1601:64;1657:7;1648:6;1637:9;1633:22;1601:64;:::i;:::-;1591:74;;1546:129;1714:3;1741:64;1797:7;1788:6;1777:9;1773:22;1741:64;:::i;:::-;1731:74;;1685:130;845:977;;;;;;;;:::o;481:5583:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ARBITER_ROLE_1121": {
									"entryPoint": 2435,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 2606,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HOLD_PERIOD_1137": {
									"entryPoint": 3207,
									"id": 1137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VERIFIER_ROLE_1116": {
									"entryPoint": 3171,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_969": {
									"entryPoint": 4617,
									"id": 969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 4536,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 3319,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 3339,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1023": {
									"entryPoint": 4296,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 4303,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_splitAndSend_1519": {
									"entryPoint": 3699,
									"id": 1519,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@escrows_1132": {
									"entryPoint": 843,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTreasury_1127": {
									"entryPoint": 2471,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_129": {
									"entryPoint": 1100,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 1548,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 2507,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@holdPayment_1299": {
									"entryPoint": 2646,
									"id": 1299,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@openDispute_1351": {
									"entryPoint": 1128,
									"id": 1351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@release_1394": {
									"entryPoint": 2151,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2028,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@resolveDispute_1457": {
									"entryPoint": 1582,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 2612,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_592": {
									"entryPoint": 3572,
									"id": 592,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1064": {
									"entryPoint": 3214,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 979,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@usdc_1124": {
									"entryPoint": 2399,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16_fromMemory": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_address": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IFeeTreasury_$1536_to_t_address_fromStack": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$1095_to_t_uint8_fromStack": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6606,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IFeeTreasury_$1536__to_t_address__fromStack_reversed": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_enum$_Status_$1095__to_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$1095": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$547_to_t_address": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IFeeTreasury_$1536_to_t_address": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$1095_to_t_uint8": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$1095": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13470:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:12",
														"type": ""
													}
												],
												"src": "545:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:12"
															},
															"nodeType": "YulIf",
															"src": "766:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:12",
														"type": ""
													}
												],
												"src": "690:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:12",
														"type": ""
													}
												],
												"src": "1025:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1194:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1204:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1219:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1226:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1204:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1176:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1186:7:12",
														"type": ""
													}
												],
												"src": "1149:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1326:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1336:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1365:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1347:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1336:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1308:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1318:7:12",
														"type": ""
													}
												],
												"src": "1281:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1465:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1488:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1470:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1470:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1458:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1436:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1443:3:12",
														"type": ""
													}
												],
												"src": "1383:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1545:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1545:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1652:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1642:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1642:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1676:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1666:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1507:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:62:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1781:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "1783:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1783:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1777:1:12",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:20:12"
															},
															"nodeType": "YulIf",
															"src": "1757:46:12"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$1095",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:12",
														"type": ""
													}
												],
												"src": "1693:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1871:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1881:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1892:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1881:7:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1936:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$1095",
																	"nodeType": "YulIdentifier",
																	"src": "1898:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:44:12"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$1095",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1853:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1863:7:12",
														"type": ""
													}
												],
												"src": "1815:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:64:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2075:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$1095",
																	"nodeType": "YulIdentifier",
																	"src": "2046:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:35:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2033:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$1095_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2003:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2013:9:12",
														"type": ""
													}
												],
												"src": "1954:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2184:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2229:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$1095_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2189:39:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2189:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:59:12"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$1095_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2155:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2162:3:12",
														"type": ""
													}
												],
												"src": "2093:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2523:629:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2533:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2545:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2556:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2541:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2533:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2614:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2570:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2570:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2570:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2708:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2704:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2704:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2651:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2777:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2790:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2801:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2786:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2733:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2733:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2859:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2872:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2883:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2868:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2815:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2815:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2815:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2965:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2950:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2897:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2897:73:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2897:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3024:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3048:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2980:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:73:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2980:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3129:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3140:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$1095_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3063:52:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:82:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3063:82:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_enum$_Status_$1095__to_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2447:9:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2459:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2467:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2475:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2483:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2491:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2499:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2507:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2518:4:12",
														"type": ""
													}
												],
												"src": "2248:904:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3202:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3212:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3227:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3212:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3184:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3194:7:12",
														"type": ""
													}
												],
												"src": "3158:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3355:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3411:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3420:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3423:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3413:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3413:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3378:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3402:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "3385:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3385:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3375:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3375:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:42:12"
															},
															"nodeType": "YulIf",
															"src": "3365:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3348:5:12",
														"type": ""
													}
												],
												"src": "3313:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3490:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3500:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3522:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3509:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3500:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3564:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3538:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3538:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3468:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3476:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3484:5:12",
														"type": ""
													}
												],
												"src": "3439:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3647:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3693:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3695:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3695:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3695:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3668:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3677:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3660:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3660:32:12"
															},
															"nodeType": "YulIf",
															"src": "3657:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3786:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3801:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3815:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3805:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3830:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3864:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3875:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3860:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3860:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3884:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3840:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3840:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3830:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3617:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3628:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3640:6:12",
														"type": ""
													}
												],
												"src": "3582:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3967:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3992:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3985:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3978:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3967:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3939:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3949:7:12",
														"type": ""
													}
												],
												"src": "3915:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4070:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4087:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4107:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4092:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4092:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4080:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4058:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4065:3:12",
														"type": ""
													}
												],
												"src": "4011:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4218:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4228:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4302:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4311:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4264:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4264:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4190:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4202:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4213:4:12",
														"type": ""
													}
												],
												"src": "4126:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4387:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4397:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4408:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4397:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4369:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4379:7:12",
														"type": ""
													}
												],
												"src": "4342:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4468:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4525:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4534:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4537:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4527:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4527:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4527:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4491:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4516:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4498:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4498:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4488:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4481:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:43:12"
															},
															"nodeType": "YulIf",
															"src": "4478:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4461:5:12",
														"type": ""
													}
												],
												"src": "4425:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4615:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4637:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4624:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4615:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4680:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4653:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4653:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4583:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4591:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4599:5:12",
														"type": ""
													}
												],
												"src": "4553:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4764:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4810:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4812:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4812:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4812:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4785:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4781:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4781:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4777:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:32:12"
															},
															"nodeType": "YulIf",
															"src": "4774:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4903:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4918:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4932:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4922:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4947:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4982:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4993:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4978:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5002:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4957:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4957:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4947:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4734:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4745:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4757:6:12",
														"type": ""
													}
												],
												"src": "4698:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5098:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5115:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5138:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5120:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5120:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5108:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5086:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5093:3:12",
														"type": ""
													}
												],
												"src": "5033:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5265:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5345:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5369:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5301:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5301:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5227:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5239:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5250:4:12",
														"type": ""
													}
												],
												"src": "5157:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5428:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5485:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5494:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5497:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5487:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5487:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5487:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5451:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5476:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5458:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5458:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5448:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5448:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5441:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5441:43:12"
															},
															"nodeType": "YulIf",
															"src": "5438:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5421:5:12",
														"type": ""
													}
												],
												"src": "5385:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5565:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5575:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5597:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5584:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5575:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5640:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5613:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5613:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5543:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5551:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5559:5:12",
														"type": ""
													}
												],
												"src": "5513:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5741:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5787:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5789:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5789:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5789:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5762:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5771:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5758:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5758:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5783:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5754:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:32:12"
															},
															"nodeType": "YulIf",
															"src": "5751:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5880:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5895:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5899:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5924:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5959:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5970:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5955:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5955:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5934:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5924:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6007:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6022:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6036:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6026:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6052:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6087:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6098:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6083:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6083:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6107:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6062:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6062:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6052:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5703:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5714:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5726:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5734:6:12",
														"type": ""
													}
												],
												"src": "5658:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6178:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6232:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6241:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6244:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6234:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6234:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6234:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6201:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6223:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6208:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6208:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6198:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:40:12"
															},
															"nodeType": "YulIf",
															"src": "6188:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6171:5:12",
														"type": ""
													}
												],
												"src": "6138:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6309:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6319:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6341:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6328:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6319:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6381:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6357:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6287:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6295:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6303:5:12",
														"type": ""
													}
												],
												"src": "6260:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6479:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6525:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6527:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6527:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6527:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6500:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6509:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6496:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6496:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6492:32:12"
															},
															"nodeType": "YulIf",
															"src": "6489:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6618:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6633:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6647:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6637:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6662:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6697:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6708:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6693:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6693:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6717:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6672:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6672:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6662:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6745:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6760:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6774:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6764:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6790:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6822:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6833:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6818:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6818:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6842:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6800:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6800:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6790:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6441:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6452:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6464:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6472:6:12",
														"type": ""
													}
												],
												"src": "6399:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6905:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6915:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6922:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6915:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6891:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6901:3:12",
														"type": ""
													}
												],
												"src": "6873:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7009:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7067:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "7049:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7049:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "7040:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7040:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7022:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7009:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6979:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6989:9:12",
														"type": ""
													}
												],
												"src": "6939:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7147:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7157:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7201:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7170:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7157:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7127:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7137:9:12",
														"type": ""
													}
												],
												"src": "7087:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7293:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7303:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7347:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7316:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7316:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7303:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$547_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7273:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7283:9:12",
														"type": ""
													}
												],
												"src": "7219:140:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7444:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7461:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7511:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$547_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7466:44:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7466:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7454:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7454:64:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7454:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7432:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7439:3:12",
														"type": ""
													}
												],
												"src": "7365:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7642:138:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7652:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7664:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7660:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7652:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7746:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7759:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7770:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7755:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7755:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7688:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:85:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7688:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7614:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7626:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7637:4:12",
														"type": ""
													}
												],
												"src": "7530:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7867:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7877:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7921:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7890:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7877:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IFeeTreasury_$1536_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7847:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7857:9:12",
														"type": ""
													}
												],
												"src": "7786:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8025:87:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8042:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8099:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IFeeTreasury_$1536_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8047:51:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8047:58:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8035:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8035:71:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IFeeTreasury_$1536_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8013:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8020:3:12",
														"type": ""
													}
												],
												"src": "7939:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8237:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8247:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8259:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8270:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8255:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8247:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8348:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8372:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IFeeTreasury_$1536_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8283:64:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:92:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8283:92:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFeeTreasury_$1536__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8209:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8221:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8232:4:12",
														"type": ""
													}
												],
												"src": "8118:264:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8505:648:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8552:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8554:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8554:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8554:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8526:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8522:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8518:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:33:12"
															},
															"nodeType": "YulIf",
															"src": "8515:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "8645:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8660:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8664:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8689:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8724:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8735:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8720:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8720:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8744:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8699:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8689:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8772:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8787:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8791:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8817:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8852:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8863:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8848:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8848:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8872:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8827:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8827:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8817:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8900:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8915:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8919:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8945:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8980:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8991:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8976:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8976:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9000:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8955:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8955:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8945:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9028:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9043:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9047:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9073:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9108:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9119:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9104:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9104:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9128:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9083:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9083:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9073:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8451:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8462:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8474:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8482:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8490:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8498:6:12",
														"type": ""
													}
												],
												"src": "8388:765:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9257:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9267:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9279:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9290:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9275:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9267:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9347:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9360:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9371:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9356:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9356:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9303:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9303:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9229:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9241:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9252:4:12",
														"type": ""
													}
												],
												"src": "9159:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9415:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9432:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9435:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9425:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9529:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9532:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9522:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9522:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9522:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9553:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9546:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9546:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9546:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9387:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9616:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9626:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9653:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9635:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9635:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9626:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9749:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9751:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9751:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9674:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9681:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9671:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:77:12"
															},
															"nodeType": "YulIf",
															"src": "9668:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9780:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9791:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9787:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9780:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9602:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9612:3:12",
														"type": ""
													}
												],
												"src": "9573:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9856:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9866:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9889:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9871:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9871:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9866:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9900:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9923:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9905:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9905:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9900:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9934:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9945:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9948:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9941:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9941:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9974:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9976:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9976:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9976:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9966:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9969:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9963:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9963:10:12"
															},
															"nodeType": "YulIf",
															"src": "9960:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9843:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9846:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9852:3:12",
														"type": ""
													}
												],
												"src": "9812:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10135:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10145:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10157:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10168:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10153:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10153:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10145:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10249:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10234:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10181:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10306:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10262:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10262:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10099:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10111:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10119:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10130:4:12",
														"type": ""
													}
												],
												"src": "10009:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10391:45:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10401:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10416:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10423:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10401:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10373:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10383:7:12",
														"type": ""
													}
												],
												"src": "10347:89:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10484:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10540:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10549:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10552:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10542:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10542:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10542:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10507:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10531:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "10514:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10514:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10504:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10504:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10497:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10497:42:12"
															},
															"nodeType": "YulIf",
															"src": "10494:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10477:5:12",
														"type": ""
													}
												],
												"src": "10442:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10630:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10640:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10655:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10649:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10640:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "10671:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10671:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10671:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10608:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10616:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10624:5:12",
														"type": ""
													}
												],
												"src": "10568:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10791:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10808:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10808:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10833:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:32:12"
															},
															"nodeType": "YulIf",
															"src": "10801:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10930:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10945:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10974:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11019:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11030:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11015:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11015:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11039:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10984:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10984:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10974:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10761:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10772:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10784:6:12",
														"type": ""
													}
												],
												"src": "10715:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11133:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11143:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11158:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11152:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11152:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11143:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11201:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11174:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11174:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11111:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11119:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11127:5:12",
														"type": ""
													}
												],
												"src": "11070:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11296:274:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11342:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11344:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11344:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11344:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11317:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11326:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11338:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11309:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11309:32:12"
															},
															"nodeType": "YulIf",
															"src": "11306:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "11435:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11450:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11479:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11525:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11536:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11521:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11521:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11545:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11489:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11479:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11266:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11277:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11289:6:12",
														"type": ""
													}
												],
												"src": "11219:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11624:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11634:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11657:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11639:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11639:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11634:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11668:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11691:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11673:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11673:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11668:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11702:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11725:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11728:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11721:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11706:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11739:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11768:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11750:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11750:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11739:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11957:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11959:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11959:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11959:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11890:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11883:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11883:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11913:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11920:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11929:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11916:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11916:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11910:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11910:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11863:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:113:12"
															},
															"nodeType": "YulIf",
															"src": "11840:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11607:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11610:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11616:7:12",
														"type": ""
													}
												],
												"src": "11576:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12020:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12037:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12040:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12030:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12137:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12127:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12127:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12158:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12161:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12151:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11992:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12220:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12230:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12253:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12235:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12230:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12264:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12287:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12269:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12269:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12264:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12311:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12313:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12313:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12313:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12308:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12301:9:12"
															},
															"nodeType": "YulIf",
															"src": "12298:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12343:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12352:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12355:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12348:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12348:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12343:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12209:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12212:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12218:1:12",
														"type": ""
													}
												],
												"src": "12178:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12414:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12424:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12447:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12429:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12429:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12424:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12458:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12481:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12463:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12463:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12458:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12492:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12504:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12507:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12500:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12500:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12492:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12534:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12536:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12536:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12536:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12525:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12531:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12522:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12522:11:12"
															},
															"nodeType": "YulIf",
															"src": "12519:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12400:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12403:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12409:4:12",
														"type": ""
													}
												],
												"src": "12369:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12695:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12705:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12717:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12713:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12705:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12785:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12798:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12809:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12794:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12794:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12741:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12741:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12741:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12866:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12879:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12890:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12822:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12822:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12822:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12659:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12671:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12679:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12690:4:12",
														"type": ""
													}
												],
												"src": "12569:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13033:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13043:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13055:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13066:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13051:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13051:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13043:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13123:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13136:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13147:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13132:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13132:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13079:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13079:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13079:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13204:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13217:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13228:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13213:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13213:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13160:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12997:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13009:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13017:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13028:4:12",
														"type": ""
													}
												],
												"src": "12907:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13343:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13353:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13365:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13376:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13361:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13361:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13353:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13433:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13446:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13457:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13442:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13442:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13389:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13389:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13389:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13315:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13327:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13338:4:12",
														"type": ""
													}
												],
												"src": "13245:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$1095(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$1095(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$1095(value)\n    }\n\n    function convert_t_enum$_Status_$1095_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$1095(value)\n    }\n\n    function abi_encode_t_enum$_Status_$1095_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$1095_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_enum$_Status_$1095__to_t_uint256_t_address_t_uint256_t_uint256_t_address_t_uint256_t_uint8__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_Status_$1095_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$547_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$547_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IFeeTreasury_$1536_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IFeeTreasury_$1536_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IFeeTreasury_$1536_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IFeeTreasury_$1536__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IFeeTreasury_$1536_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1124": [
									{
										"length": 32,
										"start": 1850
									},
									{
										"length": 32,
										"start": 2401
									},
									{
										"length": 32,
										"start": 4049
									},
									{
										"length": 32,
										"start": 4159
									}
								],
								"1127": [
									{
										"length": 32,
										"start": 2473
									},
									{
										"length": 32,
										"start": 3702
									},
									{
										"length": 32,
										"start": 3846
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80633e413bee116100a0578063a217fddf1161006f578063a217fddf146102b9578063d547741f146102d7578063e317ce7a146102f3578063e7705db61461030f578063e86ca0651461032d57610109565b80633e413bee1461022f5780634d104adf1461024d57806360dc23401461026b57806391d148541461028957610109565b80632f2ff15d116100dc5780632f2ff15d146101bf57806334b25ee2146101db57806336568abe146101f757806337bdc99b1461021357610109565b8063012f52ee1461010d57806301ffc9a714610143578063248a9ca31461017357806327d00fb0146101a3575b5f80fd5b610127600480360381019061012291906112db565b61034b565b60405161013a97969594939291906113c7565b60405180910390f35b61015d60048036038101906101589190611489565b6103d3565b60405161016a91906114ce565b60405180910390f35b61018d6004803603810190610188919061151a565b61044c565b60405161019a9190611554565b60405180910390f35b6101bd60048036038101906101b891906112db565b610468565b005b6101d960048036038101906101d49190611597565b61060c565b005b6101f560048036038101906101f091906115ff565b61062e565b005b610211600480360381019061020c9190611597565b6107ec565b005b61022d600480360381019061022891906112db565b610867565b005b61023761095f565b6040516102449190611698565b60405180910390f35b610255610983565b6040516102629190611554565b60405180910390f35b6102736109a7565b60405161028091906116d1565b60405180910390f35b6102a3600480360381019061029e9190611597565b6109cb565b6040516102b091906114ce565b60405180910390f35b6102c1610a2e565b6040516102ce9190611554565b60405180910390f35b6102f160048036038101906102ec9190611597565b610a34565b005b61030d600480360381019061030891906116ea565b610a56565b005b610317610c63565b6040516103249190611554565b60405180910390f35b610335610c87565b604051610342919061174e565b60405180910390f35b6001602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005015490806006015f9054906101000a900460ff16905087565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610445575061044482610c8e565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b5f60015f8381526020019081526020015f2090503373ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610504576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600381111561051757610516611354565b5b816006015f9054906101000a900460ff16600381111561053a57610539611354565b5b14610571576040517ff525e32000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600501544211156105af576040517f435a3cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001816006015f6101000a81548160ff021916908360038111156105d6576105d5611354565b5b0217905550817fed50123fe46d12537dcaae53f33aee1c64bcc9e4f222560f3bae6c0824040dd360405160405180910390a25050565b6106158261044c565b61061e81610cf7565b6106288383610d0b565b50505050565b7fbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae61065881610cf7565b5f60015f8581526020019081526020015f209050600160038111156106805761067f611354565b5b816006015f9054906101000a900460ff1660038111156106a3576106a2611354565b5b146106da576040517ff525e32000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82156107b0576003816006015f6101000a81548160ff0219169083600381111561070757610706611354565b5b021790555061077e816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600301547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610df49092919063ffffffff16565b837fc12258dbc8f5aaf21f9b7ef40fbfb87befc7c46ac42dccc2c5cc565347e56ee660405160405180910390a26107e6565b6002816006015f6101000a81548160ff021916908360038111156107d7576107d6611354565b5b02179055506107e581610e73565b5b50505050565b6107f46110c8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610858576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61086282826110cf565b505050565b5f60015f8381526020019081526020015f2090505f600381111561088e5761088d611354565b5b816006015f9054906101000a900460ff1660038111156108b1576108b0611354565b5b146108e8576040517ff525e32000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050154421015610926576040517f5d5690e000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092f81610e73565b6002816006015f6101000a81548160ff0219169083600381111561095657610955611354565b5b02179055505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae81565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610a3d8261044c565b610a4681610cf7565b610a5083836110cf565b50505050565b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09610a8081610cf7565b5f60025f8154610a8f90611794565b91905081905590506040518060e001604052808281526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016203f48042610afb91906117db565b81526020015f6003811115610b1357610b12611354565b5b81525060015f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c0820151816006015f6101000a81548160ff02191690836003811115610c0357610c02611354565b5b02179055509050508473ffffffffffffffffffffffffffffffffffffffff1686827f43984c1e017ed0311ce2b121da72130b77d64f8b0652c8c80d70a31ead3e290487604051610c53919061174e565b60405180910390a4505050505050565b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0981565b6203f48081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d0881610d036110c8565b6111b8565b50565b5f610d1683836109cb565b610dea5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d876110c8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610dee565b5f90505b92915050565b610e6e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e2792919061180e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611209565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166324a9d8536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610edd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f01919061186c565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bf6284086040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f9191906118ab565b90505f836003015490505f6127108461ffff1683610faf91906118d6565b610fb99190611944565b90505f8183610fc89190611974565b905061101584837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610df49092919063ffffffff16565b611083866004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610df49092919063ffffffff16565b855f01547f3c70b1e8034b5738ec77fbfdaa4d28906a0b3160018d67a2dc7b534e53e33fe082846040516110b89291906119a7565b60405180910390a2505050505050565b5f33905090565b5f6110da83836109cb565b156111ae575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061114b6110c8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506111b2565b5f90505b92915050565b6111c282826109cb565b6112055780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016111fc9291906119ce565b60405180910390fd5b5050565b5f8060205f8451602086015f885af180611228576040513d5f823e3d81fd5b3d92505f519150505f821461124157600181141561125c565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561129e57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161129591906119f5565b60405180910390fd5b50505050565b5f80fd5b5f819050919050565b6112ba816112a8565b81146112c4575f80fd5b50565b5f813590506112d5816112b1565b92915050565b5f602082840312156112f0576112ef6112a4565b5b5f6112fd848285016112c7565b91505092915050565b61130f816112a8565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61133e82611315565b9050919050565b61134e81611334565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061139257611391611354565b5b50565b5f8190506113a282611381565b919050565b5f6113b182611395565b9050919050565b6113c1816113a7565b82525050565b5f60e0820190506113da5f83018a611306565b6113e76020830189611345565b6113f46040830188611306565b6114016060830187611306565b61140e6080830186611345565b61141b60a0830185611306565b61142860c08301846113b8565b98975050505050505050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61146881611434565b8114611472575f80fd5b50565b5f813590506114838161145f565b92915050565b5f6020828403121561149e5761149d6112a4565b5b5f6114ab84828501611475565b91505092915050565b5f8115159050919050565b6114c8816114b4565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b5f819050919050565b6114f9816114e7565b8114611503575f80fd5b50565b5f81359050611514816114f0565b92915050565b5f6020828403121561152f5761152e6112a4565b5b5f61153c84828501611506565b91505092915050565b61154e816114e7565b82525050565b5f6020820190506115675f830184611545565b92915050565b61157681611334565b8114611580575f80fd5b50565b5f813590506115918161156d565b92915050565b5f80604083850312156115ad576115ac6112a4565b5b5f6115ba85828601611506565b92505060206115cb85828601611583565b9150509250929050565b6115de816114b4565b81146115e8575f80fd5b50565b5f813590506115f9816115d5565b92915050565b5f8060408385031215611615576116146112a4565b5b5f611622858286016112c7565b9250506020611633858286016115eb565b9150509250929050565b5f819050919050565b5f61166061165b61165684611315565b61163d565b611315565b9050919050565b5f61167182611646565b9050919050565b5f61168282611667565b9050919050565b61169281611678565b82525050565b5f6020820190506116ab5f830184611689565b92915050565b5f6116bb82611667565b9050919050565b6116cb816116b1565b82525050565b5f6020820190506116e45f8301846116c2565b92915050565b5f805f8060808587031215611702576117016112a4565b5b5f61170f878288016112c7565b945050602061172087828801611583565b9350506040611731878288016112c7565b925050606061174287828801611583565b91505092959194509250565b5f6020820190506117615f830184611306565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61179e826112a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117d0576117cf611767565b5b600182019050919050565b5f6117e5826112a8565b91506117f0836112a8565b925082820190508082111561180857611807611767565b5b92915050565b5f6040820190506118215f830185611345565b61182e6020830184611306565b9392505050565b5f61ffff82169050919050565b61184b81611835565b8114611855575f80fd5b50565b5f8151905061186681611842565b92915050565b5f60208284031215611881576118806112a4565b5b5f61188e84828501611858565b91505092915050565b5f815190506118a58161156d565b92915050565b5f602082840312156118c0576118bf6112a4565b5b5f6118cd84828501611897565b91505092915050565b5f6118e0826112a8565b91506118eb836112a8565b92508282026118f9816112a8565b915082820484148315176119105761190f611767565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61194e826112a8565b9150611959836112a8565b92508261196957611968611917565b5b828204905092915050565b5f61197e826112a8565b9150611989836112a8565b92508282039050818111156119a1576119a0611767565b5b92915050565b5f6040820190506119ba5f830185611306565b6119c76020830184611306565b9392505050565b5f6040820190506119e15f830185611345565b6119ee6020830184611545565b9392505050565b5f602082019050611a085f830184611345565b9291505056fea2646970667358221220c2cf9c58448e78312d05779cb88ea3f9d0a466d5a64312957702df16b59b6d5464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E413BEE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xE317CE7A EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xE86CA065 EQ PUSH2 0x32D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x4D104ADF EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x60DC2340 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x34B25EE2 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x37BDC99B EQ PUSH2 0x213 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x12F52EE EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x27D00FB0 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0xA56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x445 JUMPI POP PUSH2 0x444 DUP3 PUSH2 0xC8E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x517 JUMPI PUSH2 0x516 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x435A3CFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xED50123FE46D12537DCAAE53F33AEE1C64BCC9E4F222560F3BAE6C0824040DD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x615 DUP3 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x628 DUP4 DUP4 PUSH2 0xD0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xBB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE PUSH2 0x658 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x3 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x77E DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x3 ADD SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH32 0xC12258DBC8F5AAF21F9B7EF40FBFB87BEFC7C46AC42DCCC2C5CC565347E56EE6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x7E5 DUP2 PUSH2 0xE73 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x862 DUP3 DUP3 PUSH2 0x10CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88D PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF525E32000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D5690E000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x92F DUP2 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xBB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0xA3D DUP3 PUSH2 0x44C JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0xA50 DUP4 DUP4 PUSH2 0x10CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0xA80 DUP2 PUSH2 0xCF7 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP2 SLOAD PUSH2 0xA8F SWAP1 PUSH2 0x1794 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3F480 TIMESTAMP PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC03 JUMPI PUSH2 0xC02 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP3 PUSH32 0x43984C1E017ED0311CE2B121DA72130B77D64F8B0652C8C80D70A31EAD3E2904 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH3 0x3F480 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD08 DUP2 PUSH2 0xD03 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0xDEA JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD87 PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDEE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE27 SWAP3 SWAP2 SWAP1 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1209 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24A9D853 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEDD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF628408 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH2 0x2710 DUP5 PUSH2 0xFFFF AND DUP4 PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP PUSH2 0x1015 DUP5 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1083 DUP7 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH0 ADD SLOAD PUSH32 0x3C70B1E8034B5738EC77FBFDAA4D28906A0B3160018D67A2DC7B534E53E33FE0 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10B8 SWAP3 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x10DA DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST ISZERO PUSH2 0x11AE JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x114B PUSH2 0x10C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x11B2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x1205 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP3 SWAP2 SWAP1 PUSH2 0x19CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1241 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x125C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x129E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BA DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D5 DUP2 PUSH2 0x12B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F0 JUMPI PUSH2 0x12EF PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FD DUP5 DUP3 DUP6 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x133E DUP3 PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x1334 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1354 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x13A2 DUP3 PUSH2 0x1381 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B1 DUP3 PUSH2 0x1395 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C1 DUP2 PUSH2 0x13A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH0 DUP4 ADD DUP11 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x13E7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1401 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x140E PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x141B PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x1428 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x13B8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1483 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x149E JUMPI PUSH2 0x149D PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AB DUP5 DUP3 DUP6 ADD PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1503 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1514 DUP2 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153C DUP5 DUP3 DUP6 ADD PUSH2 0x1506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154E DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1567 PUSH0 DUP4 ADD DUP5 PUSH2 0x1545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1576 DUP2 PUSH2 0x1334 JUMP JUMPDEST DUP2 EQ PUSH2 0x1580 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1591 DUP2 PUSH2 0x156D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BA DUP6 DUP3 DUP7 ADD PUSH2 0x1506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15CB DUP6 DUP3 DUP7 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x14B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F9 DUP2 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1622 DUP6 DUP3 DUP7 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1633 DUP6 DUP3 DUP7 ADD PUSH2 0x15EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x165B PUSH2 0x1656 DUP5 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST PUSH2 0x1315 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 DUP3 PUSH2 0x1646 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1682 DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1692 DUP2 PUSH2 0x1678 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CB DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x16C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1702 JUMPI PUSH2 0x1701 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x170F DUP8 DUP3 DUP9 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1720 DUP8 DUP3 DUP9 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1731 DUP8 DUP3 DUP9 ADD PUSH2 0x12C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1742 DUP8 DUP3 DUP9 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1761 PUSH0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x179E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1767 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17E5 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1808 JUMPI PUSH2 0x1807 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1821 PUSH0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x182E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1835 JUMP JUMPDEST DUP2 EQ PUSH2 0x1855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1866 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1881 JUMPI PUSH2 0x1880 PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188E DUP5 DUP3 DUP6 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A5 DUP2 PUSH2 0x156D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x12A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18CD DUP5 DUP3 DUP6 ADD PUSH2 0x1897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18E0 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EB DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18F9 DUP2 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x1767 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x194E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1959 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x1917 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197E DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1989 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BA PUSH0 DUP4 ADD DUP6 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x19C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH0 DUP4 ADD DUP6 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x19EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1545 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A08 PUSH0 DUP4 ADD DUP5 PUSH2 0x1345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xCF SWAP13 PC PREVRANDAO DUP15 PUSH25 0x312D05779CB88EA3F9D0A466D5A64312957702DF16B59B6D54 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "481:5583:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3540:400:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4202:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4701:553:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4223:365:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1065:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;960:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1100:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2755:600:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;887:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1303:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1184:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2541:202:0:-;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;3786:120::-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;3540:400:10:-;3600:23;3626:7;:18;3634:9;3626:18;;;;;;;;;;;3600:44;;3672:10;3659:23;;:4;:9;;;;;;;;;;;;:23;;;3655:51;;3691:15;;;;;;;;;;;;;;3655:51;3736:11;3721:26;;;;;;;;:::i;:::-;;:4;:11;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3717:54;;3756:15;;;;;;;;;;;;;;3717:54;3804:4;:16;;;3786:15;:34;3782:68;;;3829:21;;;;;;;;;;;;;;3782:68;3877:15;3863:4;:11;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3922:9;3908:24;;;;;;;;;;3589:351;3540:400;:::o;4202:136:0:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;4701:553:10:-;999:25;2473:16:0;2484:4;2473:10;:16::i;:::-;4807:23:10::1;4833:7;:18;4841:9;4833:18;;;;;;;;;;;4807:44;;4881:15;4866:30;;;;;;;;:::i;:::-;;:4;:11;;;;;;;;;;;;:30;;;;;;;;:::i;:::-;;;4862:58;;4905:15;;;;;;;;;;;;;;4862:58;4937:13;4933:314;;;4981:15;4967:4;:11;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5011:41;5029:4;:9;;;;;;;;;;;;5040:4;:11;;;5011:4;:17;;;;:41;;;;;:::i;:::-;5088:9;5072:26;;;;;;;;;;4933:314;;;5145:15;5131:4;:11;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5175:19;5189:4;5175:13;:19::i;:::-;4933:314;4796:458;4701:553:::0;;;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;4223:365:10:-;4279:23;4305:7;:18;4313:9;4305:18;;;;;;;;;;;4279:44;;4353:11;4338:26;;;;;;;;:::i;:::-;;:4;:11;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;4334:54;;4373:15;;;;;;;;;;;;;;4334:54;4421:4;:16;;;4403:15;:34;4399:66;;;4446:19;;;;;;;;;;;;;;4399:66;4478:19;4492:4;4478:13;:19::i;:::-;4565:15;4551:4;:11;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4268:320;4223:365;:::o;1065:28::-;;;:::o;960:64::-;999:25;960:64;:::o;1100:41::-;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2196:49::-;2241:4;2196:49;;;:::o;4618:138::-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;2755:600:10:-;927:26;2473:16:0;2484:4;2473:10;:16::i;:::-;2939::10::1;2960;;2958:18;;;;;:::i;:::-;;;;;;;2939:37;;3007:277;;;;;;;;3037:8;3007:277;;;;3066:5;3007:277;;;;;;3095:8;3007:277;;;;3126:7;3007:277;;;;3165:16;3007:277;;;;;;1341:6;3209:15;:29;;;;:::i;:::-;3007:277;;;;3261:11;3007:277;;;;;;;;:::i;:::-;;;;::::0;2987:7:::1;:17;2995:8;2987:17;;;;;;;;;;;:297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3332:5;3300:47;;3322:8;3312;3300:47;3339:7;3300:47;;;;;;:::i;:::-;;;;;;;;2928:427;2755:600:::0;;;;;:::o;887:66::-;927:26;887:66;:::o;1303:44::-;1341:6;1303:44;:::o;730:146:8:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;5450:611:10:-;5519:20;5542:11;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5519:43;;5573:16;5592:11;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5573:49;;5643:19;5665:5;:12;;;5643:34;;5688:19;5742:5;5725:13;5711:27;;:11;:27;;;;:::i;:::-;5710:37;;;;:::i;:::-;5688:59;;5758:28;5803:11;5789;:25;;;;:::i;:::-;5758:56;;5854:40;5872:8;5882:11;5854:4;:17;;;;:40;;;;;:::i;:::-;5905:62;5923:5;:21;;;;;;;;;;;;5946:20;5905:4;:17;;;;:62;;;;;:::i;:::-;6009:5;:8;;;5993:60;6019:20;6041:11;5993:60;;;;;;;:::i;:::-;;;;;;;;5508:553;;;;;5450:611;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;3408:197::-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:126::-;1186:7;1226:42;1219:5;1215:54;1204:65;;1149:126;;;:::o;1281:96::-;1318:7;1347:24;1365:5;1347:24;:::i;:::-;1336:35;;1281:96;;;:::o;1383:118::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:180::-;1555:77;1552:1;1545:88;1652:4;1649:1;1642:15;1676:4;1673:1;1666:15;1693:116;1777:1;1770:5;1767:12;1757:46;;1783:18;;:::i;:::-;1757:46;1693:116;:::o;1815:133::-;1863:7;1892:5;1881:16;;1898:44;1936:5;1898:44;:::i;:::-;1815:133;;;:::o;1954:::-;2013:9;2046:35;2075:5;2046:35;:::i;:::-;2033:48;;1954:133;;;:::o;2093:149::-;2189:46;2229:5;2189:46;:::i;:::-;2184:3;2177:59;2093:149;;:::o;2248:904::-;2518:4;2556:3;2545:9;2541:19;2533:27;;2570:71;2638:1;2627:9;2623:17;2614:6;2570:71;:::i;:::-;2651:72;2719:2;2708:9;2704:18;2695:6;2651:72;:::i;:::-;2733;2801:2;2790:9;2786:18;2777:6;2733:72;:::i;:::-;2815;2883:2;2872:9;2868:18;2859:6;2815:72;:::i;:::-;2897:73;2965:3;2954:9;2950:19;2941:6;2897:73;:::i;:::-;2980;3048:3;3037:9;3033:19;3024:6;2980:73;:::i;:::-;3063:82;3140:3;3129:9;3125:19;3116:6;3063:82;:::i;:::-;2248:904;;;;;;;;;;:::o;3158:149::-;3194:7;3234:66;3227:5;3223:78;3212:89;;3158:149;;;:::o;3313:120::-;3385:23;3402:5;3385:23;:::i;:::-;3378:5;3375:34;3365:62;;3423:1;3420;3413:12;3365:62;3313:120;:::o;3439:137::-;3484:5;3522:6;3509:20;3500:29;;3538:32;3564:5;3538:32;:::i;:::-;3439:137;;;;:::o;3582:327::-;3640:6;3689:2;3677:9;3668:7;3664:23;3660:32;3657:119;;;3695:79;;:::i;:::-;3657:119;3815:1;3840:52;3884:7;3875:6;3864:9;3860:22;3840:52;:::i;:::-;3830:62;;3786:116;3582:327;;;;:::o;3915:90::-;3949:7;3992:5;3985:13;3978:21;3967:32;;3915:90;;;:::o;4011:109::-;4092:21;4107:5;4092:21;:::i;:::-;4087:3;4080:34;4011:109;;:::o;4126:210::-;4213:4;4251:2;4240:9;4236:18;4228:26;;4264:65;4326:1;4315:9;4311:17;4302:6;4264:65;:::i;:::-;4126:210;;;;:::o;4342:77::-;4379:7;4408:5;4397:16;;4342:77;;;:::o;4425:122::-;4498:24;4516:5;4498:24;:::i;:::-;4491:5;4488:35;4478:63;;4537:1;4534;4527:12;4478:63;4425:122;:::o;4553:139::-;4599:5;4637:6;4624:20;4615:29;;4653:33;4680:5;4653:33;:::i;:::-;4553:139;;;;:::o;4698:329::-;4757:6;4806:2;4794:9;4785:7;4781:23;4777:32;4774:119;;;4812:79;;:::i;:::-;4774:119;4932:1;4957:53;5002:7;4993:6;4982:9;4978:22;4957:53;:::i;:::-;4947:63;;4903:117;4698:329;;;;:::o;5033:118::-;5120:24;5138:5;5120:24;:::i;:::-;5115:3;5108:37;5033:118;;:::o;5157:222::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:71;5369:1;5358:9;5354:17;5345:6;5301:71;:::i;:::-;5157:222;;;;:::o;5385:122::-;5458:24;5476:5;5458:24;:::i;:::-;5451:5;5448:35;5438:63;;5497:1;5494;5487:12;5438:63;5385:122;:::o;5513:139::-;5559:5;5597:6;5584:20;5575:29;;5613:33;5640:5;5613:33;:::i;:::-;5513:139;;;;:::o;5658:474::-;5726:6;5734;5783:2;5771:9;5762:7;5758:23;5754:32;5751:119;;;5789:79;;:::i;:::-;5751:119;5909:1;5934:53;5979:7;5970:6;5959:9;5955:22;5934:53;:::i;:::-;5924:63;;5880:117;6036:2;6062:53;6107:7;6098:6;6087:9;6083:22;6062:53;:::i;:::-;6052:63;;6007:118;5658:474;;;;;:::o;6138:116::-;6208:21;6223:5;6208:21;:::i;:::-;6201:5;6198:32;6188:60;;6244:1;6241;6234:12;6188:60;6138:116;:::o;6260:133::-;6303:5;6341:6;6328:20;6319:29;;6357:30;6381:5;6357:30;:::i;:::-;6260:133;;;;:::o;6399:468::-;6464:6;6472;6521:2;6509:9;6500:7;6496:23;6492:32;6489:119;;;6527:79;;:::i;:::-;6489:119;6647:1;6672:53;6717:7;6708:6;6697:9;6693:22;6672:53;:::i;:::-;6662:63;;6618:117;6774:2;6800:50;6842:7;6833:6;6822:9;6818:22;6800:50;:::i;:::-;6790:60;;6745:115;6399:468;;;;;:::o;6873:60::-;6901:3;6922:5;6915:12;;6873:60;;;:::o;6939:142::-;6989:9;7022:53;7040:34;7049:24;7067:5;7049:24;:::i;:::-;7040:34;:::i;:::-;7022:53;:::i;:::-;7009:66;;6939:142;;;:::o;7087:126::-;7137:9;7170:37;7201:5;7170:37;:::i;:::-;7157:50;;7087:126;;;:::o;7219:140::-;7283:9;7316:37;7347:5;7316:37;:::i;:::-;7303:50;;7219:140;;;:::o;7365:159::-;7466:51;7511:5;7466:51;:::i;:::-;7461:3;7454:64;7365:159;;:::o;7530:250::-;7637:4;7675:2;7664:9;7660:18;7652:26;;7688:85;7770:1;7759:9;7755:17;7746:6;7688:85;:::i;:::-;7530:250;;;;:::o;7786:147::-;7857:9;7890:37;7921:5;7890:37;:::i;:::-;7877:50;;7786:147;;;:::o;7939:173::-;8047:58;8099:5;8047:58;:::i;:::-;8042:3;8035:71;7939:173;;:::o;8118:264::-;8232:4;8270:2;8259:9;8255:18;8247:26;;8283:92;8372:1;8361:9;8357:17;8348:6;8283:92;:::i;:::-;8118:264;;;;:::o;8388:765::-;8474:6;8482;8490;8498;8547:3;8535:9;8526:7;8522:23;8518:33;8515:120;;;8554:79;;:::i;:::-;8515:120;8674:1;8699:53;8744:7;8735:6;8724:9;8720:22;8699:53;:::i;:::-;8689:63;;8645:117;8801:2;8827:53;8872:7;8863:6;8852:9;8848:22;8827:53;:::i;:::-;8817:63;;8772:118;8929:2;8955:53;9000:7;8991:6;8980:9;8976:22;8955:53;:::i;:::-;8945:63;;8900:118;9057:2;9083:53;9128:7;9119:6;9108:9;9104:22;9083:53;:::i;:::-;9073:63;;9028:118;8388:765;;;;;;;:::o;9159:222::-;9252:4;9290:2;9279:9;9275:18;9267:26;;9303:71;9371:1;9360:9;9356:17;9347:6;9303:71;:::i;:::-;9159:222;;;;:::o;9387:180::-;9435:77;9432:1;9425:88;9532:4;9529:1;9522:15;9556:4;9553:1;9546:15;9573:233;9612:3;9635:24;9653:5;9635:24;:::i;:::-;9626:33;;9681:66;9674:5;9671:77;9668:103;;9751:18;;:::i;:::-;9668:103;9798:1;9791:5;9787:13;9780:20;;9573:233;;;:::o;9812:191::-;9852:3;9871:20;9889:1;9871:20;:::i;:::-;9866:25;;9905:20;9923:1;9905:20;:::i;:::-;9900:25;;9948:1;9945;9941:9;9934:16;;9969:3;9966:1;9963:10;9960:36;;;9976:18;;:::i;:::-;9960:36;9812:191;;;;:::o;10009:332::-;10130:4;10168:2;10157:9;10153:18;10145:26;;10181:71;10249:1;10238:9;10234:17;10225:6;10181:71;:::i;:::-;10262:72;10330:2;10319:9;10315:18;10306:6;10262:72;:::i;:::-;10009:332;;;;;:::o;10347:89::-;10383:7;10423:6;10416:5;10412:18;10401:29;;10347:89;;;:::o;10442:120::-;10514:23;10531:5;10514:23;:::i;:::-;10507:5;10504:34;10494:62;;10552:1;10549;10542:12;10494:62;10442:120;:::o;10568:141::-;10624:5;10655:6;10649:13;10640:22;;10671:32;10697:5;10671:32;:::i;:::-;10568:141;;;;:::o;10715:349::-;10784:6;10833:2;10821:9;10812:7;10808:23;10804:32;10801:119;;;10839:79;;:::i;:::-;10801:119;10959:1;10984:63;11039:7;11030:6;11019:9;11015:22;10984:63;:::i;:::-;10974:73;;10930:127;10715:349;;;;:::o;11070:143::-;11127:5;11158:6;11152:13;11143:22;;11174:33;11201:5;11174:33;:::i;:::-;11070:143;;;;:::o;11219:351::-;11289:6;11338:2;11326:9;11317:7;11313:23;11309:32;11306:119;;;11344:79;;:::i;:::-;11306:119;11464:1;11489:64;11545:7;11536:6;11525:9;11521:22;11489:64;:::i;:::-;11479:74;;11435:128;11219:351;;;;:::o;11576:410::-;11616:7;11639:20;11657:1;11639:20;:::i;:::-;11634:25;;11673:20;11691:1;11673:20;:::i;:::-;11668:25;;11728:1;11725;11721:9;11750:30;11768:11;11750:30;:::i;:::-;11739:41;;11929:1;11920:7;11916:15;11913:1;11910:22;11890:1;11883:9;11863:83;11840:139;;11959:18;;:::i;:::-;11840:139;11624:362;11576:410;;;;:::o;11992:180::-;12040:77;12037:1;12030:88;12137:4;12134:1;12127:15;12161:4;12158:1;12151:15;12178:185;12218:1;12235:20;12253:1;12235:20;:::i;:::-;12230:25;;12269:20;12287:1;12269:20;:::i;:::-;12264:25;;12308:1;12298:35;;12313:18;;:::i;:::-;12298:35;12355:1;12352;12348:9;12343:14;;12178:185;;;;:::o;12369:194::-;12409:4;12429:20;12447:1;12429:20;:::i;:::-;12424:25;;12463:20;12481:1;12463:20;:::i;:::-;12458:25;;12507:1;12504;12500:9;12492:17;;12531:1;12525:4;12522:11;12519:37;;;12536:18;;:::i;:::-;12519:37;12369:194;;;;:::o;12569:332::-;12690:4;12728:2;12717:9;12713:18;12705:26;;12741:71;12809:1;12798:9;12794:17;12785:6;12741:71;:::i;:::-;12822:72;12890:2;12879:9;12875:18;12866:6;12822:72;:::i;:::-;12569:332;;;;;:::o;12907:::-;13028:4;13066:2;13055:9;13051:18;13043:26;;13079:71;13147:1;13136:9;13132:17;13123:6;13079:71;:::i;:::-;13160:72;13228:2;13217:9;13213:18;13204:6;13160:72;:::i;:::-;12907:332;;;;;:::o;13245:222::-;13338:4;13376:2;13365:9;13361:18;13353:26;;13389:71;13457:1;13446:9;13442:17;13433:6;13389:71;:::i;:::-;13245:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1344800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ARBITER_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"HOLD_PERIOD()": "435",
								"VERIFIER_ROLE()": "413",
								"escrows(uint256)": "infinite",
								"feeTreasury()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"holdPayment(uint256,address,uint256,address)": "infinite",
								"openDispute(uint256)": "32547",
								"release(uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"resolveDispute(uint256,bool)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "763",
								"usdc()": "infinite"
							},
							"internal": {
								"_splitAndSend(struct Escrow.EscrowItem storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1906,
									"end": 2589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2138,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2125,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2165,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2143,
									"end": 2165,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2143,
									"end": 2151,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2143,
									"end": 2165,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2143,
									"end": 2165,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2143,
									"end": 2165,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2119,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2190,
									"end": 2191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2192,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2169,
									"end": 2192,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2178,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2192,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2169,
									"end": 2192,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2169,
									"end": 2192,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2119,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2221,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2196,
									"end": 2222,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2196,
									"end": 2222,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2208,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2222,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2196,
									"end": 2222,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2222,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2119,
									"end": 2222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2257,
									"end": 2258,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2226,
									"end": 2259,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2226,
									"end": 2259,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2245,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2259,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2226,
									"end": 2259,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2259,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2119,
									"end": 2259,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2308,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2115,
									"end": 2308,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "PUSH",
									"source": 10,
									"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2296,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2308,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2115,
									"end": 2308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2351,
									"end": 2357,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2320,
									"end": 2358,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 999,
									"end": 1024,
									"name": "PUSH",
									"source": 10,
									"value": "BB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE"
								},
								{
									"begin": 2394,
									"end": 2402,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2369,
									"end": 2379,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2369,
									"end": 2379,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2403,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 927,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
								},
								{
									"begin": 2440,
									"end": 2449,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2414,
									"end": 2424,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2414,
									"end": 2424,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2477,
									"end": 2489,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2490,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2528,
									"end": 2547,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2501,
									"end": 2548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2589,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 951,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 965,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 967,
									"end": 973,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 983,
									"end": 989,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1035,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1018,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1007,
									"end": 1030,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1036,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1039,
									"end": 1118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1240,
									"end": 1247,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1220,
									"end": 1229,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1216,
									"end": 1238,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1184,
									"end": 1248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1130,
									"end": 1258,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1299,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1323,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1268,
									"end": 1397,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1494,
									"end": 1516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1462,
									"end": 1526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1536,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1575,
									"end": 1577,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1657,
									"end": 1664,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1648,
									"end": 1654,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1646,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1655,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1601,
									"end": 1665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1675,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1714,
									"end": 1717,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1797,
									"end": 1804,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1788,
									"end": 1794,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1786,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1773,
									"end": 1795,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1741,
									"end": 1805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1685,
									"end": 1815,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1127"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1124"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 6064,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2cf9c58448e78312d05779cb88ea3f9d0a466d5a64312957702df16b59b6d5464736f6c63430008140033",
									".code": [
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "3E413BEE"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "E317CE7A"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "E7705DB6"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "E86CA065"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "3E413BEE"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "4D104ADF"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "60DC2340"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "34B25EE2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "37BDC99B"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "12F52EE"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "27D00FB0"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 481,
											"end": 6064,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3540,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3540,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4701,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4701,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4223,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4223,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1065,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1065,
											"end": 1093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 960,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1100,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2755,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2755,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 887,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1303,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1303,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3633,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3644,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3682,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3682,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3682,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3682,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3682,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3682,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3655,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3655,
											"end": 3706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "PUSH",
											"source": 10,
											"value": "EA8E4EB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3655,
											"end": 3706,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3655,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3721,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3721,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3747,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "PUSH",
											"source": 10,
											"value": "F525E32000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3801,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3820,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "435A3CFE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3863,
											"end": 3867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3863,
											"end": 3874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3863,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "PUSH",
											"source": 10,
											"value": "ED50123FE46D12537DCAAE53F33AEE1C64BCC9E4F222560F3BAE6C0824040DD3"
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3589,
											"end": 3940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 999,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "BB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4850,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4851,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4866,
											"end": 4896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4866,
											"end": 4877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4866,
											"end": 4896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4896,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4862,
											"end": 4920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F525E32000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4862,
											"end": 4920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4950,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4967,
											"end": 4971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4967,
											"end": 4978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4967,
											"end": 4996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 5029,
											"end": 5033,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5029,
											"end": 5038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5044,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5040,
											"end": 5051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5051,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5015,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1124"
										},
										{
											"begin": 5011,
											"end": 5028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5011,
											"end": 5028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5011,
											"end": 5028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 5011,
											"end": 5052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5097,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C12258DBC8F5AAF21F9B7EF40FBFB87BEFC7C46AC42DCCC2C5CC565347E56EE6"
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5098,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5131,
											"end": 5135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5131,
											"end": 5142,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5131,
											"end": 5160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5160,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5189,
											"end": 5193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5175,
											"end": 5194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5175,
											"end": 5194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 4933,
											"end": 5247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 5254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 5254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4338,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4338,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4334,
											"end": 4388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "F525E32000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4388,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4388,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 4334,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4421,
											"end": 4437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4437,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4437,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4465,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4399,
											"end": 4465,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "5D5690E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4465,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4399,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4492,
											"end": 4496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 4478,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4551,
											"end": 4555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4551,
											"end": 4562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4551,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1124"
										},
										{
											"begin": 1065,
											"end": 1093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 999,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "BB08418A67729A078F87BBC8D02A770929BB68F5BFDF134AE2EAD6ED38E2F4AE"
										},
										{
											"begin": 960,
											"end": 1024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 960,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1127"
										},
										{
											"begin": 1100,
											"end": 1141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 927,
											"end": 953,
											"name": "PUSH",
											"source": 10,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2960,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2958,
											"end": 2976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2976,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3071,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3095,
											"end": 3103,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3181,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F480"
										},
										{
											"begin": 3209,
											"end": 3224,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3209,
											"end": 3238,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3209,
											"end": 3238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3007,
											"end": 3284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3004,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2987,
											"end": 3284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3330,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3312,
											"end": 3320,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "43984C1E017ED0311CE2B121DA72130B77D64F8B0652C8C80D70A31EAD3E2904"
										},
										{
											"begin": 3339,
											"end": 3346,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3300,
											"end": 3347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3347,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 3355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 927,
											"end": 953,
											"name": "PUSH",
											"source": 10,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 887,
											"end": 953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 887,
											"end": 953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 10,
											"value": "3F480"
										},
										{
											"begin": 1303,
											"end": 1347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 6061,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 5450,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1127"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "24A9D853"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5542,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5542,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1127"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "PUSH",
											"source": 10,
											"value": "BF628408"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5592,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5592,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5677,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5747,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 5725,
											"end": 5738,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5722,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5711,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5710,
											"end": 5747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5710,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5688,
											"end": 5747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 5786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5814,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5800,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5789,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 5814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 5814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5872,
											"end": 5880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5858,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1124"
										},
										{
											"begin": 5854,
											"end": 5871,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5854,
											"end": 5871,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5854,
											"end": 5871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5854,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5944,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5909,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1124"
										},
										{
											"begin": 5905,
											"end": 5922,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5905,
											"end": 5922,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5905,
											"end": 5922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6014,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6017,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "PUSH",
											"source": 10,
											"value": "3C70B1E8034B5738EC77FBFDAA4D28906A0B3160018D67A2DC7B534E53E33FE0"
										},
										{
											"begin": 6019,
											"end": 6039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5993,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6053,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 6061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 6061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1268,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1269,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1347,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1281,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1470,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1495,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1383,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1687,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1507,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1633,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1652,
											"end": 1656,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1681,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1809,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 1693,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1757,
											"end": 1803,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1783,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1803,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1757,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1809,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1948,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 1815,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 1936,
											"end": 1941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 1898,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1942,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 1898,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1948,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 1954,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2046,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 2046,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2046,
											"end": 2081,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2046,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 2087,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 2087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1954,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2242,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 2093,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 2189,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2235,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2189,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2236,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2559,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2560,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2570,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2651,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2723,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2651,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2799,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 2783,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2733,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2805,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2733,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2883,
											"end": 2885,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2815,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2887,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2815,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2965,
											"end": 2968,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 2969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 2897,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2970,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2897,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2980,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2980,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2980,
											"end": 3053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2980,
											"end": 3053,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2980,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3140,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3125,
											"end": 3144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 3063,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3063,
											"end": 3145,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3063,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3300,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3385,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3385,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3409,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3365,
											"end": 3427,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3427,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3365,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 3433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 3433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3529,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3529,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3538,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3675,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3664,
											"end": 3687,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3692,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3657,
											"end": 3776,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3657,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3657,
											"end": 3776,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3695,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3695,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3774,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3695,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3657,
											"end": 3776,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3657,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3884,
											"end": 3891,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3840,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3840,
											"end": 3892,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3840,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3892,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 4005,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3915,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 3998,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3978,
											"end": 3999,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 4005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 4005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 4005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4120,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 4011,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4092,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4113,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 4092,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4080,
											"end": 4114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4228,
											"end": 4254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4228,
											"end": 4254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 4264,
											"end": 4329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4264,
											"end": 4329,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4264,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4419,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4342,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4386,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4419,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4547,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4425,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4516,
											"end": 4521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 4498,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4498,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4523,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4478,
											"end": 4541,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4535,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4527,
											"end": 4539,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4541,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4478,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4425,
											"end": 4547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4599,
											"end": 4604,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4624,
											"end": 4644,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4680,
											"end": 4685,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4653,
											"end": 4686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4653,
											"end": 4686,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4653,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4553,
											"end": 4692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4792,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4781,
											"end": 4804,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4809,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4774,
											"end": 4893,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4774,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4774,
											"end": 4893,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4812,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4812,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 4812,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4812,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4812,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4774,
											"end": 4893,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4774,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4957,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 5010,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4957,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 5010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 5010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 5020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4698,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 5120,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5144,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 5120,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5108,
											"end": 5145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5301,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5507,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5385,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5458,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5448,
											"end": 5483,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 5438,
											"end": 5501,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5487,
											"end": 5499,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5501,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 5438,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 5564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5613,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5646,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 5613,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5783,
											"end": 5785,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5771,
											"end": 5780,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5762,
											"end": 5769,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5758,
											"end": 5781,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5754,
											"end": 5786,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5870,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5751,
											"end": 5870,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5789,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 5789,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5789,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5789,
											"end": 5868,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 5789,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5751,
											"end": 5870,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5751,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 5976,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 5977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5934,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5934,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5924,
											"end": 5987,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5924,
											"end": 5987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6038,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6062,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 6062,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6062,
											"end": 6115,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6062,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6052,
											"end": 6115,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6052,
											"end": 6115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6007,
											"end": 6125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5658,
											"end": 6132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6254,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 6138,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6223,
											"end": 6228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 6208,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6208,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6198,
											"end": 6230,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6188,
											"end": 6248,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6244,
											"end": 6245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6242,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6234,
											"end": 6246,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6248,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6188,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6303,
											"end": 6308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6381,
											"end": 6386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 6357,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6509,
											"end": 6518,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6507,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6492,
											"end": 6524,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6608,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6489,
											"end": 6608,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6527,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 6527,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6606,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 6527,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6608,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6489,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6647,
											"end": 6648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6717,
											"end": 6724,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6708,
											"end": 6714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6706,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6693,
											"end": 6715,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6672,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6725,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 6672,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6662,
											"end": 6725,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6662,
											"end": 6725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6618,
											"end": 6735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6818,
											"end": 6840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 6800,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6933,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 6873,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6927,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6933,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6933,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6873,
											"end": 6933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7081,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 6939,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 6998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7067,
											"end": 7072,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7049,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7040,
											"end": 7074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7022,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 7022,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7009,
											"end": 7075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7009,
											"end": 7075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6939,
											"end": 7081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7213,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 7087,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7201,
											"end": 7206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7170,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7207,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7170,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7207,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7359,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 7219,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7283,
											"end": 7292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 7347,
											"end": 7352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7316,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 7316,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7316,
											"end": 7353,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 7316,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7353,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7353,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7359,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7524,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7365,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 7511,
											"end": 7516,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 7466,
											"end": 7517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 7517,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 7466,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7518,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7660,
											"end": 7678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 7678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7768,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7688,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7773,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7688,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7530,
											"end": 7780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7933,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7786,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7921,
											"end": 7926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 7890,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7890,
											"end": 7927,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7890,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7933,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7933,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 8112,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7939,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 8047,
											"end": 8105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8105,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8047,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8042,
											"end": 8045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 8112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 8112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 8112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8272,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8259,
											"end": 8268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8370,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8283,
											"end": 8375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8283,
											"end": 8375,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8283,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8488,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8490,
											"end": 8496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8504,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8547,
											"end": 8550,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8526,
											"end": 8533,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8545,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8518,
											"end": 8551,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8635,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8515,
											"end": 8635,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8554,
											"end": 8633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 8554,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8515,
											"end": 8635,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8515,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8675,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 8744,
											"end": 8751,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8735,
											"end": 8741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8724,
											"end": 8733,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8720,
											"end": 8742,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8699,
											"end": 8752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8752,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 8699,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8689,
											"end": 8752,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8689,
											"end": 8752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8645,
											"end": 8762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8827,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 8872,
											"end": 8879,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8852,
											"end": 8861,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8848,
											"end": 8870,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8827,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 8827,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8827,
											"end": 8880,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 8827,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8880,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8817,
											"end": 8880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8772,
											"end": 8890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8929,
											"end": 8931,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8955,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9000,
											"end": 9007,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 8989,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8976,
											"end": 8998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8955,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 9008,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 8955,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9008,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 9018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9083,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9128,
											"end": 9135,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9125,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9104,
											"end": 9126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9083,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 9083,
											"end": 9136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9083,
											"end": 9136,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 9083,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9136,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9073,
											"end": 9136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 9153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9290,
											"end": 9292,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9275,
											"end": 9293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9371,
											"end": 9372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9347,
											"end": 9353,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 9303,
											"end": 9374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9567,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9387,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9512,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9425,
											"end": 9513,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9536,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9529,
											"end": 9530,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9522,
											"end": 9537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9546,
											"end": 9561,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9806,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 9573,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 9615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9653,
											"end": 9658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9635,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9659,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 9635,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9626,
											"end": 9659,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9626,
											"end": 9659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9747,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9674,
											"end": 9679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9748,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 9668,
											"end": 9771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9751,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9771,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 9668,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9791,
											"end": 9796,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9573,
											"end": 9806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 9889,
											"end": 9890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9871,
											"end": 9891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9891,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 9871,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9891,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9866,
											"end": 9891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9923,
											"end": 9924,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9905,
											"end": 9925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9905,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 9925,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 9925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9948,
											"end": 9949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9945,
											"end": 9946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9941,
											"end": 9950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 9950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 9950,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 9972,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9963,
											"end": 9973,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 9996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 9960,
											"end": 9996,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9976,
											"end": 9994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 9996,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 9960,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 10003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10134,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10170,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10145,
											"end": 10171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10234,
											"end": 10251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 10181,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10252,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10181,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10262,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 10330,
											"end": 10332,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10319,
											"end": 10328,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10312,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10262,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 10262,
											"end": 10334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10262,
											"end": 10334,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 10262,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10436,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 10347,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10383,
											"end": 10390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 10416,
											"end": 10421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10412,
											"end": 10430,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10436,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10562,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10442,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 10531,
											"end": 10536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 10514,
											"end": 10537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10538,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10494,
											"end": 10556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10552,
											"end": 10553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10542,
											"end": 10554,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10556,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10494,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10662,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10662,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10671,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10671,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10671,
											"end": 10703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10671,
											"end": 10703,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 10671,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10568,
											"end": 10709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10812,
											"end": 10819,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 10831,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10804,
											"end": 10836,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10801,
											"end": 10920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10801,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 10801,
											"end": 10920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10839,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10801,
											"end": 10920,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 10801,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10959,
											"end": 10960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 11039,
											"end": 11046,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11030,
											"end": 11036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11019,
											"end": 11028,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11015,
											"end": 11037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10984,
											"end": 11047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 10984,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 11047,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 11047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10930,
											"end": 11057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10715,
											"end": 11064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11165,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11174,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 11201,
											"end": 11206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11174,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 11174,
											"end": 11207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11174,
											"end": 11207,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 11174,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11070,
											"end": 11213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11340,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11326,
											"end": 11335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11317,
											"end": 11324,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11313,
											"end": 11336,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11309,
											"end": 11341,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11425,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 11306,
											"end": 11425,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 11344,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 11344,
											"end": 11423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11423,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 11344,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11425,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 11306,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 11545,
											"end": 11552,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11534,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 11489,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11553,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 11489,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11616,
											"end": 11623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 11639,
											"end": 11659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11634,
											"end": 11659,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11634,
											"end": 11659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11673,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 11691,
											"end": 11692,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11673,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 11673,
											"end": 11693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11673,
											"end": 11693,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 11673,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11693,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11668,
											"end": 11693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11725,
											"end": 11726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 11730,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11750,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 11768,
											"end": 11779,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11750,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 11750,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11750,
											"end": 11780,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 11750,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11739,
											"end": 11780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11739,
											"end": 11780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11916,
											"end": 11931,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11932,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11891,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11863,
											"end": 11946,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11840,
											"end": 11979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 11959,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11979,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11840,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11624,
											"end": 11986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 12172,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 11992,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12040,
											"end": 12117,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12030,
											"end": 12118,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12127,
											"end": 12142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12161,
											"end": 12165,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12151,
											"end": 12166,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12218,
											"end": 12219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12235,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12235,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12235,
											"end": 12255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12235,
											"end": 12255,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 12235,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12255,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12269,
											"end": 12289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 12269,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12264,
											"end": 12289,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12264,
											"end": 12289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 12298,
											"end": 12333,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 12313,
											"end": 12331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12333,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 12298,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12355,
											"end": 12356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12352,
											"end": 12353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12343,
											"end": 12357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12343,
											"end": 12357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12178,
											"end": 12363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12409,
											"end": 12413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12429,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12429,
											"end": 12449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12449,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 12429,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12463,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12463,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12463,
											"end": 12483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12463,
											"end": 12483,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12463,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12483,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12508,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12492,
											"end": 12509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12492,
											"end": 12509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12525,
											"end": 12529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12522,
											"end": 12533,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12519,
											"end": 12556,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12519,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 12519,
											"end": 12556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 12536,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12519,
											"end": 12556,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 12519,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12728,
											"end": 12730,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12717,
											"end": 12726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12705,
											"end": 12731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12705,
											"end": 12731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12741,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12794,
											"end": 12811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12785,
											"end": 12791,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12741,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 12741,
											"end": 12812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12741,
											"end": 12812,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 12741,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 12890,
											"end": 12892,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12879,
											"end": 12888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12875,
											"end": 12893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12866,
											"end": 12872,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 12822,
											"end": 12894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12894,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 12822,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12569,
											"end": 12901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13028,
											"end": 13032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13055,
											"end": 13064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13043,
											"end": 13069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13043,
											"end": 13069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 13147,
											"end": 13148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13136,
											"end": 13145,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13132,
											"end": 13149,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13123,
											"end": 13129,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 13079,
											"end": 13150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13079,
											"end": 13150,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 13079,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 13228,
											"end": 13230,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13226,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13213,
											"end": 13231,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13210,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 13160,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13376,
											"end": 13378,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13361,
											"end": 13379,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 13457,
											"end": 13458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13446,
											"end": 13455,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13442,
											"end": 13459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13433,
											"end": 13439,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 13389,
											"end": 13460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13460,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 13389,
											"end": 13460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Escrow.sol",
								"contracts/interfaces/IFeeTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ARBITER_ROLE()": "4d104adf",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"HOLD_PERIOD()": "e86ca065",
							"VERIFIER_ROLE()": "e7705db6",
							"escrows(uint256)": "012f52ee",
							"feeTreasury()": "60dc2340",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"holdPayment(uint256,address,uint256,address)": "e317ce7a",
							"openDispute(uint256)": "27d00fb0",
							"release(uint256)": "37bdc99b",
							"renounceRole(bytes32,address)": "36568abe",
							"resolveDispute(uint256,bool)": "34b25ee2",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"usdc()": "3e413bee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_arbiter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeTreasuryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisputeWindowClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HoldPeriodNotOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"}],\"name\":\"DisputeOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentHeld\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"}],\"name\":\"PaymentRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"escrowId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToContributors\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARBITER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOLD_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentSplitter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"enum Escrow.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTreasury\",\"outputs\":[{\"internalType\":\"contract IFeeTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentSplitter\",\"type\":\"address\"}],\"name\":\"holdPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_escrowId\",\"type\":\"uint256\"}],\"name\":\"openDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_escrowId\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_escrowId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_refundToUser\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hassan Ali\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"holdPayment(uint256,address,uint256,address)\":{\"details\":\"Can only be called by a trusted Verifier contract.\"},\"openDispute(uint256)\":{\"details\":\"Can only be called by the user who made the payment, and only while status is Held.\"},\"release(uint256)\":{\"details\":\"Can be called by anyone, but only executes if status is Held and time is up. This function will split the payment between the contributors and the protocol treasury.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"resolveDispute(uint256,bool)\":{\"details\":\"Can only be called by an Arbiter.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"holdPayment(uint256,address,uint256,address)\":{\"notice\":\"Holds a payment in escrow.\"},\"openDispute(uint256)\":{\"notice\":\"Opens a dispute for a payment held in escrow.\"},\"release(uint256)\":{\"notice\":\"Releases a payment after the hold period is over.\"},\"resolveDispute(uint256,bool)\":{\"notice\":\"Resolves a dispute.\"}},\"notice\":\"Holds payments temporarily to allow for disputes. Integrates with FeeTreasury to split protocol fees on successful payments.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Escrow.sol\":{\"keccak256\":\"0xf2f703f825d9c7b050605aea103b39587403b83b91d33fa31584887611d98d4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4232c358d43bd964719b8e4ef291be2482c70f7fa03344c7916aaeee7d9c8f\",\"dweb:/ipfs/QmcWz46kdHu8qSQVvPAUGc68Gkmi72BDFK5nhREcSkDBPi\"]},\"contracts/interfaces/IFeeTreasury.sol\":{\"keccak256\":\"0xdbec038c0df9e590bb02a40b4a99b7dd95c5b8874b589f56294d9f8de85cbe76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5be8792ed2671f05fe3c1bb43270032050b6b429ecde31f81d4d2f9229010dc3\",\"dweb:/ipfs/QmQHU9cj4K2nSWY9ix6hGMbtKhRipE3c9UuugcnPABYZpU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/Escrow.sol:Escrow",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1132,
								"contract": "contracts/Escrow.sol:Escrow",
								"label": "escrows",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(EscrowItem)1111_storage)"
							},
							{
								"astId": 1134,
								"contract": "contracts/Escrow.sol:Escrow",
								"label": "_escrowIdCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Status)1095": {
								"encoding": "inplace",
								"label": "enum Escrow.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_uint256,t_struct(EscrowItem)1111_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Escrow.EscrowItem)",
								"numberOfBytes": "32",
								"value": "t_struct(EscrowItem)1111_storage"
							},
							"t_struct(EscrowItem)1111_storage": {
								"encoding": "inplace",
								"label": "struct Escrow.EscrowItem",
								"members": [
									{
										"astId": 1097,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1099,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1101,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "assetId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1103,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1105,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "paymentSplitter",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1107,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "releaseTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1110,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "status",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(Status)1095"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/Escrow.sol:Escrow",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"holdPayment(uint256,address,uint256,address)": {
								"notice": "Holds a payment in escrow."
							},
							"openDispute(uint256)": {
								"notice": "Opens a dispute for a payment held in escrow."
							},
							"release(uint256)": {
								"notice": "Releases a payment after the hold period is over."
							},
							"resolveDispute(uint256,bool)": {
								"notice": "Resolves a dispute."
							}
						},
						"notice": "Holds payments temporarily to allow for disputes. Integrates with FeeTreasury to split protocol fees on successful payments.",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IFeeTreasury.sol": {
				"IFeeTreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "feeBps",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryMultisig",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeBps()": {
								"returns": {
									"_0": "The fee in basis points (e.g., 250 for 2.5%)."
								}
							},
							"treasuryMultisig()": {
								"returns": {
									"_0": "The address of the treasury multisig."
								}
							}
						},
						"title": "IFeeTreasury Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeBps()": "24a9d853",
							"treasuryMultisig()": "bf628408"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryMultisig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeBps()\":{\"returns\":{\"_0\":\"The fee in basis points (e.g., 250 for 2.5%).\"}},\"treasuryMultisig()\":{\"returns\":{\"_0\":\"The address of the treasury multisig.\"}}},\"title\":\"IFeeTreasury Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeBps()\":{\"notice\":\"Returns the current protocol fee in basis points.\"},\"treasuryMultisig()\":{\"notice\":\"Returns the address of the multisig wallet where fees are sent.\"}},\"notice\":\"Defines the external functions for the FeeTreasury contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFeeTreasury.sol\":\"IFeeTreasury\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFeeTreasury.sol\":{\"keccak256\":\"0xdbec038c0df9e590bb02a40b4a99b7dd95c5b8874b589f56294d9f8de85cbe76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5be8792ed2671f05fe3c1bb43270032050b6b429ecde31f81d4d2f9229010dc3\",\"dweb:/ipfs/QmQHU9cj4K2nSWY9ix6hGMbtKhRipE3c9UuugcnPABYZpU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeBps()": {
								"notice": "Returns the current protocol fee in basis points."
							},
							"treasuryMultisig()": {
								"notice": "Returns the address of the multisig wallet where fees are sent."
							}
						},
						"notice": "Defines the external functions for the FeeTreasury contract.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1041
						],
						"ERC165": [
							1065
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1077
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1042,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1066,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1065,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1065,
								1077,
								379,
								1041
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1064,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC165": [
							1077
						],
						"IERC20": [
							547
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 470,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 466,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "590:6:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "598:7:2"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								1077,
								547
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 461,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 461,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 461,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 461,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 461,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 461,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 462,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								481,
								490
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1077
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 1078,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							547
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 548,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							547
						]
					},
					"id": 548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 547,
							"linearizedBaseContracts": [
								547
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 481,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 490,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 547,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 547,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 547,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 547,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 547,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 547,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 548,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								481,
								490
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC20": [
							547
						],
						"SafeERC20": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 548,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 550,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 462,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 461,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 559,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 568,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 583,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 585,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 586,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 587,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 579,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 570,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 1011,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 611,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 612,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 607,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 605,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 595,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 594,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 1011,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 636,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 638,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 640,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 632,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 631,
												"id": 643,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 621,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 1011,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 664,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 666,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 667,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 662,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 660,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 659,
												"id": 672,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 647,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 547,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1011,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 691,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1011",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1011",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 687,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 698,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 547,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 1011,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 746,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															717
														],
														"declarations": [
															{
																"constant": false,
																"id": 717,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 746,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 716,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 726,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 722,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1011",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1011",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 724,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 524,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 728,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 737,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 736,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 731,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 732,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 733,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 730,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 735,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 739,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 740,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 741,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 742,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 738,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 745,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 547,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 1011,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 759,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 763,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 534,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 765,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 767,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 761,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 771,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 772,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 770,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 779,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$547",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 534,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 781,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 754,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 782,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 783,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 777,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 788,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 789,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 787,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 750,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 547,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1011,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 808,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 822,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 824,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 820,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 835,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 834,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 830,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 828,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 827,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 833,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 814,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 815,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 813,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 797,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 461,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 1011,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 853,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 871,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 882,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 881,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 877,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 875,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 874,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 880,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 859,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 860,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 861,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 862,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 858,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 461,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 1011,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 898,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 914,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 910,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 925,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 924,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 920,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 918,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 917,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 923,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 904,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 905,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 906,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 903,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 461,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 1011,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 938,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 932,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 943,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 944,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 949,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 932,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$547",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$547",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 962,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$547",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$547",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 960,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 959,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 930,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 547,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 1011,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 981,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 989,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 991,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1002,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 996,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 973,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$547",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$547",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 994,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 979,
												"id": 1008,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 971,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 547,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 1011,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1012,
							"src": "698:9376:6",
							"usedErrors": [
								559,
								568
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1041,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1041,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1041,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1065
						],
						"IERC165": [
							1077
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1078,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1044,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "688:7:8"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065,
								1077
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "812:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "829:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1058,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1077_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1077_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1057,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1077",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1062,
												"nodeType": "Return",
												"src": "822:47:8"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:8",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "757:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:8"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "806:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:8"
									},
									"scope": 1065,
									"src": "730:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1066,
							"src": "660:218:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1077
						]
					},
					"id": 1078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1068,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1077,
							"linearizedBaseContracts": [
								1077
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 1077,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1078,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"contracts/Escrow.sol": {
				"ast": {
					"absolutePath": "contracts/Escrow.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1041
						],
						"ERC165": [
							1065
						],
						"Escrow": [
							1520
						],
						"IAccessControl": [
							379
						],
						"IERC1363": [
							461
						],
						"IERC165": [
							1077
						],
						"IERC20": [
							547
						],
						"IFeeTreasury": [
							1536
						],
						"SafeERC20": [
							1011
						]
					},
					"id": 1521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 297,
							"src": "61:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 1012,
							"src": "121:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 548,
							"src": "188:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IFeeTreasury.sol",
							"file": "./interfaces/IFeeTreasury.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 1537,
							"src": "246:39:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1085,
										"name": "AccessControl",
										"nameLocations": [
											"500:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "500:13:10"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "500:13:10"
								}
							],
							"canonicalName": "Escrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "289:190:10",
								"text": " @title Escrow\n @author Hassan Ali\n @notice Holds payments temporarily to allow for disputes. Integrates with FeeTreasury\n to split protocol fees on successful payments."
							},
							"fullyImplemented": true,
							"id": 1520,
							"linearizedBaseContracts": [
								1520,
								296,
								1065,
								1077,
								379,
								1041
							],
							"name": "Escrow",
							"nameLocation": "490:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1090,
									"libraryName": {
										"id": 1087,
										"name": "SafeERC20",
										"nameLocations": [
											"527:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "527:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "521:27:10",
									"typeName": {
										"id": 1089,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1088,
											"name": "IERC20",
											"nameLocations": [
												"541:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 547,
											"src": "541:6:10"
										},
										"referencedDeclaration": 547,
										"src": "541:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$547",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Escrow.Status",
									"id": 1095,
									"members": [
										{
											"id": 1091,
											"name": "Held",
											"nameLocation": "604:4:10",
											"nodeType": "EnumValue",
											"src": "604:4:10"
										},
										{
											"id": 1092,
											"name": "Disputed",
											"nameLocation": "610:8:10",
											"nodeType": "EnumValue",
											"src": "610:8:10"
										},
										{
											"id": 1093,
											"name": "Released",
											"nameLocation": "620:8:10",
											"nodeType": "EnumValue",
											"src": "620:8:10"
										},
										{
											"id": 1094,
											"name": "Refunded",
											"nameLocation": "630:8:10",
											"nodeType": "EnumValue",
											"src": "630:8:10"
										}
									],
									"name": "Status",
									"nameLocation": "595:6:10",
									"nodeType": "EnumDefinition",
									"src": "590:50:10"
								},
								{
									"canonicalName": "Escrow.EscrowItem",
									"id": 1111,
									"members": [
										{
											"constant": false,
											"id": 1097,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "685:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "677:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1096,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "677:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "706:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "698:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1098,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "698:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1101,
											"mutability": "mutable",
											"name": "assetId",
											"nameLocation": "729:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "721:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "755:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "747:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "paymentSplitter",
											"nameLocation": "780:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "772:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "814:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "806:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "806:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "843:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "836:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Status_$1095",
												"typeString": "enum Escrow.Status"
											},
											"typeName": {
												"id": 1109,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1108,
													"name": "Status",
													"nameLocations": [
														"836:6:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1095,
													"src": "836:6:10"
												},
												"referencedDeclaration": 1095,
												"src": "836:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$1095",
													"typeString": "enum Escrow.Status"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EscrowItem",
									"nameLocation": "655:10:10",
									"nodeType": "StructDefinition",
									"scope": 1520,
									"src": "648:209:10",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7705db6",
									"id": 1116,
									"mutability": "constant",
									"name": "VERIFIER_ROLE",
									"nameLocation": "911:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "887:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1112,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "887:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "56455249464945525f524f4c45",
												"id": 1114,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "937:15:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09",
													"typeString": "literal_string \"VERIFIER_ROLE\""
												},
												"value": "VERIFIER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09",
													"typeString": "literal_string \"VERIFIER_ROLE\""
												}
											],
											"id": 1113,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "927:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "927:26:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4d104adf",
									"id": 1121,
									"mutability": "constant",
									"name": "ARBITER_ROLE",
									"nameLocation": "984:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "960:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1117,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "960:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "415242495445525f524f4c45",
												"id": 1119,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1009:14:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_bb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae",
													"typeString": "literal_string \"ARBITER_ROLE\""
												},
												"value": "ARBITER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_bb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae",
													"typeString": "literal_string \"ARBITER_ROLE\""
												}
											],
											"id": 1118,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "999:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "999:25:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1124,
									"mutability": "immutable",
									"name": "usdc",
									"nameLocation": "1089:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "1065:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$547",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1123,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1122,
											"name": "IERC20",
											"nameLocations": [
												"1065:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 547,
											"src": "1065:6:10"
										},
										"referencedDeclaration": 547,
										"src": "1065:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$547",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60dc2340",
									"id": 1127,
									"mutability": "immutable",
									"name": "feeTreasury",
									"nameLocation": "1130:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "1100:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
										"typeString": "contract IFeeTreasury"
									},
									"typeName": {
										"id": 1126,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1125,
											"name": "IFeeTreasury",
											"nameLocations": [
												"1100:12:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1536,
											"src": "1100:12:10"
										},
										"referencedDeclaration": 1536,
										"src": "1100:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
											"typeString": "contract IFeeTreasury"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "012f52ee",
									"id": 1132,
									"mutability": "mutable",
									"name": "escrows",
									"nameLocation": "1222:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "1184:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
										"typeString": "mapping(uint256 => struct Escrow.EscrowItem)"
									},
									"typeName": {
										"id": 1131,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1128,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1192:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1184:30:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
											"typeString": "mapping(uint256 => struct Escrow.EscrowItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1130,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1129,
												"name": "EscrowItem",
												"nameLocations": [
													"1203:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1111,
												"src": "1203:10:10"
											},
											"referencedDeclaration": 1111,
											"src": "1203:10:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
												"typeString": "struct Escrow.EscrowItem"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1134,
									"mutability": "mutable",
									"name": "_escrowIdCounter",
									"nameLocation": "1252:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "1236:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1236:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "e86ca065",
									"id": 1137,
									"mutability": "constant",
									"name": "HOLD_PERIOD",
									"nameLocation": "1327:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1520,
									"src": "1303:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1303:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1341:6:10",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "43984c1e017ed0311ce2b121da72130b77d64f8b0652c8c80d70a31ead3e2904",
									"id": 1147,
									"name": "PaymentHeld",
									"nameLocation": "1385:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "escrowId",
												"nameLocation": "1413:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1397:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1439:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1423:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1464:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1448:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1478:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1470:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:89:10"
									},
									"src": "1379:107:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ed50123fe46d12537dcaae53f33aee1c64bcc9e4f222560f3bae6c0824040dd3",
									"id": 1151,
									"name": "DisputeOpened",
									"nameLocation": "1498:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"indexed": true,
												"mutability": "mutable",
												"name": "escrowId",
												"nameLocation": "1528:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1512:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:26:10"
									},
									"src": "1492:46:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3c70b1e8034b5738ec77fbfdaa4d28906a0b3160018d67a2dc7b534e53e33fe0",
									"id": 1159,
									"name": "PaymentReleased",
									"nameLocation": "1550:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "escrowId",
												"nameLocation": "1582:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1566:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountToContributors",
												"nameLocation": "1600:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1592:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "1630:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1622:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:77:10"
									},
									"src": "1544:99:10"
								},
								{
									"anonymous": false,
									"eventSelector": "c12258dbc8f5aaf21f9b7ef40fbfb87befc7c46ac42dccc2c5cc565347e56ee6",
									"id": 1163,
									"name": "PaymentRefunded",
									"nameLocation": "1655:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "escrowId",
												"nameLocation": "1687:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1671:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:26:10"
									},
									"src": "1649:48:10"
								},
								{
									"errorSelector": "f525e320",
									"id": 1165,
									"name": "InvalidStatus",
									"nameLocation": "1734:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:10"
									},
									"src": "1728:22:10"
								},
								{
									"errorSelector": "ea8e4eb5",
									"id": 1167,
									"name": "NotAuthorized",
									"nameLocation": "1762:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:2:10"
									},
									"src": "1756:22:10"
								},
								{
									"errorSelector": "5d5690e0",
									"id": 1169,
									"name": "HoldPeriodNotOver",
									"nameLocation": "1790:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1807:2:10"
									},
									"src": "1784:26:10"
								},
								{
									"errorSelector": "435a3cfe",
									"id": 1171,
									"name": "DisputeWindowClosed",
									"nameLocation": "1822:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:10"
									},
									"src": "1816:28:10"
								},
								{
									"errorSelector": "d92e233d",
									"id": 1173,
									"name": "ZeroAddress",
									"nameLocation": "1856:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1867:2:10"
									},
									"src": "1850:20:10"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "2104:485:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1186,
																		"name": "_admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "2119:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2137:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2129:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1187,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2129:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2129:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2119:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1192,
																		"name": "_arbiter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2143:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2163:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2155:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1193,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2155:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2155:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2143:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2119:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1199,
																	"name": "_verifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "2169:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2190:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2182:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1200,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2182:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2182:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2169:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2119:73:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "_usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "2196:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2220:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2212:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2212:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2196:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2119:103:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1213,
															"name": "_feeTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "2226:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2257:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2249:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2249:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2249:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2226:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2119:140:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "2115:193:10",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "2261:47:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1220,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "2283:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2283:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "2276:20:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2331:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1227,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "2351:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1225,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2320:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "2320:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "ARBITER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2380:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1232,
															"name": "_arbiter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2394:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1230,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2369:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "2369:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "VERIFIER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "2425:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1237,
															"name": "_verifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "2440:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1235,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2414:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2414:36:10"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "2463:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$547",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1242,
																"name": "_usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "2477:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1241,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "2470:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$547_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2470:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$547",
															"typeString": "contract IERC20"
														}
													},
													"src": "2463:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "2463:27:10"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "feeTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2501:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
															"typeString": "contract IFeeTreasury"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1248,
																"name": "_feeTreasuryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2528:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1247,
															"name": "IFeeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2515:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IFeeTreasury_$1536_$",
																"typeString": "type(contract IFeeTreasury)"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2515:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
															"typeString": "contract IFeeTreasury"
														}
													},
													"src": "2501:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
														"typeString": "contract IFeeTreasury"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "2501:47:10"
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1936:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1928:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_arbiter",
												"nameLocation": "1961:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1953:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "_verifier",
												"nameLocation": "1988:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1980:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_usdcAddress",
												"nameLocation": "2016:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "2008:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_feeTreasuryAddress",
												"nameLocation": "2047:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "2039:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:186:10"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:0:10"
									},
									"scope": 1520,
									"src": "1906:683:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "2928:427:10",
										"statements": [
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "escrowId",
														"nameLocation": "2947:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1298,
														"src": "2939:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2939:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "2958:18:10",
													"subExpression": {
														"id": 1270,
														"name": "_escrowIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2960:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2939:37:10"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1273,
															"name": "escrows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "2987:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
																"typeString": "mapping(uint256 => struct Escrow.EscrowItem storage ref)"
															}
														},
														"id": 1275,
														"indexExpression": {
															"id": 1274,
															"name": "escrowId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2995:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2987:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_storage",
															"typeString": "struct Escrow.EscrowItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1277,
																"name": "escrowId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "3037:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1278,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "3066:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1279,
																"name": "_assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "3095:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1280,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "3126:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1281,
																"name": "_paymentSplitter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "3165:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1282,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3209:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3215:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3209:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1284,
																	"name": "HOLD_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "3227:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3209:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1286,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3261:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																		"typeString": "type(enum Escrow.Status)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3268:4:10",
																"memberName": "Held",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1091,
																"src": "3261:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1095",
																	"typeString": "enum Escrow.Status"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_Status_$1095",
																	"typeString": "enum Escrow.Status"
																}
															],
															"id": 1276,
															"name": "EscrowItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3007:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_EscrowItem_$1111_storage_ptr_$",
																"typeString": "type(struct Escrow.EscrowItem storage pointer)"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3033:2:10",
															"3060:4:10",
															"3086:7:10",
															"3118:6:10",
															"3148:15:10",
															"3196:11:10",
															"3253:6:10"
														],
														"names": [
															"id",
															"user",
															"assetId",
															"amount",
															"paymentSplitter",
															"releaseTime",
															"status"
														],
														"nodeType": "FunctionCall",
														"src": "3007:277:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_memory_ptr",
															"typeString": "struct Escrow.EscrowItem memory"
														}
													},
													"src": "2987:297:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EscrowItem_$1111_storage",
														"typeString": "struct Escrow.EscrowItem storage ref"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "2987:297:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1292,
															"name": "escrowId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3312:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "_assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "3322:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1294,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3332:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "3339:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1291,
														"name": "PaymentHeld",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "3300:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "EmitStatement",
												"src": "3295:52:10"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "2630:119:10",
										"text": " @notice Holds a payment in escrow.\n @dev Can only be called by a trusted Verifier contract."
									},
									"functionSelector": "e317ce7a",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1265,
													"name": "VERIFIER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1116,
													"src": "2913:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1264,
												"name": "onlyRole",
												"nameLocations": [
													"2904:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2904:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2904:23:10"
										}
									],
									"name": "holdPayment",
									"nameLocation": "2764:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "2794:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2786:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2821:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2813:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2845:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2837:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_paymentSplitter",
												"nameLocation": "2871:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2863:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:119:10"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2928:0:10"
									},
									"scope": 1520,
									"src": "2755:600:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "3589:351:10",
										"statements": [
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "3619:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "3600:23:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
															"typeString": "struct Escrow.EscrowItem"
														},
														"typeName": {
															"id": 1306,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1305,
																"name": "EscrowItem",
																"nameLocations": [
																	"3600:10:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1111,
																"src": "3600:10:10"
															},
															"referencedDeclaration": 1111,
															"src": "3600:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"baseExpression": {
														"id": 1308,
														"name": "escrows",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3626:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
															"typeString": "mapping(uint256 => struct Escrow.EscrowItem storage ref)"
														}
													},
													"id": 1310,
													"indexExpression": {
														"id": 1309,
														"name": "_escrowId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "3634:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3626:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EscrowItem_$1111_storage",
														"typeString": "struct Escrow.EscrowItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3600:44:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1312,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "3659:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:4:10",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1099,
														"src": "3659:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1314,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3672:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3676:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3672:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3659:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1320,
												"nodeType": "IfStatement",
												"src": "3655:51:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1317,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3691:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3691:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1319,
													"nodeType": "RevertStatement",
													"src": "3684:22:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$1095",
														"typeString": "enum Escrow.Status"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1321,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "3721:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3726:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "3721:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1323,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3736:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																"typeString": "type(enum Escrow.Status)"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3743:4:10",
														"memberName": "Held",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "3736:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"src": "3721:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "3717:54:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1326,
															"name": "InvalidStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "3756:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3756:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1328,
													"nodeType": "RevertStatement",
													"src": "3749:22:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1330,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3792:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3786:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1332,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "3804:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3809:11:10",
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "3804:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3786:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "3782:68:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1335,
															"name": "DisputeWindowClosed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "3829:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3829:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1337,
													"nodeType": "RevertStatement",
													"src": "3822:28:10"
												}
											},
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1339,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "3863:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3868:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "3863:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1342,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3877:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																"typeString": "type(enum Escrow.Status)"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3884:8:10",
														"memberName": "Disputed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "3877:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"src": "3863:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1095",
														"typeString": "enum Escrow.Status"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "3863:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1347,
															"name": "_escrowId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "3922:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1346,
														"name": "DisputeOpened",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "3908:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "EmitStatement",
												"src": "3903:29:10"
											}
										]
									},
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "3363:171:10",
										"text": " @notice Opens a dispute for a payment held in escrow.\n @dev Can only be called by the user who made the payment, and only while status is Held."
									},
									"functionSelector": "27d00fb0",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "openDispute",
									"nameLocation": "3549:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_escrowId",
												"nameLocation": "3569:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "3561:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:19:10"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3589:0:10"
									},
									"scope": 1520,
									"src": "3540:400:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "4268:320:10",
										"statements": [
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "4298:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "4279:23:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
															"typeString": "struct Escrow.EscrowItem"
														},
														"typeName": {
															"id": 1358,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1357,
																"name": "EscrowItem",
																"nameLocations": [
																	"4279:10:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1111,
																"src": "4279:10:10"
															},
															"referencedDeclaration": 1111,
															"src": "4279:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"baseExpression": {
														"id": 1360,
														"name": "escrows",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "4305:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
															"typeString": "mapping(uint256 => struct Escrow.EscrowItem storage ref)"
														}
													},
													"id": 1362,
													"indexExpression": {
														"id": 1361,
														"name": "_escrowId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "4313:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4305:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EscrowItem_$1111_storage",
														"typeString": "struct Escrow.EscrowItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:44:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$1095",
														"typeString": "enum Escrow.Status"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1364,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4338:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4343:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "4338:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1366,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4353:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																"typeString": "type(enum Escrow.Status)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4360:4:10",
														"memberName": "Held",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "4353:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"src": "4338:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "4334:54:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1369,
															"name": "InvalidStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "4373:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4373:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1371,
													"nodeType": "RevertStatement",
													"src": "4366:22:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1373,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4403:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4409:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4403:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1375,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4426:11:10",
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "4421:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4403:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "IfStatement",
												"src": "4399:66:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1378,
															"name": "HoldPeriodNotOver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "4446:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4446:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1380,
													"nodeType": "RevertStatement",
													"src": "4439:26:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1383,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4492:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														],
														"id": 1382,
														"name": "_splitAndSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "4478:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_EscrowItem_$1111_storage_ptr_$returns$__$",
															"typeString": "function (struct Escrow.EscrowItem storage pointer)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4478:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "4478:19:10"
											},
											{
												"expression": {
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1386,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4551:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4556:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "4551:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1389,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4565:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																"typeString": "type(enum Escrow.Status)"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4572:8:10",
														"memberName": "Released",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1093,
														"src": "4565:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"src": "4551:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$1095",
														"typeString": "enum Escrow.Status"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "4551:29:10"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "3952:265:10",
										"text": " @notice Releases a payment after the hold period is over.\n @dev Can be called by anyone, but only executes if status is Held and time is up.\n This function will split the payment between the contributors and the protocol treasury."
									},
									"functionSelector": "37bdc99b",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "4232:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_escrowId",
												"nameLocation": "4248:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "4240:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:19:10"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:10"
									},
									"scope": 1520,
									"src": "4223:365:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "4796:458:10",
										"statements": [
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "4826:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "4807:23:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
															"typeString": "struct Escrow.EscrowItem"
														},
														"typeName": {
															"id": 1406,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1405,
																"name": "EscrowItem",
																"nameLocations": [
																	"4807:10:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1111,
																"src": "4807:10:10"
															},
															"referencedDeclaration": 1111,
															"src": "4807:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"baseExpression": {
														"id": 1408,
														"name": "escrows",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "4833:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EscrowItem_$1111_storage_$",
															"typeString": "mapping(uint256 => struct Escrow.EscrowItem storage ref)"
														}
													},
													"id": 1410,
													"indexExpression": {
														"id": 1409,
														"name": "_escrowId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "4841:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4833:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EscrowItem_$1111_storage",
														"typeString": "struct Escrow.EscrowItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:44:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$1095",
														"typeString": "enum Escrow.Status"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1412,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "4866:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																"typeString": "struct Escrow.EscrowItem storage pointer"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4871:6:10",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "4866:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1414,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4881:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																"typeString": "type(enum Escrow.Status)"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4888:8:10",
														"memberName": "Disputed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "4881:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$1095",
															"typeString": "enum Escrow.Status"
														}
													},
													"src": "4866:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "IfStatement",
												"src": "4862:58:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1417,
															"name": "InvalidStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "4905:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4905:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1419,
													"nodeType": "RevertStatement",
													"src": "4898:22:10"
												}
											},
											{
												"condition": {
													"id": 1421,
													"name": "_refundToUser",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1399,
													"src": "4937:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "5116:131:10",
													"statements": [
														{
															"expression": {
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1443,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "5131:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																			"typeString": "struct Escrow.EscrowItem storage pointer"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5136:6:10",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1110,
																	"src": "5131:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1095",
																		"typeString": "enum Escrow.Status"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1446,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "5145:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																			"typeString": "type(enum Escrow.Status)"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5152:8:10",
																	"memberName": "Released",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "5145:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1095",
																		"typeString": "enum Escrow.Status"
																	}
																},
																"src": "5131:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1095",
																	"typeString": "enum Escrow.Status"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "5131:29:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1451,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "5189:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																			"typeString": "struct Escrow.EscrowItem storage pointer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																			"typeString": "struct Escrow.EscrowItem storage pointer"
																		}
																	],
																	"id": 1450,
																	"name": "_splitAndSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "5175:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_EscrowItem_$1111_storage_ptr_$returns$__$",
																		"typeString": "function (struct Escrow.EscrowItem storage pointer)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5175:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "5175:19:10"
														}
													]
												},
												"id": 1455,
												"nodeType": "IfStatement",
												"src": "4933:314:10",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "4952:158:10",
													"statements": [
														{
															"expression": {
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1422,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "4967:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																			"typeString": "struct Escrow.EscrowItem storage pointer"
																		}
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4972:6:10",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1110,
																	"src": "4967:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1095",
																		"typeString": "enum Escrow.Status"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1425,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "4981:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$1095_$",
																			"typeString": "type(enum Escrow.Status)"
																		}
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4988:8:10",
																	"memberName": "Refunded",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1094,
																	"src": "4981:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$1095",
																		"typeString": "enum Escrow.Status"
																	}
																},
																"src": "4967:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$1095",
																	"typeString": "enum Escrow.Status"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "4967:29:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1432,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "5029:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																				"typeString": "struct Escrow.EscrowItem storage pointer"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5034:4:10",
																		"memberName": "user",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1099,
																		"src": "5029:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1434,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "5040:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																				"typeString": "struct Escrow.EscrowItem storage pointer"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5045:6:10",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1103,
																		"src": "5040:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1429,
																		"name": "usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "5011:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5016:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 592,
																	"src": "5011:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5011:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "5011:41:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "_escrowId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "5088:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1438,
																	"name": "PaymentRefunded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "5072:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5072:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "EmitStatement",
															"src": "5067:31:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "4600:95:10",
										"text": " @notice Resolves a dispute.\n @dev Can only be called by an Arbiter."
									},
									"functionSelector": "34b25ee2",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1402,
													"name": "ARBITER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1121,
													"src": "4782:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1401,
												"name": "onlyRole",
												"nameLocations": [
													"4773:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4773:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4773:22:10"
										}
									],
									"name": "resolveDispute",
									"nameLocation": "4710:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "_escrowId",
												"nameLocation": "4733:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4725:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4725:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "_refundToUser",
												"nameLocation": "4749:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4744:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4744:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4724:39:10"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4796:0:10"
									},
									"scope": 1520,
									"src": "4701:553:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "5508:553:10",
										"statements": [
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "currentFeeBps",
														"nameLocation": "5526:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5519:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1464,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "5519:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1466,
															"name": "feeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "5542:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
																"typeString": "contract IFeeTreasury"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5554:6:10",
														"memberName": "feeBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1529,
														"src": "5542:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
															"typeString": "function () view external returns (uint16)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5542:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5519:43:10"
											},
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "multisig",
														"nameLocation": "5581:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5573:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5573:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1472,
															"name": "feeTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "5592:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFeeTreasury_$1536",
																"typeString": "contract IFeeTreasury"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5604:16:10",
														"memberName": "treasuryMultisig",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1535,
														"src": "5592:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:49:10"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "5651:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5643:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5643:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"expression": {
														"id": 1478,
														"name": "_item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5665:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
															"typeString": "struct Escrow.EscrowItem storage pointer"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5671:6:10",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1103,
													"src": "5665:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5643:34:10"
											},
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "5696:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5688:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5688:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1489,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "5711:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1484,
																	"name": "currentFeeBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "5725:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5711:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1486,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5710:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5742:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "5710:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5688:59:10"
											},
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "amountToContributors",
														"nameLocation": "5766:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "5758:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5758:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1492,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "5789:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1493,
														"name": "protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "5803:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5789:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1499,
															"name": "multisig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "5872:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1500,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5882:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1496,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5854:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5859:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 592,
														"src": "5854:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5854:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "5854:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1506,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "5923:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																	"typeString": "struct Escrow.EscrowItem storage pointer"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5929:15:10",
															"memberName": "paymentSplitter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1105,
															"src": "5923:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "amountToContributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "5946:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1503,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5905:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5910:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 592,
														"src": "5905:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "5905:62:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1512,
																"name": "_item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "6009:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
																	"typeString": "struct Escrow.EscrowItem storage pointer"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6015:2:10",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1097,
															"src": "6009:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1514,
															"name": "amountToContributors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6019:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1515,
															"name": "protocolFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "6041:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"name": "PaymentReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5993:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "EmitStatement",
												"src": "5988:65:10"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "5299:145:10",
										"text": " @notice Internal function to calculate fees and send funds.\n @dev Splits funds between contributors and the treasury."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_splitAndSend",
									"nameLocation": "5459:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_item",
												"nameLocation": "5492:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "5473:24:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
													"typeString": "struct Escrow.EscrowItem"
												},
												"typeName": {
													"id": 1460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1459,
														"name": "EscrowItem",
														"nameLocations": [
															"5473:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "5473:10:10"
													},
													"referencedDeclaration": 1111,
													"src": "5473:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EscrowItem_$1111_storage_ptr",
														"typeString": "struct Escrow.EscrowItem"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:26:10"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5508:0:10"
									},
									"scope": 1520,
									"src": "5450:611:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1521,
							"src": "481:5583:10",
							"usedErrors": [
								306,
								309,
								559,
								1165,
								1167,
								1169,
								1171,
								1173
							],
							"usedEvents": [
								318,
								327,
								336,
								1147,
								1151,
								1159,
								1163
							]
						}
					],
					"src": "33:6035:10"
				},
				"id": 10
			},
			"contracts/interfaces/IFeeTreasury.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IFeeTreasury.sol",
					"exportedSymbols": {
						"IFeeTreasury": [
							1536
						]
					},
					"id": 1537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFeeTreasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "61:115:11",
								"text": " @title IFeeTreasury Interface\n @notice Defines the external functions for the FeeTreasury contract."
							},
							"fullyImplemented": false,
							"id": 1536,
							"linearizedBaseContracts": [
								1536
							],
							"name": "IFeeTreasury",
							"nameLocation": "188:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "208:140:11",
										"text": " @notice Returns the current protocol fee in basis points.\n @return The fee in basis points (e.g., 250 for 2.5%)."
									},
									"functionSelector": "24a9d853",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeBps",
									"nameLocation": "363:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:2:11"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "395:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1526,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "395:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:8:11"
									},
									"scope": 1536,
									"src": "354:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "411:146:11",
										"text": " @notice Returns the address of the multisig wallet where fees are sent.\n @return The address of the treasury multisig."
									},
									"functionSelector": "bf628408",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "treasuryMultisig",
									"nameLocation": "572:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:2:11"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "614:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:9:11"
									},
									"scope": 1536,
									"src": "563:60:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1537,
							"src": "178:448:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:595:11"
				},
				"id": 11
			}
		}
	}
}