{
	"id": "7b903da2e7c81252a35f474e2fbe89bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FeeTreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title FeeTreasury\r\n * @author Hassan Ali\r\n * @notice Manages the protocol fee settings and the destination treasury address.\r\n * @dev This contract acts as a central configuration point for platform fees.\r\n */\r\ncontract FeeTreasury is AccessControl {\r\n    // --- Roles ---\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n\r\n    // --- State Variables ---\r\n    uint16 public feeBps;\r\n    address public treasuryMultisig;\r\n    \r\n    // --- Constants ---\r\n    uint16 public constant MAX_FEE_BPS = 1000; // 10% maximum fee, a safety measure\r\n\r\n    // --- Events ---\r\n    event FeeUpdated(uint16 newFeeBps);\r\n    event TreasuryUpdated(address newTreasury);\r\n\r\n    // --- Errors ---\r\n    error ZeroAddress();\r\n    error FeeTooHigh(uint16 maxFee, uint16 actualFee);\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        address _admin,\r\n        address _initialTreasury,\r\n        uint16 _initialFeeBps\r\n    ) {\r\n        if (_admin == address(0) || _initialTreasury == address(0)) {\r\n            revert ZeroAddress();\r\n        }\r\n        if (_initialFeeBps > MAX_FEE_BPS) {\r\n            revert FeeTooHigh(MAX_FEE_BPS, _initialFeeBps);\r\n        }\r\n        \r\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\r\n        _grantRole(ADMIN_ROLE, _admin);\r\n        \r\n        treasuryMultisig = _initialTreasury;\r\n        feeBps = _initialFeeBps;\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n\r\n    /**\r\n     * @notice Sets the new protocol fee in basis points.\r\n     * @dev Must be called by an address with ADMIN_ROLE.\r\n     * @param _newFeeBps The new fee (e.g., 250 for 2.5%).\r\n     */\r\n    function setFeeBps(uint16 _newFeeBps) external onlyRole(ADMIN_ROLE) {\r\n        if (_newFeeBps > MAX_FEE_BPS) {\r\n            revert FeeTooHigh(MAX_FEE_BPS, _newFeeBps);\r\n        }\r\n        feeBps = _newFeeBps;\r\n        emit FeeUpdated(_newFeeBps);\r\n    }\r\n\r\n    /**\r\n     * @notice Sets the new address for the treasury multisig.\r\n     * @dev Must be called by an address with ADMIN_ROLE.\r\n     * @param _newTreasury The new multisig address.\r\n     */\r\n    function setTreasuryMultisig(address _newTreasury) external onlyRole(ADMIN_ROLE) {\r\n        if (_newTreasury == address(0)) {\r\n            revert ZeroAddress();\r\n        }\r\n        treasuryMultisig = _newTreasury;\r\n        emit TreasuryUpdated(_newTreasury);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FeeTreasury.sol": {
				"FeeTreasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialTreasury",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_initialFeeBps",
									"type": "uint16"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "maxFee",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "actualFee",
									"type": "uint16"
								}
							],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "newFeeBps",
									"type": "uint16"
								}
							],
							"name": "FeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE_BPS",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeBps",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_newFeeBps",
									"type": "uint16"
								}
							],
							"name": "setFeeBps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newTreasury",
									"type": "address"
								}
							],
							"name": "setTreasuryMultisig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryMultisig",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Hassan Ali",
						"details": "This contract acts as a central configuration point for platform fees.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setFeeBps(uint16)": {
								"details": "Must be called by an address with ADMIN_ROLE.",
								"params": {
									"_newFeeBps": "The new fee (e.g., 250 for 2.5%)."
								}
							},
							"setTreasuryMultisig(address)": {
								"details": "Must be called by an address with ADMIN_ROLE.",
								"params": {
									"_newTreasury": "The new multisig address."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "FeeTreasury",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FeeTreasury.sol\":343:2450  contract FeeTreasury is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FeeTreasury.sol\":945:1488  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/FeeTreasury.sol\":1089:1090  0 */\n  0x00\n    /* \"contracts/FeeTreasury.sol\":1071:1091  _admin == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FeeTreasury.sol\":1071:1077  _admin */\n  dup4\n    /* \"contracts/FeeTreasury.sol\":1071:1091  _admin == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/FeeTreasury.sol\":1071:1125  _admin == address(0) || _initialTreasury == address(0) */\n  dup1\n  tag_6\n  jumpi\n  pop\n    /* \"contracts/FeeTreasury.sol\":1123:1124  0 */\n  0x00\n    /* \"contracts/FeeTreasury.sol\":1095:1125  _initialTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FeeTreasury.sol\":1095:1111  _initialTreasury */\n  dup3\n    /* \"contracts/FeeTreasury.sol\":1095:1125  _initialTreasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/FeeTreasury.sol\":1071:1125  _admin == address(0) || _initialTreasury == address(0) */\ntag_6:\n    /* \"contracts/FeeTreasury.sol\":1067:1174  if (_admin == address(0) || _initialTreasury == address(0)) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/FeeTreasury.sol\":1149:1162  ZeroAddress() */\n  mload(0x40)\n  0xd92e233d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FeeTreasury.sol\":1067:1174  if (_admin == address(0) || _initialTreasury == address(0)) {... */\ntag_7:\n    /* \"contracts/FeeTreasury.sol\":645:649  1000 */\n  0x03e8\n    /* \"contracts/FeeTreasury.sol\":1188:1216  _initialFeeBps > MAX_FEE_BPS */\n  0xffff\n  and\n    /* \"contracts/FeeTreasury.sol\":1188:1202  _initialFeeBps */\n  dup2\n    /* \"contracts/FeeTreasury.sol\":1188:1216  _initialFeeBps > MAX_FEE_BPS */\n  0xffff\n  and\n  gt\n    /* \"contracts/FeeTreasury.sol\":1184:1291  if (_initialFeeBps > MAX_FEE_BPS) {... */\n  iszero\n  tag_8\n  jumpi\n    /* \"contracts/FeeTreasury.sol\":645:649  1000 */\n  0x03e8\n    /* \"contracts/FeeTreasury.sol\":1264:1278  _initialFeeBps */\n  dup2\n    /* \"contracts/FeeTreasury.sol\":1240:1279  FeeTooHigh(MAX_FEE_BPS, _initialFeeBps) */\n  mload(0x40)\n  0x3c057d7b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FeeTreasury.sol\":1184:1291  if (_initialFeeBps > MAX_FEE_BPS) {... */\ntag_8:\n    /* \"contracts/FeeTreasury.sol\":1311:1349  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/FeeTreasury.sol\":1322:1340  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/FeeTreasury.sol\":1342:1348  _admin */\n  dup5\n    /* \"contracts/FeeTreasury.sol\":1311:1321  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/FeeTreasury.sol\":1311:1349  _grantRole(DEFAULT_ADMIN_ROLE, _admin) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/FeeTreasury.sol\":1360:1390  _grantRole(ADMIN_ROLE, _admin) */\n  tag_13\n    /* \"contracts/FeeTreasury.sol\":447:470  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/FeeTreasury.sol\":1383:1389  _admin */\n  dup5\n    /* \"contracts/FeeTreasury.sol\":1360:1370  _grantRole */\n  shl(0x20, tag_12)\n    /* \"contracts/FeeTreasury.sol\":1360:1390  _grantRole(ADMIN_ROLE, _admin) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/FeeTreasury.sol\":1430:1446  _initialTreasury */\n  dup2\n    /* \"contracts/FeeTreasury.sol\":1411:1427  treasuryMultisig */\n  0x01\n  0x02\n    /* \"contracts/FeeTreasury.sol\":1411:1446  treasuryMultisig = _initialTreasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FeeTreasury.sol\":1466:1480  _initialFeeBps */\n  dup1\n    /* \"contracts/FeeTreasury.sol\":1457:1463  feeBps */\n  0x01\n  0x00\n    /* \"contracts/FeeTreasury.sol\":1457:1480  feeBps = _initialFeeBps */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FeeTreasury.sol\":945:1488  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/FeeTreasury.sol\":343:2450  contract FeeTreasury is AccessControl {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_15:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_41\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_29:\n    /* \"#utility.yul\":641:665   */\n  tag_43\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_28\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_44:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_30:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_46\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_29\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:934   */\ntag_31:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:927   */\n  0xffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:928   */\n  and\n    /* \"#utility.yul\":899:928   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":940:1060   */\ntag_32:\n    /* \"#utility.yul\":1012:1035   */\n  tag_49\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":1012:1035   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1005:1010   */\n  dup2\n    /* \"#utility.yul\":1002:1036   */\n  eq\n    /* \"#utility.yul\":992:1054   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  dup1\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":992:1054   */\ntag_50:\n    /* \"#utility.yul\":940:1060   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:1207   */\ntag_33:\n    /* \"#utility.yul\":1122:1127   */\n  0x00\n    /* \"#utility.yul\":1153:1159   */\n  dup2\n    /* \"#utility.yul\":1147:1160   */\n  mload\n    /* \"#utility.yul\":1138:1160   */\n  swap1\n  pop\n    /* \"#utility.yul\":1169:1201   */\n  tag_52\n    /* \"#utility.yul\":1195:1200   */\n  dup2\n    /* \"#utility.yul\":1169:1201   */\n  tag_32\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1066:1207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:1874   */\ntag_3:\n    /* \"#utility.yul\":1300:1306   */\n  0x00\n    /* \"#utility.yul\":1308:1314   */\n  dup1\n    /* \"#utility.yul\":1316:1322   */\n  0x00\n    /* \"#utility.yul\":1365:1367   */\n  0x60\n    /* \"#utility.yul\":1353:1362   */\n  dup5\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1340:1363   */\n  sub\n    /* \"#utility.yul\":1336:1368   */\n  slt\n    /* \"#utility.yul\":1333:1452   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1371:1450   */\n  tag_55\n  tag_25\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1333:1452   */\ntag_54:\n    /* \"#utility.yul\":1491:1492   */\n  0x00\n    /* \"#utility.yul\":1516:1580   */\n  tag_56\n    /* \"#utility.yul\":1572:1579   */\n  dup7\n    /* \"#utility.yul\":1563:1569   */\n  dup3\n    /* \"#utility.yul\":1552:1561   */\n  dup8\n    /* \"#utility.yul\":1548:1570   */\n  add\n    /* \"#utility.yul\":1516:1580   */\n  tag_30\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1506:1580   */\n  swap4\n  pop\n    /* \"#utility.yul\":1462:1590   */\n  pop\n    /* \"#utility.yul\":1629:1631   */\n  0x20\n    /* \"#utility.yul\":1655:1719   */\n  tag_57\n    /* \"#utility.yul\":1711:1718   */\n  dup7\n    /* \"#utility.yul\":1702:1708   */\n  dup3\n    /* \"#utility.yul\":1691:1700   */\n  dup8\n    /* \"#utility.yul\":1687:1709   */\n  add\n    /* \"#utility.yul\":1655:1719   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1645:1719   */\n  swap3\n  pop\n    /* \"#utility.yul\":1600:1729   */\n  pop\n    /* \"#utility.yul\":1768:1770   */\n  0x40\n    /* \"#utility.yul\":1794:1857   */\n  tag_58\n    /* \"#utility.yul\":1849:1856   */\n  dup7\n    /* \"#utility.yul\":1840:1846   */\n  dup3\n    /* \"#utility.yul\":1829:1838   */\n  dup8\n    /* \"#utility.yul\":1825:1847   */\n  add\n    /* \"#utility.yul\":1794:1857   */\n  tag_33\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1784:1857   */\n  swap2\n  pop\n    /* \"#utility.yul\":1739:1867   */\n  pop\n    /* \"#utility.yul\":1213:1874   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1880:1995   */\ntag_34:\n    /* \"#utility.yul\":1965:1988   */\n  tag_60\n    /* \"#utility.yul\":1982:1987   */\n  dup2\n    /* \"#utility.yul\":1965:1988   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1960:1963   */\n  dup3\n    /* \"#utility.yul\":1953:1989   */\n  mstore\n    /* \"#utility.yul\":1880:1995   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2325   */\ntag_10:\n    /* \"#utility.yul\":2118:2122   */\n  0x00\n    /* \"#utility.yul\":2156:2158   */\n  0x40\n    /* \"#utility.yul\":2145:2154   */\n  dup3\n    /* \"#utility.yul\":2141:2159   */\n  add\n    /* \"#utility.yul\":2133:2159   */\n  swap1\n  pop\n    /* \"#utility.yul\":2169:2238   */\n  tag_62\n    /* \"#utility.yul\":2235:2236   */\n  0x00\n    /* \"#utility.yul\":2224:2233   */\n  dup4\n    /* \"#utility.yul\":2220:2237   */\n  add\n    /* \"#utility.yul\":2211:2217   */\n  dup6\n    /* \"#utility.yul\":2169:2238   */\n  tag_34\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2248:2318   */\n  tag_63\n    /* \"#utility.yul\":2314:2316   */\n  0x20\n    /* \"#utility.yul\":2303:2312   */\n  dup4\n    /* \"#utility.yul\":2299:2317   */\n  add\n    /* \"#utility.yul\":2290:2296   */\n  dup5\n    /* \"#utility.yul\":2248:2318   */\n  tag_34\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2001:2325   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FeeTreasury.sol\":343:2450  contract FeeTreasury is AccessControl {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FeeTreasury.sol\":343:2450  contract FeeTreasury is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x36568abe\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbf628408\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd55be8c6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x023b1fc9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d94bd5f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24a9d853\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FeeTreasury.sol\":1726:1979  function setFeeBps(uint16 _newFeeBps) external onlyRole(ADMIN_ROLE) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/FeeTreasury.sol\":2182:2447  function setTreasuryMultisig(address _newTreasury) external onlyRole(ADMIN_ROLE) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FeeTreasury.sol\":511:531  uint16 public feeBps */\n    tag_7:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/FeeTreasury.sol\":410:470  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FeeTreasury.sol\":538:569  address public treasuryMultisig */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/FeeTreasury.sol\":608:649  uint16 public constant MAX_FEE_BPS = 1000 */\n    tag_15:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":1726:1979  function setFeeBps(uint16 _newFeeBps) external onlyRole(ADMIN_ROLE) {... */\n    tag_27:\n        /* \"contracts/FeeTreasury.sol\":447:470  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/FeeTreasury.sol\":645:649  1000 */\n      0x03e8\n        /* \"contracts/FeeTreasury.sol\":1809:1833  _newFeeBps > MAX_FEE_BPS */\n      0xffff\n      and\n        /* \"contracts/FeeTreasury.sol\":1809:1819  _newFeeBps */\n      dup3\n        /* \"contracts/FeeTreasury.sol\":1809:1833  _newFeeBps > MAX_FEE_BPS */\n      0xffff\n      and\n      gt\n        /* \"contracts/FeeTreasury.sol\":1805:1904  if (_newFeeBps > MAX_FEE_BPS) {... */\n      iszero\n      tag_77\n      jumpi\n        /* \"contracts/FeeTreasury.sol\":645:649  1000 */\n      0x03e8\n        /* \"contracts/FeeTreasury.sol\":1881:1891  _newFeeBps */\n      dup3\n        /* \"contracts/FeeTreasury.sol\":1857:1892  FeeTooHigh(MAX_FEE_BPS, _newFeeBps) */\n      mload(0x40)\n      0x3c057d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FeeTreasury.sol\":1805:1904  if (_newFeeBps > MAX_FEE_BPS) {... */\n    tag_77:\n        /* \"contracts/FeeTreasury.sol\":1923:1933  _newFeeBps */\n      dup2\n        /* \"contracts/FeeTreasury.sol\":1914:1920  feeBps */\n      0x01\n      0x00\n        /* \"contracts/FeeTreasury.sol\":1914:1933  feeBps = _newFeeBps */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FeeTreasury.sol\":1949:1971  FeeUpdated(_newFeeBps) */\n      0xc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48\n        /* \"contracts/FeeTreasury.sol\":1960:1970  _newFeeBps */\n      dup3\n        /* \"contracts/FeeTreasury.sol\":1949:1971  FeeUpdated(_newFeeBps) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/FeeTreasury.sol\":1726:1979  function setFeeBps(uint16 _newFeeBps) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":2182:2447  function setTreasuryMultisig(address _newTreasury) external onlyRole(ADMIN_ROLE) {... */\n    tag_31:\n        /* \"contracts/FeeTreasury.sol\":447:470  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/FeeTreasury.sol\":2302:2303  0 */\n      0x00\n        /* \"contracts/FeeTreasury.sol\":2278:2304  _newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FeeTreasury.sol\":2278:2290  _newTreasury */\n      dup3\n        /* \"contracts/FeeTreasury.sol\":2278:2304  _newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FeeTreasury.sol\":2274:2353  if (_newTreasury == address(0)) {... */\n      tag_84\n      jumpi\n        /* \"contracts/FeeTreasury.sol\":2328:2341  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FeeTreasury.sol\":2274:2353  if (_newTreasury == address(0)) {... */\n    tag_84:\n        /* \"contracts/FeeTreasury.sol\":2382:2394  _newTreasury */\n      dup2\n        /* \"contracts/FeeTreasury.sol\":2363:2379  treasuryMultisig */\n      0x01\n      0x02\n        /* \"contracts/FeeTreasury.sol\":2363:2394  treasuryMultisig = _newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FeeTreasury.sol\":2410:2439  TreasuryUpdated(_newTreasury) */\n      0x7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1\n        /* \"contracts/FeeTreasury.sol\":2426:2438  _newTreasury */\n      dup3\n        /* \"contracts/FeeTreasury.sol\":2410:2439  TreasuryUpdated(_newTreasury) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/FeeTreasury.sol\":2182:2447  function setTreasuryMultisig(address _newTreasury) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":511:531  uint16 public feeBps */\n    tag_39:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_91:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":410:470  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_50:\n        /* \"contracts/FeeTreasury.sol\":447:470  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/FeeTreasury.sol\":410:470  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":538:569  address public treasuryMultisig */\n    tag_60:\n      0x01\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FeeTreasury.sol\":608:649  uint16 public constant MAX_FEE_BPS = 1000 */\n    tag_67:\n        /* \"contracts/FeeTreasury.sol\":645:649  1000 */\n      0x03e8\n        /* \"contracts/FeeTreasury.sol\":608:649  uint16 public constant MAX_FEE_BPS = 1000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_54\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_110)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_110:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_54\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_116)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_116:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_54\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_127:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_129:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_130:\n        /* \"#utility.yul\":561:584   */\n      tag_153\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_129\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_154:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_131:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_156\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_130\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_159\n      tag_127\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":833:952   */\n    tag_158:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_160\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_131\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_132:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_133:\n        /* \"#utility.yul\":1268:1289   */\n      tag_163\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_132\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_165\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_133\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1607   */\n    tag_134:\n        /* \"#utility.yul\":1554:1561   */\n      0x00\n        /* \"#utility.yul\":1594:1600   */\n      0xffff\n        /* \"#utility.yul\":1587:1592   */\n      dup3\n        /* \"#utility.yul\":1583:1601   */\n      and\n        /* \"#utility.yul\":1572:1601   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1613:1733   */\n    tag_135:\n        /* \"#utility.yul\":1685:1708   */\n      tag_168\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1685:1708   */\n      tag_134\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1678:1683   */\n      dup2\n        /* \"#utility.yul\":1675:1709   */\n      eq\n        /* \"#utility.yul\":1665:1727   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1665:1727   */\n    tag_169:\n        /* \"#utility.yul\":1613:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1876   */\n    tag_136:\n        /* \"#utility.yul\":1784:1789   */\n      0x00\n        /* \"#utility.yul\":1822:1828   */\n      dup2\n        /* \"#utility.yul\":1809:1829   */\n      calldataload\n        /* \"#utility.yul\":1800:1829   */\n      swap1\n      pop\n        /* \"#utility.yul\":1838:1870   */\n      tag_171\n        /* \"#utility.yul\":1864:1869   */\n      dup2\n        /* \"#utility.yul\":1838:1870   */\n      tag_135\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1739:1876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1882:2209   */\n    tag_26:\n        /* \"#utility.yul\":1940:1946   */\n      0x00\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":1977:1986   */\n      dup3\n        /* \"#utility.yul\":1968:1975   */\n      dup5\n        /* \"#utility.yul\":1964:1987   */\n      sub\n        /* \"#utility.yul\":1960:1992   */\n      slt\n        /* \"#utility.yul\":1957:2076   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1995:2074   */\n      tag_174\n      tag_127\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1957:2076   */\n    tag_173:\n        /* \"#utility.yul\":2115:2116   */\n      0x00\n        /* \"#utility.yul\":2140:2192   */\n      tag_175\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup6\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2140:2192   */\n      tag_136\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2130:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2202   */\n      pop\n        /* \"#utility.yul\":1882:2209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2341   */\n    tag_137:\n        /* \"#utility.yul\":2252:2259   */\n      0x00\n        /* \"#utility.yul\":2292:2334   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2285:2290   */\n      dup3\n        /* \"#utility.yul\":2281:2335   */\n      and\n        /* \"#utility.yul\":2270:2335   */\n      swap1\n      pop\n        /* \"#utility.yul\":2215:2341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2443   */\n    tag_138:\n        /* \"#utility.yul\":2384:2391   */\n      0x00\n        /* \"#utility.yul\":2413:2437   */\n      tag_178\n        /* \"#utility.yul\":2431:2436   */\n      dup3\n        /* \"#utility.yul\":2413:2437   */\n      tag_137\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2402:2437   */\n      swap1\n      pop\n        /* \"#utility.yul\":2347:2443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2449:2571   */\n    tag_139:\n        /* \"#utility.yul\":2522:2546   */\n      tag_180\n        /* \"#utility.yul\":2540:2545   */\n      dup2\n        /* \"#utility.yul\":2522:2546   */\n      tag_138\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2515:2520   */\n      dup2\n        /* \"#utility.yul\":2512:2547   */\n      eq\n        /* \"#utility.yul\":2502:2565   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2561:2562   */\n      0x00\n        /* \"#utility.yul\":2558:2559   */\n      dup1\n        /* \"#utility.yul\":2551:2563   */\n      revert\n        /* \"#utility.yul\":2502:2565   */\n    tag_181:\n        /* \"#utility.yul\":2449:2571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2577:2716   */\n    tag_140:\n        /* \"#utility.yul\":2623:2628   */\n      0x00\n        /* \"#utility.yul\":2661:2667   */\n      dup2\n        /* \"#utility.yul\":2648:2668   */\n      calldataload\n        /* \"#utility.yul\":2639:2668   */\n      swap1\n      pop\n        /* \"#utility.yul\":2677:2710   */\n      tag_183\n        /* \"#utility.yul\":2704:2709   */\n      dup2\n        /* \"#utility.yul\":2677:2710   */\n      tag_139\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2577:2716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2722:3051   */\n    tag_30:\n        /* \"#utility.yul\":2781:2787   */\n      0x00\n        /* \"#utility.yul\":2830:2832   */\n      0x20\n        /* \"#utility.yul\":2818:2827   */\n      dup3\n        /* \"#utility.yul\":2809:2816   */\n      dup5\n        /* \"#utility.yul\":2805:2828   */\n      sub\n        /* \"#utility.yul\":2801:2833   */\n      slt\n        /* \"#utility.yul\":2798:2917   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2836:2915   */\n      tag_186\n      tag_127\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2798:2917   */\n    tag_185:\n        /* \"#utility.yul\":2956:2957   */\n      0x00\n        /* \"#utility.yul\":2981:3034   */\n      tag_187\n        /* \"#utility.yul\":3026:3033   */\n      dup5\n        /* \"#utility.yul\":3017:3023   */\n      dup3\n        /* \"#utility.yul\":3006:3015   */\n      dup6\n        /* \"#utility.yul\":3002:3024   */\n      add\n        /* \"#utility.yul\":2981:3034   */\n      tag_140\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2971:3034   */\n      swap2\n      pop\n        /* \"#utility.yul\":2927:3044   */\n      pop\n        /* \"#utility.yul\":2722:3051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3057:3134   */\n    tag_141:\n        /* \"#utility.yul\":3094:3101   */\n      0x00\n        /* \"#utility.yul\":3123:3128   */\n      dup2\n        /* \"#utility.yul\":3112:3128   */\n      swap1\n      pop\n        /* \"#utility.yul\":3057:3134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3140:3262   */\n    tag_142:\n        /* \"#utility.yul\":3213:3237   */\n      tag_190\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_141\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3206:3211   */\n      dup2\n        /* \"#utility.yul\":3203:3238   */\n      eq\n        /* \"#utility.yul\":3193:3256   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3252:3253   */\n      0x00\n        /* \"#utility.yul\":3249:3250   */\n      dup1\n        /* \"#utility.yul\":3242:3254   */\n      revert\n        /* \"#utility.yul\":3193:3256   */\n    tag_191:\n        /* \"#utility.yul\":3140:3262   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3268:3407   */\n    tag_143:\n        /* \"#utility.yul\":3314:3319   */\n      0x00\n        /* \"#utility.yul\":3352:3358   */\n      dup2\n        /* \"#utility.yul\":3339:3359   */\n      calldataload\n        /* \"#utility.yul\":3330:3359   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3401   */\n      tag_193\n        /* \"#utility.yul\":3395:3400   */\n      dup2\n        /* \"#utility.yul\":3368:3401   */\n      tag_142\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3268:3407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3413:3742   */\n    tag_34:\n        /* \"#utility.yul\":3472:3478   */\n      0x00\n        /* \"#utility.yul\":3521:3523   */\n      0x20\n        /* \"#utility.yul\":3509:3518   */\n      dup3\n        /* \"#utility.yul\":3500:3507   */\n      dup5\n        /* \"#utility.yul\":3496:3519   */\n      sub\n        /* \"#utility.yul\":3492:3524   */\n      slt\n        /* \"#utility.yul\":3489:3608   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":3527:3606   */\n      tag_196\n      tag_127\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3489:3608   */\n    tag_195:\n        /* \"#utility.yul\":3647:3648   */\n      0x00\n        /* \"#utility.yul\":3672:3725   */\n      tag_197\n        /* \"#utility.yul\":3717:3724   */\n      dup5\n        /* \"#utility.yul\":3708:3714   */\n      dup3\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3715   */\n      add\n        /* \"#utility.yul\":3672:3725   */\n      tag_143\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3662:3725   */\n      swap2\n      pop\n        /* \"#utility.yul\":3618:3735   */\n      pop\n        /* \"#utility.yul\":3413:3742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3748:3866   */\n    tag_144:\n        /* \"#utility.yul\":3835:3859   */\n      tag_199\n        /* \"#utility.yul\":3853:3858   */\n      dup2\n        /* \"#utility.yul\":3835:3859   */\n      tag_141\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3830:3833   */\n      dup3\n        /* \"#utility.yul\":3823:3860   */\n      mstore\n        /* \"#utility.yul\":3748:3866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3872:4094   */\n    tag_37:\n        /* \"#utility.yul\":3965:3969   */\n      0x00\n        /* \"#utility.yul\":4003:4005   */\n      0x20\n        /* \"#utility.yul\":3992:4001   */\n      dup3\n        /* \"#utility.yul\":3988:4006   */\n      add\n        /* \"#utility.yul\":3980:4006   */\n      swap1\n      pop\n        /* \"#utility.yul\":4016:4087   */\n      tag_201\n        /* \"#utility.yul\":4084:4085   */\n      0x00\n        /* \"#utility.yul\":4073:4082   */\n      dup4\n        /* \"#utility.yul\":4069:4086   */\n      add\n        /* \"#utility.yul\":4060:4066   */\n      dup5\n        /* \"#utility.yul\":4016:4087   */\n      tag_144\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3872:4094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4100:4215   */\n    tag_145:\n        /* \"#utility.yul\":4185:4208   */\n      tag_203\n        /* \"#utility.yul\":4202:4207   */\n      dup2\n        /* \"#utility.yul\":4185:4208   */\n      tag_134\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4180:4183   */\n      dup3\n        /* \"#utility.yul\":4173:4209   */\n      mstore\n        /* \"#utility.yul\":4100:4215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4439   */\n    tag_41:\n        /* \"#utility.yul\":4312:4316   */\n      0x00\n        /* \"#utility.yul\":4350:4352   */\n      0x20\n        /* \"#utility.yul\":4339:4348   */\n      dup3\n        /* \"#utility.yul\":4335:4353   */\n      add\n        /* \"#utility.yul\":4327:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4363:4432   */\n      tag_205\n        /* \"#utility.yul\":4429:4430   */\n      0x00\n        /* \"#utility.yul\":4418:4427   */\n      dup4\n        /* \"#utility.yul\":4414:4431   */\n      add\n        /* \"#utility.yul\":4405:4411   */\n      dup5\n        /* \"#utility.yul\":4363:4432   */\n      tag_145\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4221:4439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4919   */\n    tag_44:\n        /* \"#utility.yul\":4513:4519   */\n      0x00\n        /* \"#utility.yul\":4521:4527   */\n      dup1\n        /* \"#utility.yul\":4570:4572   */\n      0x40\n        /* \"#utility.yul\":4558:4567   */\n      dup4\n        /* \"#utility.yul\":4549:4556   */\n      dup6\n        /* \"#utility.yul\":4545:4568   */\n      sub\n        /* \"#utility.yul\":4541:4573   */\n      slt\n        /* \"#utility.yul\":4538:4657   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4576:4655   */\n      tag_208\n      tag_127\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4538:4657   */\n    tag_207:\n        /* \"#utility.yul\":4696:4697   */\n      0x00\n        /* \"#utility.yul\":4721:4774   */\n      tag_209\n        /* \"#utility.yul\":4766:4773   */\n      dup6\n        /* \"#utility.yul\":4757:4763   */\n      dup3\n        /* \"#utility.yul\":4746:4755   */\n      dup7\n        /* \"#utility.yul\":4742:4764   */\n      add\n        /* \"#utility.yul\":4721:4774   */\n      tag_143\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4711:4774   */\n      swap3\n      pop\n        /* \"#utility.yul\":4667:4784   */\n      pop\n        /* \"#utility.yul\":4823:4825   */\n      0x20\n        /* \"#utility.yul\":4849:4902   */\n      tag_210\n        /* \"#utility.yul\":4894:4901   */\n      dup6\n        /* \"#utility.yul\":4885:4891   */\n      dup3\n        /* \"#utility.yul\":4874:4883   */\n      dup7\n        /* \"#utility.yul\":4870:4892   */\n      add\n        /* \"#utility.yul\":4849:4902   */\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4839:4902   */\n      swap2\n      pop\n        /* \"#utility.yul\":4794:4912   */\n      pop\n        /* \"#utility.yul\":4445:4919   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4925:5043   */\n    tag_146:\n        /* \"#utility.yul\":5012:5036   */\n      tag_212\n        /* \"#utility.yul\":5030:5035   */\n      dup2\n        /* \"#utility.yul\":5012:5036   */\n      tag_138\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5007:5010   */\n      dup3\n        /* \"#utility.yul\":5000:5037   */\n      mstore\n        /* \"#utility.yul\":4925:5043   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5271   */\n    tag_62:\n        /* \"#utility.yul\":5142:5146   */\n      0x00\n        /* \"#utility.yul\":5180:5182   */\n      0x20\n        /* \"#utility.yul\":5169:5178   */\n      dup3\n        /* \"#utility.yul\":5165:5183   */\n      add\n        /* \"#utility.yul\":5157:5183   */\n      swap1\n      pop\n        /* \"#utility.yul\":5193:5264   */\n      tag_214\n        /* \"#utility.yul\":5261:5262   */\n      0x00\n        /* \"#utility.yul\":5250:5259   */\n      dup4\n        /* \"#utility.yul\":5246:5263   */\n      add\n        /* \"#utility.yul\":5237:5243   */\n      dup5\n        /* \"#utility.yul\":5193:5264   */\n      tag_146\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5049:5271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5277:5601   */\n    tag_79:\n        /* \"#utility.yul\":5394:5398   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x40\n        /* \"#utility.yul\":5421:5430   */\n      dup3\n        /* \"#utility.yul\":5417:5435   */\n      add\n        /* \"#utility.yul\":5409:5435   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5514   */\n      tag_216\n        /* \"#utility.yul\":5511:5512   */\n      0x00\n        /* \"#utility.yul\":5500:5509   */\n      dup4\n        /* \"#utility.yul\":5496:5513   */\n      add\n        /* \"#utility.yul\":5487:5493   */\n      dup6\n        /* \"#utility.yul\":5445:5514   */\n      tag_145\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5524:5594   */\n      tag_217\n        /* \"#utility.yul\":5590:5592   */\n      0x20\n        /* \"#utility.yul\":5579:5588   */\n      dup4\n        /* \"#utility.yul\":5575:5593   */\n      add\n        /* \"#utility.yul\":5566:5572   */\n      dup5\n        /* \"#utility.yul\":5524:5594   */\n      tag_145\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5277:5601   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5607:5939   */\n    tag_125:\n        /* \"#utility.yul\":5728:5732   */\n      0x00\n        /* \"#utility.yul\":5766:5768   */\n      0x40\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5751:5769   */\n      add\n        /* \"#utility.yul\":5743:5769   */\n      swap1\n      pop\n        /* \"#utility.yul\":5779:5850   */\n      tag_219\n        /* \"#utility.yul\":5847:5848   */\n      0x00\n        /* \"#utility.yul\":5836:5845   */\n      dup4\n        /* \"#utility.yul\":5832:5849   */\n      add\n        /* \"#utility.yul\":5823:5829   */\n      dup6\n        /* \"#utility.yul\":5779:5850   */\n      tag_146\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5860:5932   */\n      tag_220\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5917:5926   */\n      dup4\n        /* \"#utility.yul\":5913:5931   */\n      add\n        /* \"#utility.yul\":5904:5910   */\n      dup5\n        /* \"#utility.yul\":5860:5932   */\n      tag_144\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5607:5939   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201b56f54229151207f0eacf7ff7f6477179921688d4995197802e5127aad5e37064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 472,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": 822,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 723,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint16_fromMemory": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2328:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:45:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "899:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:6:6",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:18:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "871:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "881:7:6",
														"type": ""
													}
												],
												"src": "845:89:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "982:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1038:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1005:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1029:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "1012:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1012:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1002:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:42:6"
															},
															"nodeType": "YulIf",
															"src": "992:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "975:5:6",
														"type": ""
													}
												],
												"src": "940:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1128:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1138:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1153:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1147:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1169:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1169:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1169:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1106:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1114:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1122:5:6",
														"type": ""
													}
												],
												"src": "1066:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1323:551:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1371:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1371:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1371:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1340:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:32:6"
															},
															"nodeType": "YulIf",
															"src": "1333:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1462:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1477:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1491:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1481:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1506:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1552:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1563:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1548:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1548:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1572:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1516:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1516:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1506:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1600:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1615:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1629:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1619:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1645:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1691:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1702:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1687:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1687:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1655:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1655:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1645:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1739:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1754:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1758:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1784:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1829:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1840:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1794:30:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1794:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1784:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1277:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1288:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1300:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1308:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1316:6:6",
														"type": ""
													}
												],
												"src": "1213:661:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1943:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1960:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1982:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "1965:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1953:36:6"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1931:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1938:3:6",
														"type": ""
													}
												],
												"src": "1880:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:202:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2133:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2145:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2133:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2211:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2224:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2235:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2169:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2169:69:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2314:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2248:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:70:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:70:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2087:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2099:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2107:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2118:4:6",
														"type": ""
													}
												],
												"src": "2001:324:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint16_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620010e0380380620010e08339818101604052810190620000369190620003de565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806200009c57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15620000d4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e861ffff168161ffff1611156200012a576103e8816040517f3c057d7b0000000000000000000000000000000000000000000000000000000081526004016200012192919062000448565b60405180910390fd5b6200013e5f801b84620001d860201b60201c565b50620001717fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177584620001d860201b60201c565b5081600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548161ffff021916908361ffff16021790555050505062000473565b5f620001eb8383620002d360201b60201c565b620002c95760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620002656200033660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620002cd565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200036c8262000341565b9050919050565b6200037e8162000360565b811462000389575f80fd5b50565b5f815190506200039c8162000373565b92915050565b5f61ffff82169050919050565b620003ba81620003a2565b8114620003c5575f80fd5b50565b5f81519050620003d881620003af565b92915050565b5f805f60608486031215620003f857620003f76200033d565b5b5f62000407868287016200038c565b93505060206200041a868287016200038c565b92505060406200042d86828701620003c8565b9150509250925092565b6200044281620003a2565b82525050565b5f6040820190506200045d5f83018562000437565b6200046c602083018462000437565b9392505050565b610c5f80620004815f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806336568abe1161008a578063a217fddf11610064578063a217fddf1461020d578063bf6284081461022b578063d547741f14610249578063d55be8c614610265576100cd565b806336568abe146101a357806375b238fc146101bf57806391d14854146101dd576100cd565b806301ffc9a7146100d1578063023b1fc9146101015780631d94bd5f1461011d578063248a9ca31461013957806324a9d853146101695780632f2ff15d14610187575b5f80fd5b6100eb60048036038101906100e69190610982565b610283565b6040516100f891906109c7565b60405180910390f35b61011b60048036038101906101169190610a17565b6102fc565b005b61013760048036038101906101329190610a9c565b6103d0565b005b610153600480360381019061014e9190610afa565b6104db565b6040516101609190610b34565b60405180910390f35b6101716104f7565b60405161017e9190610b5c565b60405180910390f35b6101a1600480360381019061019c9190610b75565b61050a565b005b6101bd60048036038101906101b89190610b75565b61052c565b005b6101c76105a7565b6040516101d49190610b34565b60405180910390f35b6101f760048036038101906101f29190610b75565b6105cb565b60405161020491906109c7565b60405180910390f35b61021561062e565b6040516102229190610b34565b60405180910390f35b610233610634565b6040516102409190610bc2565b60405180910390f35b610263600480360381019061025e9190610b75565b61065a565b005b61026d61067c565b60405161027a9190610b5c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102f557506102f482610682565b5b9050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610326816106eb565b6103e861ffff168261ffff161115610379576103e8826040517f3c057d7b000000000000000000000000000000000000000000000000000000008152600401610370929190610bdb565b60405180910390fd5b8160015f6101000a81548161ffff021916908361ffff1602179055507fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48826040516103c49190610b5c565b60405180910390a15050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756103fa816106eb565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361045f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1826040516104cf9190610bc2565b60405180910390a15050565b5f805f8381526020019081526020015f20600101549050919050565b60015f9054906101000a900461ffff1681565b610513826104db565b61051c816106eb565b61052683836106ff565b50505050565b6105346107e8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610598576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105a282826107ef565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610663826104db565b61066c816106eb565b61067683836107ef565b50505050565b6103e881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6106fc816106f76107e8565b6108d8565b50565b5f61070a83836105cb565b6107de5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061077b6107e8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506107e2565b5f90505b92915050565b5f33905090565b5f6107fa83836105cb565b156108ce575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061086b6107e8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506108d2565b5f90505b92915050565b6108e282826105cb565b6109255780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161091c929190610c02565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109618161092d565b811461096b575f80fd5b50565b5f8135905061097c81610958565b92915050565b5f6020828403121561099757610996610929565b5b5f6109a48482850161096e565b91505092915050565b5f8115159050919050565b6109c1816109ad565b82525050565b5f6020820190506109da5f8301846109b8565b92915050565b5f61ffff82169050919050565b6109f6816109e0565b8114610a00575f80fd5b50565b5f81359050610a11816109ed565b92915050565b5f60208284031215610a2c57610a2b610929565b5b5f610a3984828501610a03565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a6b82610a42565b9050919050565b610a7b81610a61565b8114610a85575f80fd5b50565b5f81359050610a9681610a72565b92915050565b5f60208284031215610ab157610ab0610929565b5b5f610abe84828501610a88565b91505092915050565b5f819050919050565b610ad981610ac7565b8114610ae3575f80fd5b50565b5f81359050610af481610ad0565b92915050565b5f60208284031215610b0f57610b0e610929565b5b5f610b1c84828501610ae6565b91505092915050565b610b2e81610ac7565b82525050565b5f602082019050610b475f830184610b25565b92915050565b610b56816109e0565b82525050565b5f602082019050610b6f5f830184610b4d565b92915050565b5f8060408385031215610b8b57610b8a610929565b5b5f610b9885828601610ae6565b9250506020610ba985828601610a88565b9150509250929050565b610bbc81610a61565b82525050565b5f602082019050610bd55f830184610bb3565b92915050565b5f604082019050610bee5f830185610b4d565b610bfb6020830184610b4d565b9392505050565b5f604082019050610c155f830185610bb3565b610c226020830184610b25565b939250505056fea26469706673582212201b56f54229151207f0eacf7ff7f6477179921688d4995197802e5127aad5e37064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10E0 CODESIZE SUB DUP1 PUSH3 0x10E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x3DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH3 0x9C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH3 0x12A JUMPI PUSH2 0x3E8 DUP2 PUSH1 0x40 MLOAD PUSH32 0x3C057D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x121 SWAP3 SWAP2 SWAP1 PUSH3 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x13E PUSH0 DUP1 SHL DUP5 PUSH3 0x1D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x171 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP5 PUSH3 0x1D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x473 JUMP JUMPDEST PUSH0 PUSH3 0x1EB DUP4 DUP4 PUSH3 0x2D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2C9 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x265 PUSH3 0x336 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x2CD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x36C DUP3 PUSH3 0x341 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x37E DUP2 PUSH3 0x360 JUMP JUMPDEST DUP2 EQ PUSH3 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x39C DUP2 PUSH3 0x373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BA DUP2 PUSH3 0x3A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D8 DUP2 PUSH3 0x3AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3F8 JUMPI PUSH3 0x3F7 PUSH3 0x33D JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x407 DUP7 DUP3 DUP8 ADD PUSH3 0x38C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x41A DUP7 DUP3 DUP8 ADD PUSH3 0x38C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x42D DUP7 DUP3 DUP8 ADD PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x442 DUP2 PUSH3 0x3A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x45D PUSH0 DUP4 ADD DUP6 PUSH3 0x437 JUMP JUMPDEST PUSH3 0x46C PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x437 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC5F DUP1 PUSH3 0x481 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36568ABE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xBF628408 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1DD JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B1FC9 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1D94BD5F EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2F5 JUMPI POP PUSH2 0x2F4 DUP3 PUSH2 0x682 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x326 DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x379 JUMPI PUSH2 0x3E8 DUP3 PUSH1 0x40 MLOAD PUSH32 0x3C057D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP3 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC8FCF8EE1425E7E60B8AF83735E1EB516D5B9EF05BFD6EECE552EBAEB7C75B48 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x3FA DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x513 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x526 DUP4 DUP4 PUSH2 0x6FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x534 PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A2 DUP3 DUP3 PUSH2 0x7EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x663 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x676 DUP4 DUP4 PUSH2 0x7EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FC DUP2 PUSH2 0x6F7 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x70A DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x7DE JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x77B PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x7E2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7FA DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST ISZERO PUSH2 0x8CE JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x86B PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8D2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E2 DUP3 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x925 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP3 SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x92D JUMP JUMPDEST DUP2 EQ PUSH2 0x96B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97C DUP2 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A4 DUP5 DUP3 DUP6 ADD PUSH2 0x96E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C1 DUP2 PUSH2 0x9AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH0 DUP4 ADD DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA11 DUP2 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA39 DUP5 DUP3 DUP6 ADD PUSH2 0xA03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6B DUP3 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xA61 JUMP JUMPDEST DUP2 EQ PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA96 DUP2 PUSH2 0xA72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH2 0xAB0 PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xABE DUP5 DUP3 DUP6 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD9 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF4 DUP2 PUSH2 0xAD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1C DUP5 DUP3 DUP6 ADD PUSH2 0xAE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB47 PUSH0 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH0 DUP4 ADD DUP5 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8A PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB98 DUP6 DUP3 DUP7 ADD PUSH2 0xAE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA9 DUP6 DUP3 DUP7 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL JUMP CREATE2 TIMESTAMP 0x29 ISZERO SLT SMOD CREATE 0xEA 0xCF PUSH32 0xF7F6477179921688D4995197802E5127AAD5E37064736F6C6343000814003300 ",
							"sourceMap": "343:2107:5:-:0;;;945:543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1089:1;1071:20;;:6;:20;;;:54;;;;1123:1;1095:30;;:16;:30;;;1071:54;1067:107;;;1149:13;;;;;;;;;;;;;;1067:107;645:4;1188:28;;:14;:28;;;1184:107;;;645:4;1264:14;1240:39;;;;;;;;;;;;:::i;:::-;;;;;;;;1184:107;1311:38;2241:4:0;1322:18:5;;1342:6;1311:10;;;:38;;:::i;:::-;;1360:30;447:23;1383:6;1360:10;;;:30;;:::i;:::-;;1430:16;1411;;:35;;;;;;;;;;;;;;;;;;1466:14;1457:6;;:23;;;;;;;;;;;;;;;;;;945:543;;;343:2107;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:89::-;881:7;921:6;914:5;910:18;899:29;;845:89;;;:::o;940:120::-;1012:23;1029:5;1012:23;:::i;:::-;1005:5;1002:34;992:62;;1050:1;1047;1040:12;992:62;940:120;:::o;1066:141::-;1122:5;1153:6;1147:13;1138:22;;1169:32;1195:5;1169:32;:::i;:::-;1066:141;;;;:::o;1213:661::-;1300:6;1308;1316;1365:2;1353:9;1344:7;1340:23;1336:32;1333:119;;;1371:79;;:::i;:::-;1333:119;1491:1;1516:64;1572:7;1563:6;1552:9;1548:22;1516:64;:::i;:::-;1506:74;;1462:128;1629:2;1655:64;1711:7;1702:6;1691:9;1687:22;1655:64;:::i;:::-;1645:74;;1600:129;1768:2;1794:63;1849:7;1840:6;1829:9;1825:22;1794:63;:::i;:::-;1784:73;;1739:128;1213:661;;;;;:::o;1880:115::-;1965:23;1982:5;1965:23;:::i;:::-;1960:3;1953:36;1880:115;;:::o;2001:324::-;2118:4;2156:2;2145:9;2141:18;2133:26;;2169:69;2235:1;2224:9;2220:17;2211:6;2169:69;:::i;:::-;2248:70;2314:2;2303:9;2299:18;2290:6;2248:70;:::i;:::-;2001:324;;;;;:::o;343:2107:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_456": {
									"entryPoint": 1447,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 1582,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_FEE_BPS_463": {
									"entryPoint": 1660,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 2264,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 1771,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 1791,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": 2024,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 2031,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeBps_458": {
									"entryPoint": 1271,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_129": {
									"entryPoint": 1243,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 1290,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 1483,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 1324,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 1626,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeBps_563": {
									"entryPoint": 764,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasuryMultisig_592": {
									"entryPoint": 976,
									"id": 592,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_432": {
									"entryPoint": 1666,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 643,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@treasuryMultisig_460": {
									"entryPoint": 1588,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5942:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:45:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1587:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:6:6",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1583:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:18:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1572:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1554:7:6",
														"type": ""
													}
												],
												"src": "1518:89:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1678:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "1685:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:42:6"
															},
															"nodeType": "YulIf",
															"src": "1665:62:6"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1648:5:6",
														"type": ""
													}
												],
												"src": "1613:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1864:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1838:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1838:32:6"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1768:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1776:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1784:5:6",
														"type": ""
													}
												],
												"src": "1739:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1947:262:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1993:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1995:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1995:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1968:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1964:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1964:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:32:6"
															},
															"nodeType": "YulIf",
															"src": "1957:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2130:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2140:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2130:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1917:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1928:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1940:6:6",
														"type": ""
													}
												],
												"src": "1882:327:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2260:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2270:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2285:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2270:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2242:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2252:7:6",
														"type": ""
													}
												],
												"src": "2215:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2392:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2402:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2431:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2413:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2402:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2374:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2384:7:6",
														"type": ""
													}
												],
												"src": "2347:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2492:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2549:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2558:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2561:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2551:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2551:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2551:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2515:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2540:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2522:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2522:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2512:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:43:6"
															},
															"nodeType": "YulIf",
															"src": "2502:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2485:5:6",
														"type": ""
													}
												],
												"src": "2449:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2639:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2661:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2648:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2648:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2639:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2704:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2677:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2615:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2623:5:6",
														"type": ""
													}
												],
												"src": "2577:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2788:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2834:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2836:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2836:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2836:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2809:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2805:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2805:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:32:6"
															},
															"nodeType": "YulIf",
															"src": "2798:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2927:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2942:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2946:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2971:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3006:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3017:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3002:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3002:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3026:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2981:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2971:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2758:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2769:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2781:6:6",
														"type": ""
													}
												],
												"src": "2722:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3102:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3112:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3123:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3112:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3084:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3094:7:6",
														"type": ""
													}
												],
												"src": "3057:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3183:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3240:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3252:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3242:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3242:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3242:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3206:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3231:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "3213:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3213:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3203:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:43:6"
															},
															"nodeType": "YulIf",
															"src": "3193:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3176:5:6",
														"type": ""
													}
												],
												"src": "3140:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3330:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3352:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3339:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3330:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3395:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "3368:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3298:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3306:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3314:5:6",
														"type": ""
													}
												],
												"src": "3268:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3479:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3525:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3527:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3527:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3527:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3500:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3496:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:32:6"
															},
															"nodeType": "YulIf",
															"src": "3489:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3618:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3633:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3637:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3662:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3697:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3708:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3693:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3693:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3717:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3672:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3672:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3662:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3449:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3460:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3472:6:6",
														"type": ""
													}
												],
												"src": "3413:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3813:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3830:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3853:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3835:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3823:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3801:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3808:3:6",
														"type": ""
													}
												],
												"src": "3748:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3970:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3980:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3992:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4003:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3988:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3980:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4060:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4073:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4084:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4069:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4069:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4016:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4016:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3942:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3954:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3965:4:6",
														"type": ""
													}
												],
												"src": "3872:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4163:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4180:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4202:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "4185:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4173:36:6"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4151:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4158:3:6",
														"type": ""
													}
												],
												"src": "4100:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4339:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4335:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4327:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4418:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4429:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4414:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4363:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4363:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4289:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4301:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4312:4:6",
														"type": ""
													}
												],
												"src": "4221:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4574:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4576:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4576:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4576:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4549:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4558:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:32:6"
															},
															"nodeType": "YulIf",
															"src": "4538:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4667:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4682:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4696:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4686:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4711:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4746:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4757:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4742:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4742:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4766:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4721:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4721:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4711:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4794:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4839:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4874:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4885:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4870:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4894:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4849:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4849:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4839:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4490:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4501:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4513:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4521:6:6",
														"type": ""
													}
												],
												"src": "4445:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5007:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5030:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5012:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5012:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5000:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4978:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4985:3:6",
														"type": ""
													}
												],
												"src": "4925:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5147:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5157:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5169:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5165:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5157:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5237:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5261:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5246:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5246:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5193:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5119:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5131:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5142:4:6",
														"type": ""
													}
												],
												"src": "5049:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5399:202:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5409:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5421:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5417:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5409:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5487:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5511:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5445:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5445:69:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5566:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5579:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5590:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5575:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5575:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5524:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:70:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:70:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5363:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5383:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5394:4:6",
														"type": ""
													}
												],
												"src": "5277:324:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5733:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5743:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5755:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5766:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5751:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5743:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5823:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5836:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5847:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5832:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5832:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5779:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5779:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5904:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5917:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5928:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5913:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5913:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5860:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5860:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5697:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5709:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5717:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:6",
														"type": ""
													}
												],
												"src": "5607:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806336568abe1161008a578063a217fddf11610064578063a217fddf1461020d578063bf6284081461022b578063d547741f14610249578063d55be8c614610265576100cd565b806336568abe146101a357806375b238fc146101bf57806391d14854146101dd576100cd565b806301ffc9a7146100d1578063023b1fc9146101015780631d94bd5f1461011d578063248a9ca31461013957806324a9d853146101695780632f2ff15d14610187575b5f80fd5b6100eb60048036038101906100e69190610982565b610283565b6040516100f891906109c7565b60405180910390f35b61011b60048036038101906101169190610a17565b6102fc565b005b61013760048036038101906101329190610a9c565b6103d0565b005b610153600480360381019061014e9190610afa565b6104db565b6040516101609190610b34565b60405180910390f35b6101716104f7565b60405161017e9190610b5c565b60405180910390f35b6101a1600480360381019061019c9190610b75565b61050a565b005b6101bd60048036038101906101b89190610b75565b61052c565b005b6101c76105a7565b6040516101d49190610b34565b60405180910390f35b6101f760048036038101906101f29190610b75565b6105cb565b60405161020491906109c7565b60405180910390f35b61021561062e565b6040516102229190610b34565b60405180910390f35b610233610634565b6040516102409190610bc2565b60405180910390f35b610263600480360381019061025e9190610b75565b61065a565b005b61026d61067c565b60405161027a9190610b5c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102f557506102f482610682565b5b9050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610326816106eb565b6103e861ffff168261ffff161115610379576103e8826040517f3c057d7b000000000000000000000000000000000000000000000000000000008152600401610370929190610bdb565b60405180910390fd5b8160015f6101000a81548161ffff021916908361ffff1602179055507fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48826040516103c49190610b5c565b60405180910390a15050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756103fa816106eb565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361045f576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1826040516104cf9190610bc2565b60405180910390a15050565b5f805f8381526020019081526020015f20600101549050919050565b60015f9054906101000a900461ffff1681565b610513826104db565b61051c816106eb565b61052683836106ff565b50505050565b6105346107e8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610598576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105a282826107ef565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610663826104db565b61066c816106eb565b61067683836107ef565b50505050565b6103e881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6106fc816106f76107e8565b6108d8565b50565b5f61070a83836105cb565b6107de5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061077b6107e8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506107e2565b5f90505b92915050565b5f33905090565b5f6107fa83836105cb565b156108ce575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061086b6107e8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506108d2565b5f90505b92915050565b6108e282826105cb565b6109255780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161091c929190610c02565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109618161092d565b811461096b575f80fd5b50565b5f8135905061097c81610958565b92915050565b5f6020828403121561099757610996610929565b5b5f6109a48482850161096e565b91505092915050565b5f8115159050919050565b6109c1816109ad565b82525050565b5f6020820190506109da5f8301846109b8565b92915050565b5f61ffff82169050919050565b6109f6816109e0565b8114610a00575f80fd5b50565b5f81359050610a11816109ed565b92915050565b5f60208284031215610a2c57610a2b610929565b5b5f610a3984828501610a03565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a6b82610a42565b9050919050565b610a7b81610a61565b8114610a85575f80fd5b50565b5f81359050610a9681610a72565b92915050565b5f60208284031215610ab157610ab0610929565b5b5f610abe84828501610a88565b91505092915050565b5f819050919050565b610ad981610ac7565b8114610ae3575f80fd5b50565b5f81359050610af481610ad0565b92915050565b5f60208284031215610b0f57610b0e610929565b5b5f610b1c84828501610ae6565b91505092915050565b610b2e81610ac7565b82525050565b5f602082019050610b475f830184610b25565b92915050565b610b56816109e0565b82525050565b5f602082019050610b6f5f830184610b4d565b92915050565b5f8060408385031215610b8b57610b8a610929565b5b5f610b9885828601610ae6565b9250506020610ba985828601610a88565b9150509250929050565b610bbc81610a61565b82525050565b5f602082019050610bd55f830184610bb3565b92915050565b5f604082019050610bee5f830185610b4d565b610bfb6020830184610b4d565b9392505050565b5f604082019050610c155f830185610bb3565b610c226020830184610b25565b939250505056fea26469706673582212201b56f54229151207f0eacf7ff7f6477179921688d4995197802e5127aad5e37064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x36568ABE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xBF628408 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1DD JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B1FC9 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1D94BD5F EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x187 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2F5 JUMPI POP PUSH2 0x2F4 DUP3 PUSH2 0x682 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x326 DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x379 JUMPI PUSH2 0x3E8 DUP3 PUSH1 0x40 MLOAD PUSH32 0x3C057D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP3 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC8FCF8EE1425E7E60B8AF83735E1EB516D5B9EF05BFD6EECE552EBAEB7C75B48 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x3FA DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x513 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x526 DUP4 DUP4 PUSH2 0x6FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x534 PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A2 DUP3 DUP3 PUSH2 0x7EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x663 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x676 DUP4 DUP4 PUSH2 0x7EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FC DUP2 PUSH2 0x6F7 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x70A DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x7DE JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x77B PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x7E2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7FA DUP4 DUP4 PUSH2 0x5CB JUMP JUMPDEST ISZERO PUSH2 0x8CE JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x86B PUSH2 0x7E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8D2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E2 DUP3 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x925 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP3 SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x961 DUP2 PUSH2 0x92D JUMP JUMPDEST DUP2 EQ PUSH2 0x96B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x97C DUP2 PUSH2 0x958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9A4 DUP5 DUP3 DUP6 ADD PUSH2 0x96E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C1 DUP2 PUSH2 0x9AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DA PUSH0 DUP4 ADD DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP2 EQ PUSH2 0xA00 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA11 DUP2 PUSH2 0x9ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA39 DUP5 DUP3 DUP6 ADD PUSH2 0xA03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6B DUP3 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xA61 JUMP JUMPDEST DUP2 EQ PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA96 DUP2 PUSH2 0xA72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH2 0xAB0 PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xABE DUP5 DUP3 DUP6 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD9 DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF4 DUP2 PUSH2 0xAD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB1C DUP5 DUP3 DUP6 ADD PUSH2 0xAE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0xAC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB47 PUSH0 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0x9E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6F PUSH0 DUP4 ADD DUP5 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB8A PUSH2 0x929 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB98 DUP6 DUP3 DUP7 ADD PUSH2 0xAE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA9 DUP6 DUP3 DUP7 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xA61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP6 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL JUMP CREATE2 TIMESTAMP 0x29 ISZERO SLT SMOD CREATE 0xEA 0xCF PUSH32 0xF7F6477179921688D4995197802E5127AAD5E37064736F6C6343000814003300 ",
							"sourceMap": "343:2107:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:253:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2182:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;410:60:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:31:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;608:41:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1726:253:5:-;447:23;2473:16:0;2484:4;2473:10;:16::i;:::-;645:4:5::1;1809:24;;:10;:24;;;1805:99;;;645:4;1881:10;1857:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1805:99;1923:10;1914:6;;:19;;;;;;;;;;;;;;;;;;1949:22;1960:10;1949:22;;;;;;:::i;:::-;;;;;;;;1726:253:::0;;:::o;2182:265::-;447:23;2473:16:0;2484:4;2473:10;:16::i;:::-;2302:1:5::1;2278:26;;:12;:26;;::::0;2274:79:::1;;2328:13;;;;;;;;;;;;;;2274:79;2382:12;2363:16;;:31;;;;;;;;;;;;;;;;;;2410:29;2426:12;2410:29;;;;;;:::i;:::-;;;;;;;;2182:265:::0;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;511:20:5:-;;;;;;;;;;;;;:::o;4202:136:0:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;410:60:5:-;447:23;410:60;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2196:49::-;2241:4;2196:49;;;:::o;538:31:5:-;;;;;;;;;;;;;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;608:41:5:-;645:4;608:41;:::o;730:146:3:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;3408:197::-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:89::-;1554:7;1594:6;1587:5;1583:18;1572:29;;1518:89;;;:::o;1613:120::-;1685:23;1702:5;1685:23;:::i;:::-;1678:5;1675:34;1665:62;;1723:1;1720;1713:12;1665:62;1613:120;:::o;1739:137::-;1784:5;1822:6;1809:20;1800:29;;1838:32;1864:5;1838:32;:::i;:::-;1739:137;;;;:::o;1882:327::-;1940:6;1989:2;1977:9;1968:7;1964:23;1960:32;1957:119;;;1995:79;;:::i;:::-;1957:119;2115:1;2140:52;2184:7;2175:6;2164:9;2160:22;2140:52;:::i;:::-;2130:62;;2086:116;1882:327;;;;:::o;2215:126::-;2252:7;2292:42;2285:5;2281:54;2270:65;;2215:126;;;:::o;2347:96::-;2384:7;2413:24;2431:5;2413:24;:::i;:::-;2402:35;;2347:96;;;:::o;2449:122::-;2522:24;2540:5;2522:24;:::i;:::-;2515:5;2512:35;2502:63;;2561:1;2558;2551:12;2502:63;2449:122;:::o;2577:139::-;2623:5;2661:6;2648:20;2639:29;;2677:33;2704:5;2677:33;:::i;:::-;2577:139;;;;:::o;2722:329::-;2781:6;2830:2;2818:9;2809:7;2805:23;2801:32;2798:119;;;2836:79;;:::i;:::-;2798:119;2956:1;2981:53;3026:7;3017:6;3006:9;3002:22;2981:53;:::i;:::-;2971:63;;2927:117;2722:329;;;;:::o;3057:77::-;3094:7;3123:5;3112:16;;3057:77;;;:::o;3140:122::-;3213:24;3231:5;3213:24;:::i;:::-;3206:5;3203:35;3193:63;;3252:1;3249;3242:12;3193:63;3140:122;:::o;3268:139::-;3314:5;3352:6;3339:20;3330:29;;3368:33;3395:5;3368:33;:::i;:::-;3268:139;;;;:::o;3413:329::-;3472:6;3521:2;3509:9;3500:7;3496:23;3492:32;3489:119;;;3527:79;;:::i;:::-;3489:119;3647:1;3672:53;3717:7;3708:6;3697:9;3693:22;3672:53;:::i;:::-;3662:63;;3618:117;3413:329;;;;:::o;3748:118::-;3835:24;3853:5;3835:24;:::i;:::-;3830:3;3823:37;3748:118;;:::o;3872:222::-;3965:4;4003:2;3992:9;3988:18;3980:26;;4016:71;4084:1;4073:9;4069:17;4060:6;4016:71;:::i;:::-;3872:222;;;;:::o;4100:115::-;4185:23;4202:5;4185:23;:::i;:::-;4180:3;4173:36;4100:115;;:::o;4221:218::-;4312:4;4350:2;4339:9;4335:18;4327:26;;4363:69;4429:1;4418:9;4414:17;4405:6;4363:69;:::i;:::-;4221:218;;;;:::o;4445:474::-;4513:6;4521;4570:2;4558:9;4549:7;4545:23;4541:32;4538:119;;;4576:79;;:::i;:::-;4538:119;4696:1;4721:53;4766:7;4757:6;4746:9;4742:22;4721:53;:::i;:::-;4711:63;;4667:117;4823:2;4849:53;4894:7;4885:6;4874:9;4870:22;4849:53;:::i;:::-;4839:63;;4794:118;4445:474;;;;;:::o;4925:118::-;5012:24;5030:5;5012:24;:::i;:::-;5007:3;5000:37;4925:118;;:::o;5049:222::-;5142:4;5180:2;5169:9;5165:18;5157:26;;5193:71;5261:1;5250:9;5246:17;5237:6;5193:71;:::i;:::-;5049:222;;;;:::o;5277:324::-;5394:4;5432:2;5421:9;5417:18;5409:26;;5445:69;5511:1;5500:9;5496:17;5487:6;5445:69;:::i;:::-;5524:70;5590:2;5579:9;5575:18;5566:6;5524:70;:::i;:::-;5277:324;;;;;:::o;5607:332::-;5728:4;5766:2;5755:9;5751:18;5743:26;;5779:71;5847:1;5836:9;5832:17;5823:6;5779:71;:::i;:::-;5860:72;5928:2;5917:9;5913:18;5904:6;5860:72;:::i;:::-;5607:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "633400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"MAX_FEE_BPS()": "419",
								"feeBps()": "2555",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setFeeBps(uint16)": "infinite",
								"setTreasuryMultisig(address)": "infinite",
								"supportsInterface(bytes4)": "718",
								"treasuryMultisig()": "2603"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 945,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1077,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1091,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1111,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1071,
									"end": 1125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1174,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1174,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1067,
									"end": 1174,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1174,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1067,
									"end": 1174,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 645,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 1188,
									"end": 1216,
									"name": "PUSH",
									"source": 5,
									"value": "FFFF"
								},
								{
									"begin": 1188,
									"end": 1216,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1202,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1216,
									"name": "PUSH",
									"source": 5,
									"value": "FFFF"
								},
								{
									"begin": 1188,
									"end": 1216,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1216,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1184,
									"end": 1291,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1184,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1184,
									"end": 1291,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 645,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 1264,
									"end": 1278,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH",
									"source": 5,
									"value": "3C057D7B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1240,
									"end": 1279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1279,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1184,
									"end": 1291,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1184,
									"end": 1291,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1340,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1348,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1349,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 447,
									"end": 470,
									"name": "PUSH",
									"source": 5,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1383,
									"end": 1389,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1360,
									"end": 1370,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1370,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1390,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1446,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1427,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1411,
									"end": 1427,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1411,
									"end": 1446,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1457,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "PUSH",
									"source": 5,
									"value": "FFFF"
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "PUSH",
									"source": 5,
									"value": "FFFF"
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1457,
									"end": 1480,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1488,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 934,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 845,
									"end": 934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 927,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 910,
									"end": 928,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 899,
									"end": 928,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 899,
									"end": 928,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1012,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1005,
									"end": 1010,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1002,
									"end": 1036,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 940,
									"end": 1060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1127,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1159,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1160,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1169,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1066,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1306,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1308,
									"end": 1314,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1367,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1353,
									"end": 1362,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1368,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1333,
									"end": 1452,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1333,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1333,
									"end": 1452,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1371,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1371,
									"end": 1450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1450,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1371,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1333,
									"end": 1452,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1333,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1516,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1572,
									"end": 1579,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1569,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1561,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1548,
									"end": 1570,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1516,
									"end": 1580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1580,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1516,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1580,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1462,
									"end": 1590,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1629,
									"end": 1631,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1655,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1711,
									"end": 1718,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1700,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1709,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1655,
									"end": 1719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1719,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1655,
									"end": 1719,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1719,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1645,
									"end": 1719,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1768,
									"end": 1770,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1794,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1849,
									"end": 1856,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1846,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1838,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1825,
									"end": 1847,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1794,
									"end": 1857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1857,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1794,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1857,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1857,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1213,
									"end": 1874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1880,
									"end": 1995,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1880,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1982,
									"end": 1987,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1965,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1965,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1960,
									"end": 1963,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1953,
									"end": 1989,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1880,
									"end": 1995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1880,
									"end": 1995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1880,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2122,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2156,
									"end": 2158,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2145,
									"end": 2154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2159,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2159,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2159,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2169,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2235,
									"end": 2236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2233,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2220,
									"end": 2237,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2217,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2169,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2169,
									"end": 2238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2169,
									"end": 2238,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2169,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2248,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2314,
									"end": 2316,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2303,
									"end": 2312,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2317,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2248,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2248,
									"end": 2318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2248,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2248,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2325,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 2450,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b56f54229151207f0eacf7ff7f6477179921688d4995197802e5127aad5e37064736f6c63430008140033",
									".code": [
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "BF628408"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "D55BE8C6"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "75B238FC"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "23B1FC9"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "1D94BD5F"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "24A9D853"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 343,
											"end": 2450,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1726,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1726,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2182,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2182,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 511,
											"end": 531,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 511,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 511,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 470,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 410,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 410,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 538,
											"end": 569,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 538,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 538,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 649,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 608,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 608,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 447,
											"end": 470,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1833,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1904,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1805,
											"end": 1904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 645,
											"end": 649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 1881,
											"end": 1891,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3C057D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1857,
											"end": 1892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1892,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1805,
											"end": 1904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1914,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "C8FCF8EE1425E7E60B8AF83735E1EB516D5B9EF05BFD6EECE552EBAEB7C75B48"
										},
										{
											"begin": 1960,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1949,
											"end": 1971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 447,
											"end": 470,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2274,
											"end": 2353,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2341,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2274,
											"end": 2353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2363,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2394,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1"
										},
										{
											"begin": 2426,
											"end": 2438,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2410,
											"end": 2439,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2439,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 531,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 511,
											"end": 531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 511,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 470,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 447,
											"end": 470,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 410,
											"end": 470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 410,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 569,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 569,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 538,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 649,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 608,
											"end": 649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 608,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1518,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1572,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1572,
											"end": 1601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1685,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1838,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1995,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2140,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2215,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2334,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2335,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2347,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2413,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2437,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2413,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2449,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2540,
											"end": 2545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2522,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2546,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2522,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2668,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2704,
											"end": 2709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2677,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2677,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2828,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2833,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2798,
											"end": 2917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2836,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2836,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2915,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2836,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2917,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2798,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3026,
											"end": 3033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2981,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 3034,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2981,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 3034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 3034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2927,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 3051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3134,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3057,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3213,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3238,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3193,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3359,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3368,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3401,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3368,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3519,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3524,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3489,
											"end": 3608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3527,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3527,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3527,
											"end": 3606,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3527,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3608,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3489,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3672,
											"end": 3725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3725,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3672,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3866,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3748,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3835,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3992,
											"end": 4001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4069,
											"end": 4086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4016,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4087,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4016,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4215,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4100,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4202,
											"end": 4207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4185,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4208,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4185,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4352,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4363,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4432,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4363,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4549,
											"end": 4556,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4573,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4538,
											"end": 4657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4576,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4576,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4655,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4576,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4657,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4538,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4766,
											"end": 4773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4721,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4894,
											"end": 4901,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4849,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4902,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4849,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5043,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4925,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5030,
											"end": 5035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5012,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5012,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5261,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5193,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5264,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5193,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5049,
											"end": 5271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5409,
											"end": 5435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5445,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5514,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5445,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5524,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5594,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5524,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5779,
											"end": 5850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5850,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5779,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5910,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5860,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5932,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5860,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/FeeTreasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MAX_FEE_BPS()": "d55be8c6",
							"feeBps()": "24a9d853",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setFeeBps(uint16)": "023b1fc9",
							"setTreasuryMultisig(address)": "1d94bd5f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"treasuryMultisig()": "bf628408"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialTreasury\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_initialFeeBps\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"maxFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"actualFee\",\"type\":\"uint16\"}],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newFeeBps\",\"type\":\"uint16\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_newFeeBps\",\"type\":\"uint16\"}],\"name\":\"setFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"setTreasuryMultisig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryMultisig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hassan Ali\",\"details\":\"This contract acts as a central configuration point for platform fees.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setFeeBps(uint16)\":{\"details\":\"Must be called by an address with ADMIN_ROLE.\",\"params\":{\"_newFeeBps\":\"The new fee (e.g., 250 for 2.5%).\"}},\"setTreasuryMultisig(address)\":{\"details\":\"Must be called by an address with ADMIN_ROLE.\",\"params\":{\"_newTreasury\":\"The new multisig address.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"FeeTreasury\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setFeeBps(uint16)\":{\"notice\":\"Sets the new protocol fee in basis points.\"},\"setTreasuryMultisig(address)\":{\"notice\":\"Sets the new address for the treasury multisig.\"}},\"notice\":\"Manages the protocol fee settings and the destination treasury address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FeeTreasury.sol\":\"FeeTreasury\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/FeeTreasury.sol\":{\"keccak256\":\"0x3a9e615a06065719533e03fca8bb192d5ddc3bff215a12555f9914c2ea2af81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4aa7c94596e3fb3be175bd70a16e7dc017c882a263016b8fc179380d88bc259\",\"dweb:/ipfs/QmTUPJt9vTq9Vh2KE9pdtXWnD5DMqF7yStmHoKfRcoSak8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/FeeTreasury.sol:FeeTreasury",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 458,
								"contract": "contracts/FeeTreasury.sol:FeeTreasury",
								"label": "feeBps",
								"offset": 0,
								"slot": "1",
								"type": "t_uint16"
							},
							{
								"astId": 460,
								"contract": "contracts/FeeTreasury.sol:FeeTreasury",
								"label": "treasuryMultisig",
								"offset": 2,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/FeeTreasury.sol:FeeTreasury",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/FeeTreasury.sol:FeeTreasury",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setFeeBps(uint16)": {
								"notice": "Sets the new protocol fee in basis points."
							},
							"setTreasuryMultisig(address)": {
								"notice": "Sets the new address for the treasury multisig."
							}
						},
						"notice": "Manages the protocol fee settings and the destination treasury address.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 410,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 409,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 434,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 433,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 433,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								433,
								445,
								379,
								409
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										432
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 387,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 386,
												"id": 389,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 409,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 409,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 409,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							433
						],
						"IERC165": [
							445
						]
					},
					"id": 434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 434,
							"sourceUnit": 446,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 412,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 415,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "688:7:3"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 433,
							"linearizedBaseContracts": [
								433,
								445
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "812:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "829:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 426,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 425,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$445",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 423,
												"id": 430,
												"nodeType": "Return",
												"src": "822:47:3"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:3",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "757:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 418,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "806:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:3"
									},
									"scope": 433,
									"src": "730:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 434,
							"src": "660:218:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 435,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC165",
							"nameLocation": "433:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "819:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "862:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:4"
									},
									"scope": 445,
									"src": "792:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "423:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:4"
				},
				"id": 4
			},
			"contracts/FeeTreasury.sol": {
				"ast": {
					"absolutePath": "contracts/FeeTreasury.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"FeeTreasury": [
							593
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 594,
							"sourceUnit": 297,
							"src": "61:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 450,
										"name": "AccessControl",
										"nameLocations": [
											"367:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "367:13:5"
									},
									"id": 451,
									"nodeType": "InheritanceSpecifier",
									"src": "367:13:5"
								}
							],
							"canonicalName": "FeeTreasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "123:218:5",
								"text": " @title FeeTreasury\n @author Hassan Ali\n @notice Manages the protocol fee settings and the destination treasury address.\n @dev This contract acts as a central configuration point for platform fees."
							},
							"fullyImplemented": true,
							"id": 593,
							"linearizedBaseContracts": [
								593,
								296,
								433,
								445,
								379,
								409
							],
							"name": "FeeTreasury",
							"nameLocation": "352:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 456,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "434:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 593,
									"src": "410:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 454,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "457:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 453,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "447:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "447:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24a9d853",
									"id": 458,
									"mutability": "mutable",
									"name": "feeBps",
									"nameLocation": "525:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 593,
									"src": "511:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 457,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "511:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf628408",
									"id": 460,
									"mutability": "mutable",
									"name": "treasuryMultisig",
									"nameLocation": "553:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 593,
									"src": "538:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 459,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "538:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d55be8c6",
									"id": 463,
									"mutability": "constant",
									"name": "MAX_FEE_BPS",
									"nameLocation": "631:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 593,
									"src": "608:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 461,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "608:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "645:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48",
									"id": 467,
									"name": "FeeUpdated",
									"nameLocation": "724:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeeBps",
												"nameLocation": "742:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "735:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 464,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "735:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:18:5"
									},
									"src": "718:35:5"
								},
								{
									"anonymous": false,
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 471,
									"name": "TreasuryUpdated",
									"nameLocation": "765:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "789:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "781:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:21:5"
									},
									"src": "759:43:5"
								},
								{
									"errorSelector": "d92e233d",
									"id": 473,
									"name": "ZeroAddress",
									"nameLocation": "839:11:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:5"
									},
									"src": "833:20:5"
								},
								{
									"errorSelector": "3c057d7b",
									"id": 479,
									"name": "FeeTooHigh",
									"nameLocation": "865:10:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "maxFee",
												"nameLocation": "883:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "876:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 474,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "876:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "actualFee",
												"nameLocation": "898:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "891:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 476,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:33:5"
									},
									"src": "859:50:5"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1056:432:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 488,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1071:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1089:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1081:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1081:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1081:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1071:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 494,
															"name": "_initialTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "1095:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1123:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1115:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1115:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1115:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1095:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1071:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "1067:107:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "1127:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 501,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "1149:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1149:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "1142:20:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "_initialFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1188:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 507,
														"name": "MAX_FEE_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1205:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1188:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "1184:107:5",
												"trueBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "1218:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "MAX_FEE_BPS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "1251:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 511,
																		"name": "_initialFeeBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "1264:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"id": 509,
																	"name": "FeeTooHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "1240:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint16_$_t_uint16_$returns$__$",
																		"typeString": "function (uint16,uint16) pure"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1240:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 513,
															"nodeType": "RevertStatement",
															"src": "1233:46:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1322:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 518,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1342:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 516,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1311:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1311:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "1371:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 523,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "1383:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1360:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1360:30:5"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "treasuryMultisig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1411:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "_initialTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1430:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1411:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1411:35:5"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1457:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "_initialFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1466:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1457:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1457:23:5"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "975:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "967:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "_initialTreasury",
												"nameLocation": "1000:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "992:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_initialFeeBps",
												"nameLocation": "1034:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1027:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 484,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1027:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:99:5"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:5"
									},
									"scope": 593,
									"src": "945:543:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1794:185:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 544,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1809:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 545,
														"name": "MAX_FEE_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1822:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1809:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "1805:99:5",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "1835:69:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 548,
																		"name": "MAX_FEE_BPS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "1868:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 549,
																		"name": "_newFeeBps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1881:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"id": 547,
																	"name": "FeeTooHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "1857:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint16_$_t_uint16_$returns$__$",
																		"typeString": "function (uint16,uint16) pure"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1857:35:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "RevertStatement",
															"src": "1850:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 554,
														"name": "feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1914:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 555,
														"name": "_newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1923:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1914:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "1914:19:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 559,
															"name": "_newFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1960:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 558,
														"name": "FeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "1949:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$returns$__$",
															"typeString": "function (uint16)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "EmitStatement",
												"src": "1944:27:5"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "1530:190:5",
										"text": " @notice Sets the new protocol fee in basis points.\n @dev Must be called by an address with ADMIN_ROLE.\n @param _newFeeBps The new fee (e.g., 250 for 2.5%)."
									},
									"functionSelector": "023b1fc9",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 541,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "1782:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 540,
												"name": "onlyRole",
												"nameLocations": [
													"1773:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1773:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1773:20:5"
										}
									],
									"name": "setFeeBps",
									"nameLocation": "1735:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "_newFeeBps",
												"nameLocation": "1752:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1745:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 537,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1745:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:19:5"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:5"
									},
									"scope": 593,
									"src": "1726:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "2263:184:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "_newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2278:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2294:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2294:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2294:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2278:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "2274:79:5",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "2306:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 578,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "2328:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2328:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "RevertStatement",
															"src": "2321:20:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 583,
														"name": "treasuryMultisig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "2363:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 584,
														"name": "_newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2382:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2363:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2363:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 588,
															"name": "_newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "2426:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 587,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2410:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "EmitStatement",
												"src": "2405:34:5"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1987:189:5",
										"text": " @notice Sets the new address for the treasury multisig.\n @dev Must be called by an address with ADMIN_ROLE.\n @param _newTreasury The new multisig address."
									},
									"functionSelector": "1d94bd5f",
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 569,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "2251:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 568,
												"name": "onlyRole",
												"nameLocations": [
													"2242:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2242:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2242:20:5"
										}
									],
									"name": "setTreasuryMultisig",
									"nameLocation": "2191:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "_newTreasury",
												"nameLocation": "2219:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2211:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:22:5"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2263:0:5"
									},
									"scope": 593,
									"src": "2182:265:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 594,
							"src": "343:2107:5",
							"usedErrors": [
								306,
								309,
								473,
								479
							],
							"usedEvents": [
								318,
								327,
								336,
								467,
								471
							]
						}
					],
					"src": "33:2419:5"
				},
				"id": 5
			}
		}
	}
}