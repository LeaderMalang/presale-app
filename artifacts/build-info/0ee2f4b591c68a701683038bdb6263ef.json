{
	"id": "0ee2f4b591c68a701683038bdb6263ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BuyStakeContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// aasanhai.pk\n// TG: @leadermalang\n\npragma solidity ^0.8.20;\n\n// Import necessary contracts from the OpenZeppelin library\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @title INTBuyStake Contract\n * @dev A contract for a token presale with staking reward features.\n * Users can buy a specific sale token using either native currency (like ETH) or other approved ERC20 tokens.\n * It also includes a mechanism for buyers to earn rewards over time based on their purchased amount.\n */\ncontract INTBuyStake is Ownable {\n    using SafeERC20 for IERC20;\n\n    // Struct to store details about each buyer's purchase and rewards.\n    struct BuyerTokenDetails {\n        uint256 amount; // The amount of saleToken purchased.\n        bool exists; // Flag to check if the user is a buyer.\n        bool isClaimed; // (Note: This variable is declared but not used in the original logic).\n        uint256 reward; // Accumulated rewards.\n        uint lastCalculatedTime; // Timestamp of the last reward calculation.\n    }\n\n    // --- State Variables ---\n\n    uint256 public multiplier; // Reward multiplier in basis points (e.g., 10000 = 100%).\n    uint256 public rate; // The price of the saleToken in the native currency (e.g., wei per token).\n    address public saleToken; // The ERC20 token being sold.\n    uint public saleTokenDec; // Decimals of the sale token.\n    uint256 public totalTokensforSale; // Total amount of saleToken available for the presale.\n    bool public saleStatus; // True if the sale is active, false otherwise.\n    address[] public buyers; // An array of all buyer addresses.\n    uint256 public totalTokensSold; // Total amount of saleToken sold so far.\n\n    // Mappings\n    mapping(address => bool) public payableTokens; // Maps allowed ERC20 tokens to a boolean status.\n    mapping(address => BuyerTokenDetails) public buyersDetails; // Maps a buyer's address to their details.\n    mapping(address => uint256) public tokenPrices; // Maps allowed ERC20 tokens to their price.\n\n    // --- Modifiers ---\n\n    modifier saleEnabled() {\n        require(saleStatus == true, \"Presale: is not enabled\");\n        _;\n    }\n\n    modifier saleStoped() {\n        require(saleStatus == false, \"Presale: is not stopped\");\n        _;\n    }\n\n    // --- Constructor ---\n\n    constructor() Ownable(msg.sender){\n        saleStatus = false; // The sale is initially disabled.\n    }\n\n    // --- Owner Functions ---\n\n    /**\n     * @dev Sets the initial parameters for the presale.\n     * This function transfers the total sale tokens from the owner to the contract.\n     */\n    function setParams(\n        address _saleToken,\n        uint256 _totalTokensforSale,\n        uint256 _rate,\n        uint _multiplier,\n        bool _saleStatus\n    ) external onlyOwner {\n        require(_rate != 0, \"Presale: Rate cannot be zero\");\n        rate = _rate;\n        saleToken = _saleToken;\n        saleStatus = _saleStatus;\n        saleTokenDec = IERC20Metadata(saleToken).decimals();\n        totalTokensforSale = _totalTokensforSale;\n        multiplier = _multiplier;\n        IERC20(saleToken).safeTransferFrom(\n            msg.sender,\n            address(this),\n            totalTokensforSale\n        );\n    }\n\n    /**\n     * @dev Sets the reward multiplier.\n     * It updates all existing rewards before changing the multiplier.\n     */\n    function setMultiplier(uint256 _multiplier) public onlyOwner {\n        updateRewards();\n        multiplier = _multiplier;\n    }\n\n    /**\n     * @dev Increases the total number of tokens available for sale.\n     */\n    function increaseTotalTokensforSale(\n        uint256 _totalTokensforSale\n    ) external onlyOwner {\n        totalTokensforSale += _totalTokensforSale;\n        IERC20(saleToken).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _totalTokensforSale\n        );\n    }\n\n    function stopSale() external onlyOwner {\n        saleStatus = false;\n    }\n\n    function resumeSale() external onlyOwner {\n        saleStatus = true;\n    }\n\n    /**\n     * @dev Adds new ERC20 tokens that can be used for purchase and sets their prices.\n     */\n    function addPayableTokens(\n        address[] memory _tokens,\n        uint256[] memory _prices\n    ) external onlyOwner {\n        require(\n            _tokens.length == _prices.length,\n            \"Presale: tokens & prices arrays length mismatch\"\n        );\n        for (uint256 i = 0; i < _tokens.length; i++) {\n            require(_prices[i] != 0, \"Presale: Price cannot be zero\");\n            payableTokens[_tokens[i]] = true;\n            tokenPrices[_tokens[i]] = _prices[i];\n        }\n    }\n\n    /**\n     * @dev Enables or disables an ERC20 token for payment.\n     */\n    function payableTokenStatus(\n        address _token,\n        bool _status\n    ) external onlyOwner {\n        require(payableTokens[_token] != _status, \"Presale: Status is already set to the desired value\");\n        payableTokens[_token] = _status;\n    }\n\n    /**\n     * @dev Updates the prices of allowed ERC20 tokens and optionally the native currency rate.\n     */\n    function updateTokenRate(\n        address[] memory _tokens,\n        uint256[] memory _prices,\n        uint256 _rate\n    ) external onlyOwner {\n        require(\n            _tokens.length == _prices.length,\n            \"Presale: tokens & prices arrays length mismatch\"\n        );\n        if (_rate != 0) {\n            rate = _rate;\n        }\n        for (uint256 i = 0; i < _tokens.length; i += 1) {\n            require(payableTokens[_tokens[i]] == true, \"Presale: Token is not a payable token\");\n            require(_prices[i] != 0, \"Presale: Price cannot be zero\");\n            tokenPrices[_tokens[i]] = _prices[i];\n        }\n    }\n\n    /**\n     * @dev Unlocks and sends tokens for all buyers. Can only be called by the owner when the sale is stopped.\n     */\n    function unlockAllTokens() external onlyOwner saleStoped {\n        for (uint256 i = 0; i < buyers.length; i++) {\n            unlockTokenFor(buyers[i]);\n        }\n    }\n\n    /**\n     * @dev Allows the owner to withdraw all remaining sale tokens from the contract.\n     */\n    function withdrawAllSaleTokens() external onlyOwner saleStoped {\n        uint256 amt = IERC20(saleToken).balanceOf(address(this));\n        IERC20(saleToken).transfer(msg.sender, amt);\n        totalTokensforSale = 0;\n    }\n\n    function withdraw(address token, uint256 amt) public onlyOwner {\n        IERC20(token).safeTransfer(msg.sender, amt);\n    }\n\n    function withdrawAll(address token) public onlyOwner {\n        uint256 amt = IERC20(token).balanceOf(address(this));\n        withdraw(token, amt);\n    }\n\n    function withdrawCurrency(uint256 amt) public onlyOwner {\n        payable(msg.sender).transfer(amt);\n    }\n\n\n    // --- Public/External Functions ---\n\n    /**\n     * @dev Allows a user to buy saleToken using native currency (msg.value) or an approved ERC20 token.\n     */\n    function buyToken(\n        address _token,\n        uint256 _amount\n    ) external payable saleEnabled {\n        uint256 saleTokenAmt = _token != address(0)\n        ? getTokenAmount(_token, _amount)\n        : getTokenAmount(address(0), msg.value);\n        \n        require(\n            (totalTokensSold + saleTokenAmt) < totalTokensforSale,\n            \"Presale: Not enough tokens to be sale\"\n        );\n\n        if (_token != address(0)) {\n            require(_amount > 0, \"Presale: Amount must be greater than 0\");\n            IERC20(_token).safeTransferFrom(msg.sender, owner(), _amount);\n        } else {\n            payable(owner()).transfer(msg.value);\n        }\n\n        totalTokensSold += saleTokenAmt;\n        BuyerTokenDetails storage buyerDetails = buyersDetails[msg.sender];\n\n        if (!buyerDetails.exists) {\n            buyers.push(msg.sender);\n            buyerDetails.exists = true;\n        } else if (buyerDetails.amount > 0) {\n            // Add existing rewards before adding new amount\n            buyerDetails.reward += getBuyerReward(msg.sender);\n        }\n        buyerDetails.amount += saleTokenAmt;\n        buyerDetails.lastCalculatedTime = block.timestamp;\n    }\n\n    /**\n     * @dev Allows a buyer to claim their purchased tokens and accrued rewards after the sale has stopped.\n     */\n    function unlockToken() external saleStoped {\n        require(\n            buyersDetails[msg.sender].amount > 0,\n            \"Presale: No tokens to claim\"\n        );\n        unlockTokenFor(msg.sender);\n    }\n\n    // --- View/Pure Functions ---\n\n    /**\n     * @dev Calculates the amount of saleToken a user will receive for a given amount of payment token.\n     * @param token The address of the payment token (address(0) for native currency).\n     * @param amount The amount of the payment token.\n     * @return The amount of saleToken to be received.\n     */\n    function getTokenAmount(\n        address token,\n        uint256 amount\n    ) public view returns (uint256) {\n        uint256 amtOut;\n        if (token != address(0)) {\n            require(payableTokens[token] == true, \"Presale: Token not allowed\");\n            uint256 price = tokenPrices[token];\n            amtOut = (amount * (10 ** saleTokenDec)) / (price);\n        } else {\n            amtOut = (amount * (10 ** saleTokenDec)) / (rate);\n        }\n        return amtOut;\n    }\n\n    /**\n     * @dev Calculates the pending reward for a buyer.\n     */\n    function getBuyerReward(address buyer) public view returns (uint256) {\n        if (buyersDetails[buyer].amount == 0) return 0;\n\n        uint daysPassed = (block.timestamp -\n            buyersDetails[buyer].lastCalculatedTime) / 86400;\n\n        uint256 reward = (buyersDetails[buyer].amount *\n            multiplier *\n            daysPassed) / 10000;\n        return reward;\n    }\n\n    // --- Internal Functions ---\n\n    /**\n     * @dev Updates the rewards for all buyers.\n     * This is called internally before changing the reward multiplier.\n     */\n    function updateRewards() internal {\n        for (uint256 i = 0; i < buyers.length; i++) {\n            if (buyersDetails[buyers[i]].amount > 0) {\n                buyersDetails[buyers[i]].reward = getBuyerReward(buyers[i]);\n                buyersDetails[buyers[i]].lastCalculatedTime = block.timestamp;\n            }\n        }\n    }\n\n    /**\n     * @dev Performs the token unlock and transfer for a specific buyer.\n     * It calculates total tokens (purchased + existing rewards + new rewards) and transfers them.\n     */\n    function unlockTokenFor(address buyer) internal {\n        if (buyersDetails[buyer].amount > 0) {\n            uint256 tokensforWithdraw = buyersDetails[buyer].amount +\n            buyersDetails[buyer].reward +\n            getBuyerReward(buyer);\n            \n            buyersDetails[buyer].amount = 0;\n            buyersDetails[buyer].reward = 0;\n            \n            IERC20(saleToken).safeTransfer(buyer, tokensforWithdraw);\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT SWAP9 DUP4 MSTORE8 0xEF 0xBC 0xE5 CALLDATASIZE 0xD3 MUL STOP 0xAE NUMBER MSTORE DUP14 SLOAD 0x4B CALLVALUE LT 0xB5 0x1F PREVRANDAO 0xB7 0x2E SWAP9 0xAA PUSH20 0xE93F6DC97664736F6C6343000814003300000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010988353efbce536d30200ae43528d544b3410b51f44b72e98aa73e93f6dc97664736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/BuyStakeContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BuyStakeContract.sol": {
				"INTBuyStake": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_prices",
									"type": "uint256[]"
								}
							],
							"name": "addPayableTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "buyers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyersDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isClaimed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastCalculatedTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								}
							],
							"name": "getBuyerReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalTokensforSale",
									"type": "uint256"
								}
							],
							"name": "increaseTotalTokensforSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "payableTokenStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "payableTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resumeSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTokenDec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"name": "setMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_totalTokensforSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_saleStatus",
									"type": "bool"
								}
							],
							"name": "setParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTokensforSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockAllTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_prices",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "updateTokenRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllSaleTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amt",
									"type": "uint256"
								}
							],
							"name": "withdrawCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract for a token presale with staking reward features. Users can buy a specific sale token using either native currency (like ETH) or other approved ERC20 tokens. It also includes a mechanism for buyers to earn rewards over time based on their purchased amount.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addPayableTokens(address[],uint256[])": {
								"details": "Adds new ERC20 tokens that can be used for purchase and sets their prices."
							},
							"buyToken(address,uint256)": {
								"details": "Allows a user to buy saleToken using native currency (msg.value) or an approved ERC20 token."
							},
							"getBuyerReward(address)": {
								"details": "Calculates the pending reward for a buyer."
							},
							"getTokenAmount(address,uint256)": {
								"details": "Calculates the amount of saleToken a user will receive for a given amount of payment token.",
								"params": {
									"amount": "The amount of the payment token.",
									"token": "The address of the payment token (address(0) for native currency)."
								},
								"returns": {
									"_0": "The amount of saleToken to be received."
								}
							},
							"increaseTotalTokensforSale(uint256)": {
								"details": "Increases the total number of tokens available for sale."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"payableTokenStatus(address,bool)": {
								"details": "Enables or disables an ERC20 token for payment."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setMultiplier(uint256)": {
								"details": "Sets the reward multiplier. It updates all existing rewards before changing the multiplier."
							},
							"setParams(address,uint256,uint256,uint256,bool)": {
								"details": "Sets the initial parameters for the presale. This function transfers the total sale tokens from the owner to the contract."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unlockAllTokens()": {
								"details": "Unlocks and sends tokens for all buyers. Can only be called by the owner when the sale is stopped."
							},
							"unlockToken()": {
								"details": "Allows a buyer to claim their purchased tokens and accrued rewards after the sale has stopped."
							},
							"updateTokenRate(address[],uint256[],uint256)": {
								"details": "Updates the prices of allowed ERC20 tokens and optionally the native currency rate."
							},
							"withdrawAllSaleTokens()": {
								"details": "Allows the owner to withdraw all remaining sale tokens from the contract."
							}
						},
						"title": "INTBuyStake Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BuyStakeContract.sol\":672:11036  contract INTBuyStake is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BuyStakeContract.sol\":2459:2562  constructor() Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/BuyStakeContract.sol\":2481:2491  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/BuyStakeContract.sol\":2515:2520  false */\n  0x00\n    /* \"contracts/BuyStakeContract.sol\":2502:2512  saleStatus */\n  0x06\n  0x00\n    /* \"contracts/BuyStakeContract.sol\":2502:2520  saleStatus = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BuyStakeContract.sol\":672:11036  contract INTBuyStake is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BuyStakeContract.sol\":672:11036  contract INTBuyStake is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BuyStakeContract.sol\":672:11036  contract INTBuyStake is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe36b0b37\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf3fef3a3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf4739ee3\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf9020e33\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xfa09e630\n      eq\n      tag_32\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0xe36b0b37\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe985e367\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2aa8218\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x9ae2fd34\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x9ae2fd34\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa01bd50c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa2826373\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xace1741c\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x80655eef\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x828b7953\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x33e364cb\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x63b20117\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x63b20117\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x641579a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x68f8fc10\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6bcedf9c\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x33e364cb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3c00a36c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5413c1c8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5e0be607\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x204120bc\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x204120bc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x29d429a8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3115329e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_39:\n      dup1\n      0x115ece4c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18a24b5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b3ed722\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BuyStakeContract.sol\":8954:9433  function getTokenAmount(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":8390:8596  function unlockToken() external saleStoped {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1232:1257  uint256 public multiplier */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":2085:2131  mapping(address => uint256) public tokenPrices */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":4871:5124  function payableTokenStatus(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1322:1341  uint256 public rate */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":5242:5874  function updateTokenRate(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":4111:4186  function resumeSale() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":6796:6902  function withdrawCurrency(uint256 amt) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":4295:4789  function addPayableTokens(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":6007:6174  function unlockAllTokens() external onlyOwner saleStoped {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1781:1811  uint256 public totalTokensSold */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":3513:3640  function setMultiplier(uint256 _multiplier) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":7072:8261  function buyToken(... */\n    tag_15:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1545:1578  uint256 public totalTokensforSale */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1876:1921  mapping(address => bool) public payableTokens */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":9510:9888  function getBuyerReward(address buyer) public view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":6282:6503  function withdrawAllSaleTokens() external onlyOwner saleStoped {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":2758:3380  function setParams(... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":3731:4025  function increaseTotalTokensforSale(... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1484:1508  uint public saleTokenDec */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":4031:4105  function stopSale() external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1423:1447  address public saleToken */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":1716:1739  address[] public buyers */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":6509:6632  function withdraw(address token, uint256 amt) public onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":1977:2035  mapping(address => BuyerTokenDetails) public buyersDetails */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_164\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":1640:1662  bool public saleStatus */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BuyStakeContract.sol\":6638:6790  function withdrawAll(address token) public onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_171\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n    tag_171:\n      stop\n        /* \"contracts/BuyStakeContract.sol\":8954:9433  function getTokenAmount(... */\n    tag_44:\n        /* \"contracts/BuyStakeContract.sol\":9052:9059  uint256 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9071:9085  uint256 amtOut */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":9116:9117  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9099:9118  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":9099:9104  token */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":9099:9118  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BuyStakeContract.sol\":9095:9404  if (token != address(0)) {... */\n      tag_175\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":9166:9170  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":9142:9170  payableTokens[token] == true */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":9142:9155  payableTokens */\n      0x09\n        /* \"contracts/BuyStakeContract.sol\":9142:9162  payableTokens[token] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9156:9161  token */\n      dup7\n        /* \"contracts/BuyStakeContract.sol\":9142:9162  payableTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":9142:9170  payableTokens[token] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":9134:9201  require(payableTokens[token] == true, \"Presale: Token not allowed\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/BuyStakeContract.sol\":9215:9228  uint256 price */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9231:9242  tokenPrices */\n      0x0b\n        /* \"contracts/BuyStakeContract.sol\":9231:9249  tokenPrices[token] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9243:9248  token */\n      dup7\n        /* \"contracts/BuyStakeContract.sol\":9231:9249  tokenPrices[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BuyStakeContract.sol\":9215:9249  uint256 price = tokenPrices[token] */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9307:9312  price */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":9289:9301  saleTokenDec */\n      sload(0x04)\n        /* \"contracts/BuyStakeContract.sol\":9283:9285  10 */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":9283:9301  10 ** saleTokenDec */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/BuyStakeContract.sol\":9273:9279  amount */\n      dup6\n        /* \"contracts/BuyStakeContract.sol\":9273:9302  amount * (10 ** saleTokenDec) */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/BuyStakeContract.sol\":9272:9313  (amount * (10 ** saleTokenDec)) / (price) */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/BuyStakeContract.sol\":9263:9313  amtOut = (amount * (10 ** saleTokenDec)) / (price) */\n      swap2\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9120:9324  {... */\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9095:9404  if (token != address(0)) {... */\n      jump(tag_185)\n    tag_175:\n        /* \"contracts/BuyStakeContract.sol\":9388:9392  rate */\n      sload(0x02)\n        /* \"contracts/BuyStakeContract.sol\":9370:9382  saleTokenDec */\n      sload(0x04)\n        /* \"contracts/BuyStakeContract.sol\":9364:9366  10 */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":9364:9382  10 ** saleTokenDec */\n      tag_186\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_186:\n        /* \"contracts/BuyStakeContract.sol\":9354:9360  amount */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":9354:9383  amount * (10 ** saleTokenDec) */\n      tag_187\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_187:\n        /* \"contracts/BuyStakeContract.sol\":9353:9393  (amount * (10 ** saleTokenDec)) / (rate) */\n      tag_188\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_188:\n        /* \"contracts/BuyStakeContract.sol\":9344:9393  amtOut = (amount * (10 ** saleTokenDec)) / (rate) */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9095:9404  if (token != address(0)) {... */\n    tag_185:\n        /* \"contracts/BuyStakeContract.sol\":9420:9426  amtOut */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":9413:9426  return amtOut */\n      swap2\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":8954:9433  function getTokenAmount(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":8390:8596  function unlockToken() external saleStoped {... */\n    tag_49:\n        /* \"contracts/BuyStakeContract.sol\":2374:2379  false */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":2360:2370  saleStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":2352:2407  require(saleStatus == false, \"Presale: is not stopped\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/BuyStakeContract.sol\":8499:8500  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":8464:8477  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":8464:8489  buyersDetails[msg.sender] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":8478:8488  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":8464:8489  buyersDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":8464:8496  buyersDetails[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":8464:8500  buyersDetails[msg.sender].amount > 0 */\n      gt\n        /* \"contracts/BuyStakeContract.sol\":8443:8553  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/BuyStakeContract.sol\":8563:8589  unlockTokenFor(msg.sender) */\n      tag_197\n        /* \"contracts/BuyStakeContract.sol\":8578:8588  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":8563:8577  unlockTokenFor */\n      tag_198\n        /* \"contracts/BuyStakeContract.sol\":8563:8589  unlockTokenFor(msg.sender) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/BuyStakeContract.sol\":8390:8596  function unlockToken() external saleStoped {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1232:1257  uint256 public multiplier */\n    tag_52:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":2085:2131  mapping(address => uint256) public tokenPrices */\n    tag_58:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":4871:5124  function payableTokenStatus(... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/BuyStakeContract.sol\":5013:5020  _status */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":4988:5020  payableTokens[_token] != _status */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":4988:5001  payableTokens */\n      0x09\n        /* \"contracts/BuyStakeContract.sol\":4988:5009  payableTokens[_token] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5002:5008  _token */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":4988:5009  payableTokens[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":4988:5020  payableTokens[_token] != _status */\n      iszero\n      iszero\n      sub\n        /* \"contracts/BuyStakeContract.sol\":4980:5076  require(payableTokens[_token] != _status, \"Presale: Status is already set to the desired value\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/BuyStakeContract.sol\":5110:5117  _status */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":5086:5099  payableTokens */\n      0x09\n        /* \"contracts/BuyStakeContract.sol\":5086:5107  payableTokens[_token] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5100:5106  _token */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":5086:5107  payableTokens[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5086:5117  payableTokens[_token] = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4871:5124  function payableTokenStatus(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1322:1341  uint256 public rate */\n    tag_67:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":5242:5874  function updateTokenRate(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/BuyStakeContract.sol\":5432:5439  _prices */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":5432:5446  _prices.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5414:5421  _tokens */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":5414:5428  _tokens.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5414:5446  _tokens.length == _prices.length */\n      eq\n        /* \"contracts/BuyStakeContract.sol\":5393:5519  require(... */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/BuyStakeContract.sol\":5542:5543  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5533:5538  _rate */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":5533:5543  _rate != 0 */\n      eq\n        /* \"contracts/BuyStakeContract.sol\":5529:5582  if (_rate != 0) {... */\n      tag_212\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":5566:5571  _rate */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":5559:5563  rate */\n      0x02\n        /* \"contracts/BuyStakeContract.sol\":5559:5571  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":5529:5582  if (_rate != 0) {... */\n    tag_212:\n        /* \"contracts/BuyStakeContract.sol\":5596:5605  uint256 i */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5591:5868  for (uint256 i = 0; i < _tokens.length; i += 1) {... */\n    tag_213:\n        /* \"contracts/BuyStakeContract.sol\":5615:5622  _tokens */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":5615:5629  _tokens.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5611:5612  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":5611:5629  i < _tokens.length */\n      lt\n        /* \"contracts/BuyStakeContract.sol\":5591:5868  for (uint256 i = 0; i < _tokens.length; i += 1) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":5690:5694  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":5661:5694  payableTokens[_tokens[i]] == true */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":5661:5674  payableTokens */\n      0x09\n        /* \"contracts/BuyStakeContract.sol\":5661:5686  payableTokens[_tokens[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5675:5682  _tokens */\n      dup7\n        /* \"contracts/BuyStakeContract.sol\":5683:5684  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":5675:5685  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5661:5686  payableTokens[_tokens[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":5661:5694  payableTokens[_tokens[i]] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":5653:5736  require(payableTokens[_tokens[i]] == true, \"Presale: Token is not a payable token\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/BuyStakeContract.sol\":5772:5773  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5758:5765  _prices */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":5766:5767  i */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":5758:5768  _prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_223\n      tag_218\n      jump\t// in\n    tag_223:\n    tag_222:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5758:5773  _prices[i] != 0 */\n      sub\n        /* \"contracts/BuyStakeContract.sol\":5750:5807  require(_prices[i] != 0, \"Presale: Price cannot be zero\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/BuyStakeContract.sol\":5847:5854  _prices */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":5855:5856  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":5847:5857  _prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_228\n      tag_218\n      jump\t// in\n    tag_228:\n    tag_227:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5821:5832  tokenPrices */\n      0x0b\n        /* \"contracts/BuyStakeContract.sol\":5821:5844  tokenPrices[_tokens[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":5833:5840  _tokens */\n      dup7\n        /* \"contracts/BuyStakeContract.sol\":5841:5842  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":5833:5843  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_218\n      jump\t// in\n    tag_230:\n    tag_229:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":5821:5844  tokenPrices[_tokens[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":5821:5857  tokenPrices[_tokens[i]] = _prices[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":5636:5637  1 */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":5631:5637  i += 1 */\n      dup2\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":5591:5868  for (uint256 i = 0; i < _tokens.length; i += 1) {... */\n      jump(tag_213)\n    tag_214:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":5242:5874  function updateTokenRate(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":4111:4186  function resumeSale() external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/BuyStakeContract.sol\":4175:4179  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":4162:4172  saleStatus */\n      0x06\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4162:4179  saleStatus = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4111:4186  function resumeSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":6796:6902  function withdrawCurrency(uint256 amt) public onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/BuyStakeContract.sol\":6870:6880  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":6862:6890  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":6862:6895  payable(msg.sender).transfer(amt) */\n      0x08fc\n        /* \"contracts/BuyStakeContract.sol\":6891:6894  amt */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":6862:6895  payable(msg.sender).transfer(amt) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6796:6902  function withdrawCurrency(uint256 amt) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":4295:4789  function addPayableTokens(... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/BuyStakeContract.sol\":4463:4470  _prices */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":4463:4477  _prices.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4445:4452  _tokens */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":4445:4459  _tokens.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4445:4477  _tokens.length == _prices.length */\n      eq\n        /* \"contracts/BuyStakeContract.sol\":4424:4550  require(... */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_211\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/BuyStakeContract.sol\":4565:4574  uint256 i */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4560:4783  for (uint256 i = 0; i < _tokens.length; i++) {... */\n    tag_246:\n        /* \"contracts/BuyStakeContract.sol\":4584:4591  _tokens */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":4584:4598  _tokens.length */\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4580:4581  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":4580:4598  i < _tokens.length */\n      lt\n        /* \"contracts/BuyStakeContract.sol\":4560:4783  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":4641:4642  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4627:4634  _prices */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":4635:4636  i */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":4627:4637  _prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_218\n      jump\t// in\n    tag_250:\n    tag_249:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4627:4642  _prices[i] != 0 */\n      sub\n        /* \"contracts/BuyStakeContract.sol\":4619:4676  require(_prices[i] != 0, \"Presale: Price cannot be zero\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_226\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"contracts/BuyStakeContract.sol\":4718:4722  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":4690:4703  payableTokens */\n      0x09\n        /* \"contracts/BuyStakeContract.sol\":4690:4715  payableTokens[_tokens[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4704:4711  _tokens */\n      dup6\n        /* \"contracts/BuyStakeContract.sol\":4712:4713  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":4704:4714  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_254\n      tag_218\n      jump\t// in\n    tag_254:\n    tag_253:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4690:4715  payableTokens[_tokens[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4690:4722  payableTokens[_tokens[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4762:4769  _prices */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":4770:4771  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":4762:4772  _prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_256\n      tag_218\n      jump\t// in\n    tag_256:\n    tag_255:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4736:4747  tokenPrices */\n      0x0b\n        /* \"contracts/BuyStakeContract.sol\":4736:4759  tokenPrices[_tokens[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4748:4755  _tokens */\n      dup6\n        /* \"contracts/BuyStakeContract.sol\":4756:4757  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":4748:4758  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_257\n      jumpi\n      tag_258\n      tag_218\n      jump\t// in\n    tag_258:\n    tag_257:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BuyStakeContract.sol\":4736:4759  tokenPrices[_tokens[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":4736:4772  tokenPrices[_tokens[i]] = _prices[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4600:4603  i++ */\n      dup1\n      dup1\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      swap2\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4560:4783  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      jump(tag_246)\n    tag_247:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4295:4789  function addPayableTokens(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":6007:6174  function unlockAllTokens() external onlyOwner saleStoped {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/BuyStakeContract.sol\":2374:2379  false */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":2360:2370  saleStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":2352:2407  require(saleStatus == false, \"Presale: is not stopped\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_192\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/BuyStakeContract.sol\":6079:6088  uint256 i */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":6074:6168  for (uint256 i = 0; i < buyers.length; i++) {... */\n    tag_267:\n        /* \"contracts/BuyStakeContract.sol\":6098:6104  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":6098:6111  buyers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6094:6095  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":6094:6111  i < buyers.length */\n      lt\n        /* \"contracts/BuyStakeContract.sol\":6074:6168  for (uint256 i = 0; i < buyers.length; i++) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":6132:6157  unlockTokenFor(buyers[i]) */\n      tag_270\n        /* \"contracts/BuyStakeContract.sol\":6147:6153  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":6154:6155  i */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":6147:6156  buyers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_272\n      tag_218\n      jump\t// in\n    tag_272:\n    tag_271:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":6132:6146  unlockTokenFor */\n      tag_198\n        /* \"contracts/BuyStakeContract.sol\":6132:6157  unlockTokenFor(buyers[i]) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/BuyStakeContract.sol\":6113:6116  i++ */\n      dup1\n      dup1\n      tag_274\n      swap1\n      tag_260\n      jump\t// in\n    tag_274:\n      swap2\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6074:6168  for (uint256 i = 0; i < buyers.length; i++) {... */\n      jump(tag_267)\n    tag_268:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6007:6174  function unlockAllTokens() external onlyOwner saleStoped {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1781:1811  uint256 public totalTokensSold */\n    tag_92:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":3513:3640  function setMultiplier(uint256 _multiplier) public onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/BuyStakeContract.sol\":3584:3599  updateRewards() */\n      tag_278\n        /* \"contracts/BuyStakeContract.sol\":3584:3597  updateRewards */\n      tag_279\n        /* \"contracts/BuyStakeContract.sol\":3584:3599  updateRewards() */\n      jump\t// in\n    tag_278:\n        /* \"contracts/BuyStakeContract.sol\":3622:3633  _multiplier */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":3609:3619  multiplier */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":3609:3633  multiplier = _multiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3513:3640  function setMultiplier(uint256 _multiplier) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":7072:8261  function buyToken(... */\n    tag_100:\n        /* \"contracts/BuyStakeContract.sol\":2264:2268  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":2250:2268  saleStatus == true */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":2250:2260  saleStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":2250:2268  saleStatus == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":2242:2296  require(saleStatus == true, \"Presale: is not enabled\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"contracts/BuyStakeContract.sol\":7184:7204  uint256 saleTokenAmt */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7225:7226  0 */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":7207:7227  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":7207:7213  _token */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":7207:7227  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BuyStakeContract.sol\":7207:7317  _token != address(0)... */\n      tag_285\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":7280:7317  getTokenAmount(address(0), msg.value) */\n      tag_286\n        /* \"contracts/BuyStakeContract.sol\":7303:7304  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7307:7316  msg.value */\n      callvalue\n        /* \"contracts/BuyStakeContract.sol\":7280:7294  getTokenAmount */\n      tag_44\n        /* \"contracts/BuyStakeContract.sol\":7280:7317  getTokenAmount(address(0), msg.value) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/BuyStakeContract.sol\":7207:7317  _token != address(0)... */\n      jump(tag_287)\n    tag_285:\n        /* \"contracts/BuyStakeContract.sol\":7238:7269  getTokenAmount(_token, _amount) */\n      tag_288\n        /* \"contracts/BuyStakeContract.sol\":7253:7259  _token */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":7261:7268  _amount */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":7238:7252  getTokenAmount */\n      tag_44\n        /* \"contracts/BuyStakeContract.sol\":7238:7269  getTokenAmount(_token, _amount) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/BuyStakeContract.sol\":7207:7317  _token != address(0)... */\n    tag_287:\n        /* \"contracts/BuyStakeContract.sol\":7184:7317  uint256 saleTokenAmt = _token != address(0)... */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7392:7410  totalTokensforSale */\n      sload(0x05)\n        /* \"contracts/BuyStakeContract.sol\":7376:7388  saleTokenAmt */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":7358:7373  totalTokensSold */\n      sload(0x08)\n        /* \"contracts/BuyStakeContract.sol\":7358:7388  totalTokensSold + saleTokenAmt */\n      tag_289\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_289:\n        /* \"contracts/BuyStakeContract.sol\":7357:7410  (totalTokensSold + saleTokenAmt) < totalTokensforSale */\n      lt\n        /* \"contracts/BuyStakeContract.sol\":7336:7473  require(... */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/BuyStakeContract.sol\":7506:7507  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7488:7508  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":7488:7494  _token */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":7488:7508  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BuyStakeContract.sol\":7484:7739  if (_token != address(0)) {... */\n      tag_293\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":7542:7543  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7532:7539  _amount */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":7532:7543  _amount > 0 */\n      gt\n        /* \"contracts/BuyStakeContract.sol\":7524:7586  require(_amount > 0, \"Presale: Amount must be greater than 0\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"contracts/BuyStakeContract.sol\":7600:7661  IERC20(_token).safeTransferFrom(msg.sender, owner(), _amount) */\n      tag_297\n        /* \"contracts/BuyStakeContract.sol\":7632:7642  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":7644:7651  owner() */\n      tag_298\n        /* \"contracts/BuyStakeContract.sol\":7644:7649  owner */\n      tag_121\n        /* \"contracts/BuyStakeContract.sol\":7644:7651  owner() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/BuyStakeContract.sol\":7653:7660  _amount */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":7607:7613  _token */\n      dup7\n        /* \"contracts/BuyStakeContract.sol\":7600:7631  IERC20(_token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_299\n      swap1\n        /* \"contracts/BuyStakeContract.sol\":7600:7661  IERC20(_token).safeTransferFrom(msg.sender, owner(), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"contracts/BuyStakeContract.sol\":7484:7739  if (_token != address(0)) {... */\n      jump(tag_300)\n    tag_293:\n        /* \"contracts/BuyStakeContract.sol\":7700:7707  owner() */\n      tag_301\n        /* \"contracts/BuyStakeContract.sol\":7700:7705  owner */\n      tag_121\n        /* \"contracts/BuyStakeContract.sol\":7700:7707  owner() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/BuyStakeContract.sol\":7692:7717  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":7692:7728  payable(owner()).transfer(msg.value) */\n      0x08fc\n        /* \"contracts/BuyStakeContract.sol\":7718:7727  msg.value */\n      callvalue\n        /* \"contracts/BuyStakeContract.sol\":7692:7728  payable(owner()).transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7484:7739  if (_token != address(0)) {... */\n    tag_300:\n        /* \"contracts/BuyStakeContract.sol\":7768:7780  saleTokenAmt */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":7749:7764  totalTokensSold */\n      0x08\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7749:7780  totalTokensSold += saleTokenAmt */\n      dup3\n      dup3\n      sload\n      tag_304\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_304:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7790:7828  BuyerTokenDetails storage buyerDetails */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7831:7844  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":7831:7856  buyersDetails[msg.sender] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7845:7855  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":7831:7856  buyersDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":7790:7856  BuyerTokenDetails storage buyerDetails = buyersDetails[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7872:7884  buyerDetails */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":7872:7891  buyerDetails.exists */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":7867:8151  if (!buyerDetails.exists) {... */\n      tag_305\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":7907:7913  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":7919:7929  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":7907:7930  buyers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7966:7970  true */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":7944:7956  buyerDetails */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":7944:7963  buyerDetails.exists */\n      0x01\n      add\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7944:7970  buyerDetails.exists = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7867:8151  if (!buyerDetails.exists) {... */\n      jump(tag_307)\n    tag_305:\n        /* \"contracts/BuyStakeContract.sol\":8013:8014  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":7991:8003  buyerDetails */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":7991:8010  buyerDetails.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":7991:8014  buyerDetails.amount > 0 */\n      gt\n        /* \"contracts/BuyStakeContract.sol\":7987:8151  if (buyerDetails.amount > 0) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":8114:8140  getBuyerReward(msg.sender) */\n      tag_309\n        /* \"contracts/BuyStakeContract.sol\":8129:8139  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":8114:8128  getBuyerReward */\n      tag_117\n        /* \"contracts/BuyStakeContract.sol\":8114:8140  getBuyerReward(msg.sender) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/BuyStakeContract.sol\":8091:8103  buyerDetails */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":8091:8110  buyerDetails.reward */\n      0x02\n      add\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":8091:8140  buyerDetails.reward += getBuyerReward(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_310\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_310:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7987:8151  if (buyerDetails.amount > 0) {... */\n    tag_308:\n        /* \"contracts/BuyStakeContract.sol\":7867:8151  if (!buyerDetails.exists) {... */\n    tag_307:\n        /* \"contracts/BuyStakeContract.sol\":8183:8195  saleTokenAmt */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":8160:8172  buyerDetails */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":8160:8179  buyerDetails.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":8160:8195  buyerDetails.amount += saleTokenAmt */\n      dup3\n      dup3\n      sload\n      tag_311\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_311:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":8239:8254  block.timestamp */\n      timestamp\n        /* \"contracts/BuyStakeContract.sol\":8205:8217  buyerDetails */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":8205:8236  buyerDetails.lastCalculatedTime */\n      0x03\n      add\n        /* \"contracts/BuyStakeContract.sol\":8205:8254  buyerDetails.lastCalculatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7174:8261  {... */\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":7072:8261  function buyToken(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1545:1578  uint256 public totalTokensforSale */\n    tag_103:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_315\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1876:1921  mapping(address => bool) public payableTokens */\n    tag_111:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":9510:9888  function getBuyerReward(address buyer) public view returns (uint256) {... */\n    tag_117:\n        /* \"contracts/BuyStakeContract.sol\":9570:9577  uint256 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9624:9625  0 */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":9593:9606  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":9593:9613  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9607:9612  buyer */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":9593:9613  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":9593:9620  buyersDetails[buyer].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":9593:9625  buyersDetails[buyer].amount == 0 */\n      sub\n        /* \"contracts/BuyStakeContract.sol\":9589:9635  if (buyersDetails[buyer].amount == 0) return 0 */\n      tag_318\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":9634:9635  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9627:9635  return 0 */\n      swap1\n      pop\n      jump(tag_317)\n        /* \"contracts/BuyStakeContract.sol\":9589:9635  if (buyersDetails[buyer].amount == 0) return 0 */\n    tag_318:\n        /* \"contracts/BuyStakeContract.sol\":9646:9661  uint daysPassed */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9738:9743  86400 */\n      0x015180\n        /* \"contracts/BuyStakeContract.sol\":9695:9708  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":9695:9715  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9709:9714  buyer */\n      dup6\n        /* \"contracts/BuyStakeContract.sol\":9695:9715  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":9695:9734  buyersDetails[buyer].lastCalculatedTime */\n      0x03\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":9665:9680  block.timestamp */\n      timestamp\n        /* \"contracts/BuyStakeContract.sol\":9665:9734  block.timestamp -... */\n      tag_319\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"contracts/BuyStakeContract.sol\":9664:9743  (block.timestamp -... */\n      tag_321\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_321:\n        /* \"contracts/BuyStakeContract.sol\":9646:9743  uint daysPassed = (block.timestamp -... */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9754:9768  uint256 reward */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9853:9858  10000 */\n      0x2710\n        /* \"contracts/BuyStakeContract.sol\":9839:9849  daysPassed */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":9814:9824  multiplier */\n      sload(0x01)\n        /* \"contracts/BuyStakeContract.sol\":9772:9785  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":9772:9792  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":9786:9791  buyer */\n      dup9\n        /* \"contracts/BuyStakeContract.sol\":9772:9792  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":9772:9799  buyersDetails[buyer].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":9772:9824  buyersDetails[buyer].amount *... */\n      tag_322\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_322:\n        /* \"contracts/BuyStakeContract.sol\":9772:9849  buyersDetails[buyer].amount *... */\n      tag_323\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_323:\n        /* \"contracts/BuyStakeContract.sol\":9771:9858  (buyersDetails[buyer].amount *... */\n      tag_324\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_324:\n        /* \"contracts/BuyStakeContract.sol\":9754:9858  uint256 reward = (buyersDetails[buyer].amount *... */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9875:9881  reward */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":9868:9881  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":9510:9888  function getBuyerReward(address buyer) public view returns (uint256) {... */\n    tag_317:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":6282:6503  function withdrawAllSaleTokens() external onlyOwner saleStoped {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_327\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_327:\n        /* \"contracts/BuyStakeContract.sol\":2374:2379  false */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n        /* \"contracts/BuyStakeContract.sol\":2360:2370  saleStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":2360:2379  saleStatus == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BuyStakeContract.sol\":2352:2407  require(saleStatus == false, \"Presale: is not stopped\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_192\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"contracts/BuyStakeContract.sol\":6355:6366  uint256 amt */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":6376:6385  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":6369:6396  IERC20(saleToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyStakeContract.sol\":6405:6409  this */\n      address\n        /* \"contracts/BuyStakeContract.sol\":6369:6411  IERC20(saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_332:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_334:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_335\n      swap2\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"contracts/BuyStakeContract.sol\":6355:6411  uint256 amt = IERC20(saleToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6428:6437  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":6421:6447  IERC20(saleToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BuyStakeContract.sol\":6448:6458  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":6460:6463  amt */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":6421:6464  IERC20(saleToken).transfer(msg.sender, amt) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap3\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_341\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6495:6496  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":6474:6492  totalTokensforSale */\n      0x05\n        /* \"contracts/BuyStakeContract.sol\":6474:6496  totalTokensforSale = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6345:6503  {... */\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6282:6503  function withdrawAllSaleTokens() external onlyOwner saleStoped {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":2758:3380  function setParams(... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_344\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_344:\n        /* \"contracts/BuyStakeContract.sol\":2969:2970  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":2960:2965  _rate */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":2960:2970  _rate != 0 */\n      sub\n        /* \"contracts/BuyStakeContract.sol\":2952:3003  require(_rate != 0, \"Presale: Rate cannot be zero\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/BuyStakeContract.sol\":3020:3025  _rate */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":3013:3017  rate */\n      0x02\n        /* \"contracts/BuyStakeContract.sol\":3013:3025  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3047:3057  _saleToken */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":3035:3044  saleToken */\n      0x03\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":3035:3057  saleToken = _saleToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3080:3091  _saleStatus */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":3067:3077  saleStatus */\n      0x06\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":3067:3091  saleStatus = _saleStatus */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3131:3140  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":3116:3150  IERC20Metadata(saleToken).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/BuyStakeContract.sol\":3116:3152  IERC20Metadata(saleToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"contracts/BuyStakeContract.sol\":3101:3152  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      0xff\n      and\n        /* \"contracts/BuyStakeContract.sol\":3101:3113  saleTokenDec */\n      0x04\n        /* \"contracts/BuyStakeContract.sol\":3101:3152  saleTokenDec = IERC20Metadata(saleToken).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3183:3202  _totalTokensforSale */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":3162:3180  totalTokensforSale */\n      0x05\n        /* \"contracts/BuyStakeContract.sol\":3162:3202  totalTokensforSale = _totalTokensforSale */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3225:3236  _multiplier */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":3212:3222  multiplier */\n      0x01\n        /* \"contracts/BuyStakeContract.sol\":3212:3236  multiplier = _multiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3246:3373  IERC20(saleToken).safeTransferFrom(... */\n      tag_353\n        /* \"contracts/BuyStakeContract.sol\":3294:3304  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":3326:3330  this */\n      address\n        /* \"contracts/BuyStakeContract.sol\":3345:3363  totalTokensforSale */\n      sload(0x05)\n        /* \"contracts/BuyStakeContract.sol\":3253:3262  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":3246:3280  IERC20(saleToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_299\n      swap1\n        /* \"contracts/BuyStakeContract.sol\":3246:3373  IERC20(saleToken).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_353:\n        /* \"contracts/BuyStakeContract.sol\":2758:3380  function setParams(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":3731:4025  function increaseTotalTokensforSale(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_355\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_355:\n        /* \"contracts/BuyStakeContract.sol\":3861:3880  _totalTokensforSale */\n      dup1\n        /* \"contracts/BuyStakeContract.sol\":3839:3857  totalTokensforSale */\n      0x05\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":3839:3880  totalTokensforSale += _totalTokensforSale */\n      dup3\n      dup3\n      sload\n      tag_357\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_357:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":3890:4018  IERC20(saleToken).safeTransferFrom(... */\n      tag_358\n        /* \"contracts/BuyStakeContract.sol\":3938:3948  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":3970:3974  this */\n      address\n        /* \"contracts/BuyStakeContract.sol\":3989:4008  _totalTokensforSale */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":3897:3906  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":3890:3924  IERC20(saleToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_299\n      swap1\n        /* \"contracts/BuyStakeContract.sol\":3890:4018  IERC20(saleToken).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_358:\n        /* \"contracts/BuyStakeContract.sol\":3731:4025  function increaseTotalTokensforSale(... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1484:1508  uint public saleTokenDec */\n    tag_138:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":4031:4105  function stopSale() external onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_360\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_360:\n        /* \"contracts/BuyStakeContract.sol\":4093:4098  false */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4080:4090  saleStatus */\n      0x06\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":4080:4098  saleStatus = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":4031:4105  function stopSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1423:1447  address public saleToken */\n    tag_145:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1716:1739  address[] public buyers */\n    tag_150:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_362\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_362:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_365\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_369\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":6509:6632  function withdraw(address token, uint256 amt) public onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_371\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_371:\n        /* \"contracts/BuyStakeContract.sol\":6582:6625  IERC20(token).safeTransfer(msg.sender, amt) */\n      tag_373\n        /* \"contracts/BuyStakeContract.sol\":6609:6619  msg.sender */\n      caller\n        /* \"contracts/BuyStakeContract.sol\":6621:6624  amt */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":6589:6594  token */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":6582:6608  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_374\n      swap1\n        /* \"contracts/BuyStakeContract.sol\":6582:6625  IERC20(token).safeTransfer(msg.sender, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_373:\n        /* \"contracts/BuyStakeContract.sol\":6509:6632  function withdraw(address token, uint256 amt) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1977:2035  mapping(address => BuyerTokenDetails) public buyersDetails */\n    tag_163:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":1640:1662  bool public saleStatus */\n    tag_168:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":6638:6790  function withdrawAll(address token) public onlyOwner {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_376\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_376:\n        /* \"contracts/BuyStakeContract.sol\":6701:6712  uint256 amt */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":6722:6727  token */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":6715:6738  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BuyStakeContract.sol\":6747:6751  this */\n      address\n        /* \"contracts/BuyStakeContract.sol\":6715:6753  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_378:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_380:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_381\n      swap2\n      swap1\n      tag_336\n      jump\t// in\n    tag_381:\n        /* \"contracts/BuyStakeContract.sol\":6701:6753  uint256 amt = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6763:6783  withdraw(token, amt) */\n      tag_382\n        /* \"contracts/BuyStakeContract.sol\":6772:6777  token */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":6779:6782  amt */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":6763:6771  withdraw */\n      tag_159\n        /* \"contracts/BuyStakeContract.sol\":6763:6783  withdraw(token, amt) */\n      jump\t// in\n    tag_382:\n        /* \"contracts/BuyStakeContract.sol\":6691:6790  {... */\n      pop\n        /* \"contracts/BuyStakeContract.sol\":6638:6790  function withdrawAll(address token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":10589:11034  function unlockTokenFor(address buyer) internal {... */\n    tag_198:\n        /* \"contracts/BuyStakeContract.sol\":10681:10682  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10651:10664  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10651:10671  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10665:10670  buyer */\n      dup4\n        /* \"contracts/BuyStakeContract.sol\":10651:10671  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10651:10678  buyersDetails[buyer].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":10651:10682  buyersDetails[buyer].amount > 0 */\n      gt\n        /* \"contracts/BuyStakeContract.sol\":10647:11028  if (buyersDetails[buyer].amount > 0) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":10698:10723  uint256 tokensforWithdraw */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10810:10831  getBuyerReward(buyer) */\n      tag_385\n        /* \"contracts/BuyStakeContract.sol\":10825:10830  buyer */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":10810:10824  getBuyerReward */\n      tag_117\n        /* \"contracts/BuyStakeContract.sol\":10810:10831  getBuyerReward(buyer) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/BuyStakeContract.sol\":10768:10781  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10768:10788  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10782:10787  buyer */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10768:10788  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10768:10795  buyersDetails[buyer].reward */\n      0x02\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":10726:10739  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10726:10746  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10740:10745  buyer */\n      dup6\n        /* \"contracts/BuyStakeContract.sol\":10726:10746  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10726:10753  buyersDetails[buyer].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":10726:10795  buyersDetails[buyer].amount +... */\n      tag_386\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_386:\n        /* \"contracts/BuyStakeContract.sol\":10726:10831  buyersDetails[buyer].amount +... */\n      tag_387\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_387:\n        /* \"contracts/BuyStakeContract.sol\":10698:10831  uint256 tokensforWithdraw = buyersDetails[buyer].amount +... */\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10888:10889  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10858:10871  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10858:10878  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10872:10877  buyer */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10858:10878  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10858:10885  buyersDetails[buyer].amount */\n      0x00\n      add\n        /* \"contracts/BuyStakeContract.sol\":10858:10889  buyersDetails[buyer].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10933:10934  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10903:10916  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10903:10923  buyersDetails[buyer] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10917:10922  buyer */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10903:10923  buyersDetails[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10903:10930  buyersDetails[buyer].reward */\n      0x02\n      add\n        /* \"contracts/BuyStakeContract.sol\":10903:10934  buyersDetails[buyer].reward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10961:11017  IERC20(saleToken).safeTransfer(buyer, tokensforWithdraw) */\n      tag_388\n        /* \"contracts/BuyStakeContract.sol\":10992:10997  buyer */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":10999:11016  tokensforWithdraw */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":10968:10977  saleToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":10961:10991  IERC20(saleToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_374\n      swap1\n        /* \"contracts/BuyStakeContract.sol\":10961:11017  IERC20(saleToken).safeTransfer(buyer, tokensforWithdraw) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/BuyStakeContract.sol\":10684:11028  {... */\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10647:11028  if (buyersDetails[buyer].amount > 0) {... */\n    tag_384:\n        /* \"contracts/BuyStakeContract.sol\":10589:11034  function unlockTokenFor(address buyer) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_390\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_391\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_392\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_394\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_391\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/BuyStakeContract.sol\":10065:10395  function updateRewards() internal {... */\n    tag_279:\n        /* \"contracts/BuyStakeContract.sol\":10114:10123  uint256 i */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10109:10389  for (uint256 i = 0; i < buyers.length; i++) {... */\n    tag_397:\n        /* \"contracts/BuyStakeContract.sol\":10133:10139  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":10133:10146  buyers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10129:10130  i */\n      dup2\n        /* \"contracts/BuyStakeContract.sol\":10129:10146  i < buyers.length */\n      lt\n        /* \"contracts/BuyStakeContract.sol\":10109:10389  for (uint256 i = 0; i < buyers.length; i++) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":10205:10206  0 */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10171:10184  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10171:10195  buyersDetails[buyers[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10185:10191  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":10192:10193  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10185:10194  buyers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_400\n      jumpi\n      tag_401\n      tag_218\n      jump\t// in\n    tag_401:\n    tag_400:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":10171:10195  buyersDetails[buyers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10171:10202  buyersDetails[buyers[i]].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/BuyStakeContract.sol\":10171:10206  buyersDetails[buyers[i]].amount > 0 */\n      gt\n        /* \"contracts/BuyStakeContract.sol\":10167:10379  if (buyersDetails[buyers[i]].amount > 0) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/BuyStakeContract.sol\":10260:10285  getBuyerReward(buyers[i]) */\n      tag_404\n        /* \"contracts/BuyStakeContract.sol\":10275:10281  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":10282:10283  i */\n      dup3\n        /* \"contracts/BuyStakeContract.sol\":10275:10284  buyers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_406\n      tag_218\n      jump\t// in\n    tag_406:\n    tag_405:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":10260:10274  getBuyerReward */\n      tag_117\n        /* \"contracts/BuyStakeContract.sol\":10260:10285  getBuyerReward(buyers[i]) */\n      jump\t// in\n    tag_404:\n        /* \"contracts/BuyStakeContract.sol\":10226:10239  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10226:10250  buyersDetails[buyers[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10240:10246  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":10247:10248  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10240:10249  buyers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_408\n      jumpi\n      tag_409\n      tag_218\n      jump\t// in\n    tag_409:\n    tag_408:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":10226:10250  buyersDetails[buyers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10226:10257  buyersDetails[buyers[i]].reward */\n      0x02\n      add\n        /* \"contracts/BuyStakeContract.sol\":10226:10285  buyersDetails[buyers[i]].reward = getBuyerReward(buyers[i]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10349:10364  block.timestamp */\n      timestamp\n        /* \"contracts/BuyStakeContract.sol\":10303:10316  buyersDetails */\n      0x0a\n        /* \"contracts/BuyStakeContract.sol\":10303:10327  buyersDetails[buyers[i]] */\n      0x00\n        /* \"contracts/BuyStakeContract.sol\":10317:10323  buyers */\n      0x07\n        /* \"contracts/BuyStakeContract.sol\":10324:10325  i */\n      dup5\n        /* \"contracts/BuyStakeContract.sol\":10317:10326  buyers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_411\n      jumpi\n      tag_412\n      tag_218\n      jump\t// in\n    tag_412:\n    tag_411:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BuyStakeContract.sol\":10303:10327  buyersDetails[buyers[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BuyStakeContract.sol\":10303:10346  buyersDetails[buyers[i]].lastCalculatedTime */\n      0x03\n      add\n        /* \"contracts/BuyStakeContract.sol\":10303:10364  buyersDetails[buyers[i]].lastCalculatedTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10167:10379  if (buyersDetails[buyers[i]].amount > 0) {... */\n    tag_403:\n        /* \"contracts/BuyStakeContract.sol\":10148:10151  i++ */\n      dup1\n      dup1\n      tag_414\n      swap1\n      tag_260\n      jump\t// in\n    tag_414:\n      swap2\n      pop\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10109:10389  for (uint256 i = 0; i < buyers.length; i++) {... */\n      jump(tag_397)\n    tag_398:\n      pop\n        /* \"contracts/BuyStakeContract.sol\":10065:10395  function updateRewards() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_416\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_417\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_418\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_422\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_423\n      swap3\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_423:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_428)\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_428:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_429\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_431:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_432:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_433:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_434:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_435:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_498\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_434\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_436:\n        /* \"#utility.yul\":641:665   */\n      tag_500\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_435\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_501:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_437:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_503\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_436\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_438:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_439:\n        /* \"#utility.yul\":997:1021   */\n      tag_506\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_438\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_507:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_440:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_509\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_439\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_43:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_512\n      tag_432\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1290:1409   */\n    tag_511:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_513\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_437\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_514\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_440\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_441:\n        /* \"#utility.yul\":1764:1788   */\n      tag_516\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_438\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_46:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_518\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_441\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_57:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_521\n      tag_432\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2105:2224   */\n    tag_520:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_522\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_437\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2454   */\n    tag_442:\n        /* \"#utility.yul\":2398:2405   */\n      0x00\n        /* \"#utility.yul\":2441:2446   */\n      dup2\n        /* \"#utility.yul\":2434:2447   */\n      iszero\n        /* \"#utility.yul\":2427:2448   */\n      iszero\n        /* \"#utility.yul\":2416:2448   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2576   */\n    tag_443:\n        /* \"#utility.yul\":2530:2551   */\n      tag_525\n        /* \"#utility.yul\":2545:2550   */\n      dup2\n        /* \"#utility.yul\":2530:2551   */\n      tag_442\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2520:2552   */\n      eq\n        /* \"#utility.yul\":2510:2570   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2566:2567   */\n      0x00\n        /* \"#utility.yul\":2563:2564   */\n      dup1\n        /* \"#utility.yul\":2556:2568   */\n      revert\n        /* \"#utility.yul\":2510:2570   */\n    tag_526:\n        /* \"#utility.yul\":2460:2576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2582:2715   */\n    tag_444:\n        /* \"#utility.yul\":2625:2630   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup2\n        /* \"#utility.yul\":2650:2670   */\n      calldataload\n        /* \"#utility.yul\":2641:2670   */\n      swap1\n      pop\n        /* \"#utility.yul\":2679:2709   */\n      tag_528\n        /* \"#utility.yul\":2703:2708   */\n      dup2\n        /* \"#utility.yul\":2679:2709   */\n      tag_443\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2582:2715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2721:3189   */\n    tag_63:\n        /* \"#utility.yul\":2786:2792   */\n      0x00\n        /* \"#utility.yul\":2794:2800   */\n      dup1\n        /* \"#utility.yul\":2843:2845   */\n      0x40\n        /* \"#utility.yul\":2831:2840   */\n      dup4\n        /* \"#utility.yul\":2822:2829   */\n      dup6\n        /* \"#utility.yul\":2818:2841   */\n      sub\n        /* \"#utility.yul\":2814:2846   */\n      slt\n        /* \"#utility.yul\":2811:2930   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":2849:2928   */\n      tag_531\n      tag_432\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":2811:2930   */\n    tag_530:\n        /* \"#utility.yul\":2969:2970   */\n      0x00\n        /* \"#utility.yul\":2994:3047   */\n      tag_532\n        /* \"#utility.yul\":3039:3046   */\n      dup6\n        /* \"#utility.yul\":3030:3036   */\n      dup3\n        /* \"#utility.yul\":3019:3028   */\n      dup7\n        /* \"#utility.yul\":3015:3037   */\n      add\n        /* \"#utility.yul\":2994:3047   */\n      tag_437\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2984:3047   */\n      swap3\n      pop\n        /* \"#utility.yul\":2940:3057   */\n      pop\n        /* \"#utility.yul\":3096:3098   */\n      0x20\n        /* \"#utility.yul\":3122:3172   */\n      tag_533\n        /* \"#utility.yul\":3164:3171   */\n      dup6\n        /* \"#utility.yul\":3155:3161   */\n      dup3\n        /* \"#utility.yul\":3144:3153   */\n      dup7\n        /* \"#utility.yul\":3140:3162   */\n      add\n        /* \"#utility.yul\":3122:3172   */\n      tag_444\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3112:3172   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3182   */\n      pop\n        /* \"#utility.yul\":2721:3189   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3195:3312   */\n    tag_445:\n        /* \"#utility.yul\":3304:3305   */\n      0x00\n        /* \"#utility.yul\":3301:3302   */\n      dup1\n        /* \"#utility.yul\":3294:3306   */\n      revert\n        /* \"#utility.yul\":3318:3420   */\n    tag_446:\n        /* \"#utility.yul\":3359:3365   */\n      0x00\n        /* \"#utility.yul\":3410:3412   */\n      0x1f\n        /* \"#utility.yul\":3406:3413   */\n      not\n        /* \"#utility.yul\":3401:3403   */\n      0x1f\n        /* \"#utility.yul\":3394:3399   */\n      dup4\n        /* \"#utility.yul\":3390:3404   */\n      add\n        /* \"#utility.yul\":3386:3414   */\n      and\n        /* \"#utility.yul\":3376:3414   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3426:3606   */\n    tag_447:\n        /* \"#utility.yul\":3474:3551   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3471:3472   */\n      0x00\n        /* \"#utility.yul\":3464:3552   */\n      mstore\n        /* \"#utility.yul\":3571:3575   */\n      0x41\n        /* \"#utility.yul\":3568:3569   */\n      0x04\n        /* \"#utility.yul\":3561:3576   */\n      mstore\n        /* \"#utility.yul\":3595:3599   */\n      0x24\n        /* \"#utility.yul\":3592:3593   */\n      0x00\n        /* \"#utility.yul\":3585:3600   */\n      revert\n        /* \"#utility.yul\":3612:3893   */\n    tag_448:\n        /* \"#utility.yul\":3695:3722   */\n      tag_538\n        /* \"#utility.yul\":3717:3721   */\n      dup3\n        /* \"#utility.yul\":3695:3722   */\n      tag_446\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3687:3693   */\n      dup2\n        /* \"#utility.yul\":3683:3723   */\n      add\n        /* \"#utility.yul\":3825:3831   */\n      dup2\n        /* \"#utility.yul\":3813:3823   */\n      dup2\n        /* \"#utility.yul\":3810:3832   */\n      lt\n        /* \"#utility.yul\":3789:3807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3777:3787   */\n      dup3\n        /* \"#utility.yul\":3774:3808   */\n      gt\n        /* \"#utility.yul\":3771:3833   */\n      or\n        /* \"#utility.yul\":3768:3856   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":3836:3854   */\n      tag_540\n      tag_447\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3768:3856   */\n    tag_539:\n        /* \"#utility.yul\":3876:3886   */\n      dup1\n        /* \"#utility.yul\":3872:3874   */\n      0x40\n        /* \"#utility.yul\":3865:3887   */\n      mstore\n        /* \"#utility.yul\":3655:3893   */\n      pop\n        /* \"#utility.yul\":3612:3893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3899:4028   */\n    tag_449:\n        /* \"#utility.yul\":3933:3939   */\n      0x00\n        /* \"#utility.yul\":3960:3980   */\n      tag_542\n      tag_431\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":3950:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":3989:4022   */\n      tag_543\n        /* \"#utility.yul\":4017:4021   */\n      dup3\n        /* \"#utility.yul\":4009:4015   */\n      dup3\n        /* \"#utility.yul\":3989:4022   */\n      tag_448\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3899:4028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4345   */\n    tag_450:\n        /* \"#utility.yul\":4111:4115   */\n      0x00\n        /* \"#utility.yul\":4201:4219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4193:4199   */\n      dup3\n        /* \"#utility.yul\":4190:4220   */\n      gt\n        /* \"#utility.yul\":4187:4243   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":4223:4241   */\n      tag_546\n      tag_447\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4187:4243   */\n    tag_545:\n        /* \"#utility.yul\":4273:4277   */\n      0x20\n        /* \"#utility.yul\":4265:4271   */\n      dup3\n        /* \"#utility.yul\":4261:4278   */\n      mul\n        /* \"#utility.yul\":4253:4278   */\n      swap1\n      pop\n        /* \"#utility.yul\":4333:4337   */\n      0x20\n        /* \"#utility.yul\":4327:4331   */\n      dup2\n        /* \"#utility.yul\":4323:4338   */\n      add\n        /* \"#utility.yul\":4315:4338   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4351:4468   */\n    tag_451:\n        /* \"#utility.yul\":4460:4461   */\n      0x00\n        /* \"#utility.yul\":4457:4458   */\n      dup1\n        /* \"#utility.yul\":4450:4462   */\n      revert\n        /* \"#utility.yul\":4491:5201   */\n    tag_452:\n        /* \"#utility.yul\":4587:4592   */\n      0x00\n        /* \"#utility.yul\":4612:4693   */\n      tag_549\n        /* \"#utility.yul\":4628:4692   */\n      tag_550\n        /* \"#utility.yul\":4685:4691   */\n      dup5\n        /* \"#utility.yul\":4628:4692   */\n      tag_450\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":4612:4693   */\n      tag_449\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4603:4693   */\n      swap1\n      pop\n        /* \"#utility.yul\":4713:4718   */\n      dup1\n        /* \"#utility.yul\":4742:4748   */\n      dup4\n        /* \"#utility.yul\":4735:4740   */\n      dup3\n        /* \"#utility.yul\":4728:4749   */\n      mstore\n        /* \"#utility.yul\":4776:4780   */\n      0x20\n        /* \"#utility.yul\":4769:4774   */\n      dup3\n        /* \"#utility.yul\":4765:4781   */\n      add\n        /* \"#utility.yul\":4758:4781   */\n      swap1\n      pop\n        /* \"#utility.yul\":4829:4833   */\n      0x20\n        /* \"#utility.yul\":4821:4827   */\n      dup5\n        /* \"#utility.yul\":4817:4834   */\n      mul\n        /* \"#utility.yul\":4809:4815   */\n      dup4\n        /* \"#utility.yul\":4805:4835   */\n      add\n        /* \"#utility.yul\":4858:4861   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup2\n        /* \"#utility.yul\":4847:4862   */\n      gt\n        /* \"#utility.yul\":4844:4966   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":4877:4956   */\n      tag_552\n      tag_451\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4844:4966   */\n    tag_551:\n        /* \"#utility.yul\":4992:4998   */\n      dup4\n        /* \"#utility.yul\":4975:5195   */\n    tag_553:\n        /* \"#utility.yul\":5009:5015   */\n      dup2\n        /* \"#utility.yul\":5004:5007   */\n      dup2\n        /* \"#utility.yul\":5001:5016   */\n      lt\n        /* \"#utility.yul\":4975:5195   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":5084:5087   */\n      dup1\n        /* \"#utility.yul\":5113:5150   */\n      tag_556\n        /* \"#utility.yul\":5146:5149   */\n      dup9\n        /* \"#utility.yul\":5134:5144   */\n      dup3\n        /* \"#utility.yul\":5113:5150   */\n      tag_437\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":5108:5111   */\n      dup5\n        /* \"#utility.yul\":5101:5151   */\n      mstore\n        /* \"#utility.yul\":5180:5184   */\n      0x20\n        /* \"#utility.yul\":5175:5178   */\n      dup5\n        /* \"#utility.yul\":5171:5185   */\n      add\n        /* \"#utility.yul\":5164:5185   */\n      swap4\n      pop\n        /* \"#utility.yul\":5051:5195   */\n      pop\n        /* \"#utility.yul\":5035:5039   */\n      0x20\n        /* \"#utility.yul\":5030:5033   */\n      dup2\n        /* \"#utility.yul\":5026:5040   */\n      add\n        /* \"#utility.yul\":5019:5040   */\n      swap1\n      pop\n        /* \"#utility.yul\":4975:5195   */\n      jump(tag_553)\n    tag_555:\n        /* \"#utility.yul\":4979:5000   */\n      pop\n        /* \"#utility.yul\":4593:5201   */\n      pop\n      pop\n        /* \"#utility.yul\":4491:5201   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5224:5594   */\n    tag_453:\n        /* \"#utility.yul\":5295:5300   */\n      0x00\n        /* \"#utility.yul\":5344:5347   */\n      dup3\n        /* \"#utility.yul\":5337:5341   */\n      0x1f\n        /* \"#utility.yul\":5329:5335   */\n      dup4\n        /* \"#utility.yul\":5325:5342   */\n      add\n        /* \"#utility.yul\":5321:5348   */\n      slt\n        /* \"#utility.yul\":5311:5433   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":5352:5431   */\n      tag_559\n      tag_445\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":5311:5433   */\n    tag_558:\n        /* \"#utility.yul\":5469:5475   */\n      dup2\n        /* \"#utility.yul\":5456:5476   */\n      calldataload\n        /* \"#utility.yul\":5494:5588   */\n      tag_560\n        /* \"#utility.yul\":5584:5587   */\n      dup5\n        /* \"#utility.yul\":5576:5582   */\n      dup3\n        /* \"#utility.yul\":5569:5573   */\n      0x20\n        /* \"#utility.yul\":5561:5567   */\n      dup7\n        /* \"#utility.yul\":5557:5574   */\n      add\n        /* \"#utility.yul\":5494:5588   */\n      tag_452\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5485:5588   */\n      swap2\n      pop\n        /* \"#utility.yul\":5301:5594   */\n      pop\n        /* \"#utility.yul\":5224:5594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5600:5911   */\n    tag_454:\n        /* \"#utility.yul\":5677:5681   */\n      0x00\n        /* \"#utility.yul\":5767:5785   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5759:5765   */\n      dup3\n        /* \"#utility.yul\":5756:5786   */\n      gt\n        /* \"#utility.yul\":5753:5809   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":5789:5807   */\n      tag_563\n      tag_447\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":5753:5809   */\n    tag_562:\n        /* \"#utility.yul\":5839:5843   */\n      0x20\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5827:5844   */\n      mul\n        /* \"#utility.yul\":5819:5844   */\n      swap1\n      pop\n        /* \"#utility.yul\":5899:5903   */\n      0x20\n        /* \"#utility.yul\":5893:5897   */\n      dup2\n        /* \"#utility.yul\":5889:5904   */\n      add\n        /* \"#utility.yul\":5881:5904   */\n      swap1\n      pop\n        /* \"#utility.yul\":5600:5911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5934:6644   */\n    tag_455:\n        /* \"#utility.yul\":6030:6035   */\n      0x00\n        /* \"#utility.yul\":6055:6136   */\n      tag_565\n        /* \"#utility.yul\":6071:6135   */\n      tag_566\n        /* \"#utility.yul\":6128:6134   */\n      dup5\n        /* \"#utility.yul\":6071:6135   */\n      tag_454\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":6055:6136   */\n      tag_449\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6046:6136   */\n      swap1\n      pop\n        /* \"#utility.yul\":6156:6161   */\n      dup1\n        /* \"#utility.yul\":6185:6191   */\n      dup4\n        /* \"#utility.yul\":6178:6183   */\n      dup3\n        /* \"#utility.yul\":6171:6192   */\n      mstore\n        /* \"#utility.yul\":6219:6223   */\n      0x20\n        /* \"#utility.yul\":6212:6217   */\n      dup3\n        /* \"#utility.yul\":6208:6224   */\n      add\n        /* \"#utility.yul\":6201:6224   */\n      swap1\n      pop\n        /* \"#utility.yul\":6272:6276   */\n      0x20\n        /* \"#utility.yul\":6264:6270   */\n      dup5\n        /* \"#utility.yul\":6260:6277   */\n      mul\n        /* \"#utility.yul\":6252:6258   */\n      dup4\n        /* \"#utility.yul\":6248:6278   */\n      add\n        /* \"#utility.yul\":6301:6304   */\n      dup6\n        /* \"#utility.yul\":6293:6299   */\n      dup2\n        /* \"#utility.yul\":6290:6305   */\n      gt\n        /* \"#utility.yul\":6287:6409   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":6320:6399   */\n      tag_568\n      tag_451\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":6287:6409   */\n    tag_567:\n        /* \"#utility.yul\":6435:6441   */\n      dup4\n        /* \"#utility.yul\":6418:6638   */\n    tag_569:\n        /* \"#utility.yul\":6452:6458   */\n      dup2\n        /* \"#utility.yul\":6447:6450   */\n      dup2\n        /* \"#utility.yul\":6444:6459   */\n      lt\n        /* \"#utility.yul\":6418:6638   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":6527:6530   */\n      dup1\n        /* \"#utility.yul\":6556:6593   */\n      tag_572\n        /* \"#utility.yul\":6589:6592   */\n      dup9\n        /* \"#utility.yul\":6577:6587   */\n      dup3\n        /* \"#utility.yul\":6556:6593   */\n      tag_440\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6551:6554   */\n      dup5\n        /* \"#utility.yul\":6544:6594   */\n      mstore\n        /* \"#utility.yul\":6623:6627   */\n      0x20\n        /* \"#utility.yul\":6618:6621   */\n      dup5\n        /* \"#utility.yul\":6614:6628   */\n      add\n        /* \"#utility.yul\":6607:6628   */\n      swap4\n      pop\n        /* \"#utility.yul\":6494:6638   */\n      pop\n        /* \"#utility.yul\":6478:6482   */\n      0x20\n        /* \"#utility.yul\":6473:6476   */\n      dup2\n        /* \"#utility.yul\":6469:6483   */\n      add\n        /* \"#utility.yul\":6462:6483   */\n      swap1\n      pop\n        /* \"#utility.yul\":6418:6638   */\n      jump(tag_569)\n    tag_571:\n        /* \"#utility.yul\":6422:6443   */\n      pop\n        /* \"#utility.yul\":6036:6644   */\n      pop\n      pop\n        /* \"#utility.yul\":5934:6644   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:7037   */\n    tag_456:\n        /* \"#utility.yul\":6738:6743   */\n      0x00\n        /* \"#utility.yul\":6787:6790   */\n      dup3\n        /* \"#utility.yul\":6780:6784   */\n      0x1f\n        /* \"#utility.yul\":6772:6778   */\n      dup4\n        /* \"#utility.yul\":6768:6785   */\n      add\n        /* \"#utility.yul\":6764:6791   */\n      slt\n        /* \"#utility.yul\":6754:6876   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":6795:6874   */\n      tag_575\n      tag_445\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6754:6876   */\n    tag_574:\n        /* \"#utility.yul\":6912:6918   */\n      dup2\n        /* \"#utility.yul\":6899:6919   */\n      calldataload\n        /* \"#utility.yul\":6937:7031   */\n      tag_576\n        /* \"#utility.yul\":7027:7030   */\n      dup5\n        /* \"#utility.yul\":7019:7025   */\n      dup3\n        /* \"#utility.yul\":7012:7016   */\n      0x20\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":7000:7017   */\n      add\n        /* \"#utility.yul\":6937:7031   */\n      tag_455\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6928:7031   */\n      swap2\n      pop\n        /* \"#utility.yul\":6744:7037   */\n      pop\n        /* \"#utility.yul\":6667:7037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7043:8082   */\n    tag_72:\n        /* \"#utility.yul\":7170:7176   */\n      0x00\n        /* \"#utility.yul\":7178:7184   */\n      dup1\n        /* \"#utility.yul\":7186:7192   */\n      0x00\n        /* \"#utility.yul\":7235:7237   */\n      0x60\n        /* \"#utility.yul\":7223:7232   */\n      dup5\n        /* \"#utility.yul\":7214:7221   */\n      dup7\n        /* \"#utility.yul\":7210:7233   */\n      sub\n        /* \"#utility.yul\":7206:7238   */\n      slt\n        /* \"#utility.yul\":7203:7322   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":7241:7320   */\n      tag_579\n      tag_432\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7203:7322   */\n    tag_578:\n        /* \"#utility.yul\":7389:7390   */\n      0x00\n        /* \"#utility.yul\":7378:7387   */\n      dup5\n        /* \"#utility.yul\":7374:7391   */\n      add\n        /* \"#utility.yul\":7361:7392   */\n      calldataload\n        /* \"#utility.yul\":7419:7437   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7411:7417   */\n      dup2\n        /* \"#utility.yul\":7408:7438   */\n      gt\n        /* \"#utility.yul\":7405:7522   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":7441:7520   */\n      tag_581\n      tag_433\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7405:7522   */\n    tag_580:\n        /* \"#utility.yul\":7546:7624   */\n      tag_582\n        /* \"#utility.yul\":7616:7623   */\n      dup7\n        /* \"#utility.yul\":7607:7613   */\n      dup3\n        /* \"#utility.yul\":7596:7605   */\n      dup8\n        /* \"#utility.yul\":7592:7614   */\n      add\n        /* \"#utility.yul\":7546:7624   */\n      tag_453\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7536:7624   */\n      swap4\n      pop\n        /* \"#utility.yul\":7332:7634   */\n      pop\n        /* \"#utility.yul\":7701:7703   */\n      0x20\n        /* \"#utility.yul\":7690:7699   */\n      dup5\n        /* \"#utility.yul\":7686:7704   */\n      add\n        /* \"#utility.yul\":7673:7705   */\n      calldataload\n        /* \"#utility.yul\":7732:7750   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7724:7730   */\n      dup2\n        /* \"#utility.yul\":7721:7751   */\n      gt\n        /* \"#utility.yul\":7718:7835   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":7754:7833   */\n      tag_584\n      tag_433\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":7718:7835   */\n    tag_583:\n        /* \"#utility.yul\":7859:7937   */\n      tag_585\n        /* \"#utility.yul\":7929:7936   */\n      dup7\n        /* \"#utility.yul\":7920:7926   */\n      dup3\n        /* \"#utility.yul\":7909:7918   */\n      dup8\n        /* \"#utility.yul\":7905:7927   */\n      add\n        /* \"#utility.yul\":7859:7937   */\n      tag_456\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7849:7937   */\n      swap3\n      pop\n        /* \"#utility.yul\":7644:7947   */\n      pop\n        /* \"#utility.yul\":7986:7988   */\n      0x40\n        /* \"#utility.yul\":8012:8065   */\n      tag_586\n        /* \"#utility.yul\":8057:8064   */\n      dup7\n        /* \"#utility.yul\":8048:8054   */\n      dup3\n        /* \"#utility.yul\":8037:8046   */\n      dup8\n        /* \"#utility.yul\":8033:8055   */\n      add\n        /* \"#utility.yul\":8012:8065   */\n      tag_440\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":8002:8065   */\n      swap2\n      pop\n        /* \"#utility.yul\":7957:8075   */\n      pop\n        /* \"#utility.yul\":7043:8082   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8088:8417   */\n    tag_80:\n        /* \"#utility.yul\":8147:8153   */\n      0x00\n        /* \"#utility.yul\":8196:8198   */\n      0x20\n        /* \"#utility.yul\":8184:8193   */\n      dup3\n        /* \"#utility.yul\":8175:8182   */\n      dup5\n        /* \"#utility.yul\":8171:8194   */\n      sub\n        /* \"#utility.yul\":8167:8199   */\n      slt\n        /* \"#utility.yul\":8164:8283   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":8202:8281   */\n      tag_589\n      tag_432\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":8164:8283   */\n    tag_588:\n        /* \"#utility.yul\":8322:8323   */\n      0x00\n        /* \"#utility.yul\":8347:8400   */\n      tag_590\n        /* \"#utility.yul\":8392:8399   */\n      dup5\n        /* \"#utility.yul\":8383:8389   */\n      dup3\n        /* \"#utility.yul\":8372:8381   */\n      dup6\n        /* \"#utility.yul\":8368:8390   */\n      add\n        /* \"#utility.yul\":8347:8400   */\n      tag_440\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":8337:8400   */\n      swap2\n      pop\n        /* \"#utility.yul\":8293:8410   */\n      pop\n        /* \"#utility.yul\":8088:8417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8423:9317   */\n    tag_85:\n        /* \"#utility.yul\":8541:8547   */\n      0x00\n        /* \"#utility.yul\":8549:8555   */\n      dup1\n        /* \"#utility.yul\":8598:8600   */\n      0x40\n        /* \"#utility.yul\":8586:8595   */\n      dup4\n        /* \"#utility.yul\":8577:8584   */\n      dup6\n        /* \"#utility.yul\":8573:8596   */\n      sub\n        /* \"#utility.yul\":8569:8601   */\n      slt\n        /* \"#utility.yul\":8566:8685   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":8604:8683   */\n      tag_593\n      tag_432\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8566:8685   */\n    tag_592:\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8741:8750   */\n      dup4\n        /* \"#utility.yul\":8737:8754   */\n      add\n        /* \"#utility.yul\":8724:8755   */\n      calldataload\n        /* \"#utility.yul\":8782:8800   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8774:8780   */\n      dup2\n        /* \"#utility.yul\":8771:8801   */\n      gt\n        /* \"#utility.yul\":8768:8885   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":8804:8883   */\n      tag_595\n      tag_433\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":8768:8885   */\n    tag_594:\n        /* \"#utility.yul\":8909:8987   */\n      tag_596\n        /* \"#utility.yul\":8979:8986   */\n      dup6\n        /* \"#utility.yul\":8970:8976   */\n      dup3\n        /* \"#utility.yul\":8959:8968   */\n      dup7\n        /* \"#utility.yul\":8955:8977   */\n      add\n        /* \"#utility.yul\":8909:8987   */\n      tag_453\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8899:8987   */\n      swap3\n      pop\n        /* \"#utility.yul\":8695:8997   */\n      pop\n        /* \"#utility.yul\":9064:9066   */\n      0x20\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9067   */\n      add\n        /* \"#utility.yul\":9036:9068   */\n      calldataload\n        /* \"#utility.yul\":9095:9113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9087:9093   */\n      dup2\n        /* \"#utility.yul\":9084:9114   */\n      gt\n        /* \"#utility.yul\":9081:9198   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":9117:9196   */\n      tag_598\n      tag_433\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":9081:9198   */\n    tag_597:\n        /* \"#utility.yul\":9222:9300   */\n      tag_599\n        /* \"#utility.yul\":9292:9299   */\n      dup6\n        /* \"#utility.yul\":9283:9289   */\n      dup3\n        /* \"#utility.yul\":9272:9281   */\n      dup7\n        /* \"#utility.yul\":9268:9290   */\n      add\n        /* \"#utility.yul\":9222:9300   */\n      tag_456\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":9212:9300   */\n      swap2\n      pop\n        /* \"#utility.yul\":9007:9310   */\n      pop\n        /* \"#utility.yul\":8423:9317   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9323:9432   */\n    tag_457:\n        /* \"#utility.yul\":9404:9425   */\n      tag_601\n        /* \"#utility.yul\":9419:9424   */\n      dup2\n        /* \"#utility.yul\":9404:9425   */\n      tag_442\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":9399:9402   */\n      dup3\n        /* \"#utility.yul\":9392:9426   */\n      mstore\n        /* \"#utility.yul\":9323:9432   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9438:9648   */\n    tag_113:\n        /* \"#utility.yul\":9525:9529   */\n      0x00\n        /* \"#utility.yul\":9563:9565   */\n      0x20\n        /* \"#utility.yul\":9552:9561   */\n      dup3\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"#utility.yul\":9540:9566   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9641   */\n      tag_603\n        /* \"#utility.yul\":9638:9639   */\n      0x00\n        /* \"#utility.yul\":9627:9636   */\n      dup4\n        /* \"#utility.yul\":9623:9640   */\n      add\n        /* \"#utility.yul\":9614:9620   */\n      dup5\n        /* \"#utility.yul\":9576:9641   */\n      tag_457\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9438:9648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9654:9772   */\n    tag_458:\n        /* \"#utility.yul\":9741:9765   */\n      tag_605\n        /* \"#utility.yul\":9759:9764   */\n      dup2\n        /* \"#utility.yul\":9741:9765   */\n      tag_435\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":9736:9739   */\n      dup3\n        /* \"#utility.yul\":9729:9766   */\n      mstore\n        /* \"#utility.yul\":9654:9772   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9778:10000   */\n    tag_123:\n        /* \"#utility.yul\":9871:9875   */\n      0x00\n        /* \"#utility.yul\":9909:9911   */\n      0x20\n        /* \"#utility.yul\":9898:9907   */\n      dup3\n        /* \"#utility.yul\":9894:9912   */\n      add\n        /* \"#utility.yul\":9886:9912   */\n      swap1\n      pop\n        /* \"#utility.yul\":9922:9993   */\n      tag_607\n        /* \"#utility.yul\":9990:9991   */\n      0x00\n        /* \"#utility.yul\":9979:9988   */\n      dup4\n        /* \"#utility.yul\":9975:9992   */\n      add\n        /* \"#utility.yul\":9966:9972   */\n      dup5\n        /* \"#utility.yul\":9922:9993   */\n      tag_458\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":9778:10000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10006:10911   */\n    tag_130:\n        /* \"#utility.yul\":10098:10104   */\n      0x00\n        /* \"#utility.yul\":10106:10112   */\n      dup1\n        /* \"#utility.yul\":10114:10120   */\n      0x00\n        /* \"#utility.yul\":10122:10128   */\n      dup1\n        /* \"#utility.yul\":10130:10136   */\n      0x00\n        /* \"#utility.yul\":10179:10182   */\n      0xa0\n        /* \"#utility.yul\":10167:10176   */\n      dup7\n        /* \"#utility.yul\":10158:10165   */\n      dup9\n        /* \"#utility.yul\":10154:10177   */\n      sub\n        /* \"#utility.yul\":10150:10183   */\n      slt\n        /* \"#utility.yul\":10147:10267   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":10186:10265   */\n      tag_610\n      tag_432\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":10147:10267   */\n    tag_609:\n        /* \"#utility.yul\":10306:10307   */\n      0x00\n        /* \"#utility.yul\":10331:10384   */\n      tag_611\n        /* \"#utility.yul\":10376:10383   */\n      dup9\n        /* \"#utility.yul\":10367:10373   */\n      dup3\n        /* \"#utility.yul\":10356:10365   */\n      dup10\n        /* \"#utility.yul\":10352:10374   */\n      add\n        /* \"#utility.yul\":10331:10384   */\n      tag_437\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":10321:10384   */\n      swap6\n      pop\n        /* \"#utility.yul\":10277:10394   */\n      pop\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10459:10512   */\n      tag_612\n        /* \"#utility.yul\":10504:10511   */\n      dup9\n        /* \"#utility.yul\":10495:10501   */\n      dup3\n        /* \"#utility.yul\":10484:10493   */\n      dup10\n        /* \"#utility.yul\":10480:10502   */\n      add\n        /* \"#utility.yul\":10459:10512   */\n      tag_440\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":10449:10512   */\n      swap5\n      pop\n        /* \"#utility.yul\":10404:10522   */\n      pop\n        /* \"#utility.yul\":10561:10563   */\n      0x40\n        /* \"#utility.yul\":10587:10640   */\n      tag_613\n        /* \"#utility.yul\":10632:10639   */\n      dup9\n        /* \"#utility.yul\":10623:10629   */\n      dup3\n        /* \"#utility.yul\":10612:10621   */\n      dup10\n        /* \"#utility.yul\":10608:10630   */\n      add\n        /* \"#utility.yul\":10587:10640   */\n      tag_440\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10577:10640   */\n      swap4\n      pop\n        /* \"#utility.yul\":10532:10650   */\n      pop\n        /* \"#utility.yul\":10689:10691   */\n      0x60\n        /* \"#utility.yul\":10715:10768   */\n      tag_614\n        /* \"#utility.yul\":10760:10767   */\n      dup9\n        /* \"#utility.yul\":10751:10757   */\n      dup3\n        /* \"#utility.yul\":10740:10749   */\n      dup10\n        /* \"#utility.yul\":10736:10758   */\n      add\n        /* \"#utility.yul\":10715:10768   */\n      tag_440\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":10705:10768   */\n      swap3\n      pop\n        /* \"#utility.yul\":10660:10778   */\n      pop\n        /* \"#utility.yul\":10817:10820   */\n      0x80\n        /* \"#utility.yul\":10844:10894   */\n      tag_615\n        /* \"#utility.yul\":10886:10893   */\n      dup9\n        /* \"#utility.yul\":10877:10883   */\n      dup3\n        /* \"#utility.yul\":10866:10875   */\n      dup10\n        /* \"#utility.yul\":10862:10884   */\n      add\n        /* \"#utility.yul\":10844:10894   */\n      tag_444\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":10834:10894   */\n      swap2\n      pop\n        /* \"#utility.yul\":10788:10904   */\n      pop\n        /* \"#utility.yul\":10006:10911   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10917:11557   */\n    tag_165:\n        /* \"#utility.yul\":11110:11114   */\n      0x00\n        /* \"#utility.yul\":11148:11151   */\n      0xa0\n        /* \"#utility.yul\":11137:11146   */\n      dup3\n        /* \"#utility.yul\":11133:11152   */\n      add\n        /* \"#utility.yul\":11125:11152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11162:11233   */\n      tag_617\n        /* \"#utility.yul\":11230:11231   */\n      0x00\n        /* \"#utility.yul\":11219:11228   */\n      dup4\n        /* \"#utility.yul\":11215:11232   */\n      add\n        /* \"#utility.yul\":11206:11212   */\n      dup9\n        /* \"#utility.yul\":11162:11233   */\n      tag_441\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11243:11309   */\n      tag_618\n        /* \"#utility.yul\":11305:11307   */\n      0x20\n        /* \"#utility.yul\":11294:11303   */\n      dup4\n        /* \"#utility.yul\":11290:11308   */\n      add\n        /* \"#utility.yul\":11281:11287   */\n      dup8\n        /* \"#utility.yul\":11243:11309   */\n      tag_457\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11319:11385   */\n      tag_619\n        /* \"#utility.yul\":11381:11383   */\n      0x40\n        /* \"#utility.yul\":11370:11379   */\n      dup4\n        /* \"#utility.yul\":11366:11384   */\n      add\n        /* \"#utility.yul\":11357:11363   */\n      dup7\n        /* \"#utility.yul\":11319:11385   */\n      tag_457\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":11395:11467   */\n      tag_620\n        /* \"#utility.yul\":11463:11465   */\n      0x60\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11466   */\n      add\n        /* \"#utility.yul\":11439:11445   */\n      dup6\n        /* \"#utility.yul\":11395:11467   */\n      tag_441\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":11477:11550   */\n      tag_621\n        /* \"#utility.yul\":11545:11548   */\n      0x80\n        /* \"#utility.yul\":11534:11543   */\n      dup4\n        /* \"#utility.yul\":11530:11549   */\n      add\n        /* \"#utility.yul\":11521:11527   */\n      dup5\n        /* \"#utility.yul\":11477:11550   */\n      tag_441\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10917:11557   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11732   */\n    tag_459:\n        /* \"#utility.yul\":11647:11658   */\n      0x00\n        /* \"#utility.yul\":11681:11687   */\n      dup3\n        /* \"#utility.yul\":11676:11679   */\n      dup3\n        /* \"#utility.yul\":11669:11688   */\n      mstore\n        /* \"#utility.yul\":11721:11725   */\n      0x20\n        /* \"#utility.yul\":11716:11719   */\n      dup3\n        /* \"#utility.yul\":11712:11726   */\n      add\n        /* \"#utility.yul\":11697:11726   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:11914   */\n    tag_460:\n        /* \"#utility.yul\":11878:11906   */\n      0x50726573616c653a20546f6b656e206e6f7420616c6c6f776564000000000000\n        /* \"#utility.yul\":11874:11875   */\n      0x00\n        /* \"#utility.yul\":11866:11872   */\n      dup3\n        /* \"#utility.yul\":11862:11876   */\n      add\n        /* \"#utility.yul\":11855:11907   */\n      mstore\n        /* \"#utility.yul\":11738:11914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11920:12286   */\n    tag_461:\n        /* \"#utility.yul\":12062:12065   */\n      0x00\n        /* \"#utility.yul\":12083:12150   */\n      tag_625\n        /* \"#utility.yul\":12147:12149   */\n      0x1a\n        /* \"#utility.yul\":12142:12145   */\n      dup4\n        /* \"#utility.yul\":12083:12150   */\n      tag_459\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":12076:12150   */\n      swap2\n      pop\n        /* \"#utility.yul\":12159:12252   */\n      tag_626\n        /* \"#utility.yul\":12248:12251   */\n      dup3\n        /* \"#utility.yul\":12159:12252   */\n      tag_460\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":12277:12279   */\n      0x20\n        /* \"#utility.yul\":12272:12275   */\n      dup3\n        /* \"#utility.yul\":12268:12280   */\n      add\n        /* \"#utility.yul\":12261:12280   */\n      swap1\n      pop\n        /* \"#utility.yul\":11920:12286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12292:12711   */\n    tag_178:\n        /* \"#utility.yul\":12458:12462   */\n      0x00\n        /* \"#utility.yul\":12496:12498   */\n      0x20\n        /* \"#utility.yul\":12485:12494   */\n      dup3\n        /* \"#utility.yul\":12481:12499   */\n      add\n        /* \"#utility.yul\":12473:12499   */\n      swap1\n      pop\n        /* \"#utility.yul\":12545:12554   */\n      dup2\n        /* \"#utility.yul\":12539:12543   */\n      dup2\n        /* \"#utility.yul\":12535:12555   */\n      sub\n        /* \"#utility.yul\":12531:12532   */\n      0x00\n        /* \"#utility.yul\":12520:12529   */\n      dup4\n        /* \"#utility.yul\":12516:12533   */\n      add\n        /* \"#utility.yul\":12509:12556   */\n      mstore\n        /* \"#utility.yul\":12573:12704   */\n      tag_628\n        /* \"#utility.yul\":12699:12703   */\n      dup2\n        /* \"#utility.yul\":12573:12704   */\n      tag_461\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12565:12704   */\n      swap1\n      pop\n        /* \"#utility.yul\":12292:12711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12717:12897   */\n    tag_462:\n        /* \"#utility.yul\":12765:12842   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12762:12763   */\n      0x00\n        /* \"#utility.yul\":12755:12843   */\n      mstore\n        /* \"#utility.yul\":12862:12866   */\n      0x11\n        /* \"#utility.yul\":12859:12860   */\n      0x04\n        /* \"#utility.yul\":12852:12867   */\n      mstore\n        /* \"#utility.yul\":12886:12890   */\n      0x24\n        /* \"#utility.yul\":12883:12884   */\n      0x00\n        /* \"#utility.yul\":12876:12891   */\n      revert\n        /* \"#utility.yul\":12903:13005   */\n    tag_463:\n        /* \"#utility.yul\":12945:12953   */\n      0x00\n        /* \"#utility.yul\":12992:12997   */\n      dup2\n        /* \"#utility.yul\":12989:12990   */\n      0x01\n        /* \"#utility.yul\":12985:12998   */\n      shr\n        /* \"#utility.yul\":12964:12998   */\n      swap1\n      pop\n        /* \"#utility.yul\":12903:13005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13011:13859   */\n    tag_464:\n        /* \"#utility.yul\":13072:13077   */\n      0x00\n        /* \"#utility.yul\":13079:13083   */\n      dup1\n        /* \"#utility.yul\":13103:13109   */\n      dup3\n        /* \"#utility.yul\":13094:13109   */\n      swap2\n      pop\n        /* \"#utility.yul\":13127:13132   */\n      dup4\n        /* \"#utility.yul\":13118:13132   */\n      swap1\n      pop\n        /* \"#utility.yul\":13141:13853   */\n    tag_632:\n        /* \"#utility.yul\":13162:13163   */\n      0x01\n        /* \"#utility.yul\":13152:13160   */\n      dup6\n        /* \"#utility.yul\":13149:13164   */\n      gt\n        /* \"#utility.yul\":13141:13853   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":13257:13261   */\n      dup1\n        /* \"#utility.yul\":13252:13255   */\n      dup7\n        /* \"#utility.yul\":13248:13262   */\n      div\n        /* \"#utility.yul\":13242:13246   */\n      dup2\n        /* \"#utility.yul\":13239:13263   */\n      gt\n        /* \"#utility.yul\":13236:13286   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":13266:13284   */\n      tag_636\n      tag_462\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":13236:13286   */\n    tag_635:\n        /* \"#utility.yul\":13316:13317   */\n      0x01\n        /* \"#utility.yul\":13306:13314   */\n      dup6\n        /* \"#utility.yul\":13302:13318   */\n      and\n        /* \"#utility.yul\":13299:13750   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":13731:13735   */\n      dup1\n        /* \"#utility.yul\":13724:13729   */\n      dup3\n        /* \"#utility.yul\":13720:13736   */\n      mul\n        /* \"#utility.yul\":13711:13736   */\n      swap2\n      pop\n        /* \"#utility.yul\":13299:13750   */\n    tag_637:\n        /* \"#utility.yul\":13781:13785   */\n      dup1\n        /* \"#utility.yul\":13775:13779   */\n      dup2\n        /* \"#utility.yul\":13771:13786   */\n      mul\n        /* \"#utility.yul\":13763:13786   */\n      swap1\n      pop\n        /* \"#utility.yul\":13811:13843   */\n      tag_638\n        /* \"#utility.yul\":13834:13842   */\n      dup6\n        /* \"#utility.yul\":13811:13843   */\n      tag_463\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":13799:13843   */\n      swap5\n      pop\n        /* \"#utility.yul\":13141:13853   */\n      jump(tag_632)\n    tag_634:\n        /* \"#utility.yul\":13011:13859   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13865:14938   */\n    tag_465:\n        /* \"#utility.yul\":13919:13924   */\n      0x00\n        /* \"#utility.yul\":14110:14118   */\n      dup3\n        /* \"#utility.yul\":14100:14140   */\n      tag_640\n      jumpi\n        /* \"#utility.yul\":14131:14132   */\n      0x01\n        /* \"#utility.yul\":14122:14132   */\n      swap1\n      pop\n        /* \"#utility.yul\":14133:14138   */\n      jump(tag_639)\n        /* \"#utility.yul\":14100:14140   */\n    tag_640:\n        /* \"#utility.yul\":14159:14163   */\n      dup2\n        /* \"#utility.yul\":14149:14185   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":14176:14177   */\n      0x00\n        /* \"#utility.yul\":14167:14177   */\n      swap1\n      pop\n        /* \"#utility.yul\":14178:14183   */\n      jump(tag_639)\n        /* \"#utility.yul\":14149:14185   */\n    tag_641:\n        /* \"#utility.yul\":14245:14249   */\n      dup2\n        /* \"#utility.yul\":14293:14294   */\n      0x01\n        /* \"#utility.yul\":14288:14315   */\n      dup2\n      eq\n      tag_643\n      jumpi\n        /* \"#utility.yul\":14329:14330   */\n      0x02\n        /* \"#utility.yul\":14324:14515   */\n      dup2\n      eq\n      tag_644\n      jumpi\n        /* \"#utility.yul\":14238:14515   */\n      jump(tag_642)\n        /* \"#utility.yul\":14288:14315   */\n    tag_643:\n        /* \"#utility.yul\":14306:14307   */\n      0x01\n        /* \"#utility.yul\":14297:14307   */\n      swap2\n      pop\n        /* \"#utility.yul\":14308:14313   */\n      pop\n      jump(tag_639)\n        /* \"#utility.yul\":14324:14515   */\n    tag_644:\n        /* \"#utility.yul\":14369:14372   */\n      0xff\n        /* \"#utility.yul\":14359:14367   */\n      dup5\n        /* \"#utility.yul\":14356:14373   */\n      gt\n        /* \"#utility.yul\":14353:14396   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":14376:14394   */\n      tag_646\n      tag_462\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":14353:14396   */\n    tag_645:\n        /* \"#utility.yul\":14425:14433   */\n      dup4\n        /* \"#utility.yul\":14422:14423   */\n      0x02\n        /* \"#utility.yul\":14418:14434   */\n      exp\n        /* \"#utility.yul\":14409:14434   */\n      swap2\n      pop\n        /* \"#utility.yul\":14460:14463   */\n      dup5\n        /* \"#utility.yul\":14453:14458   */\n      dup3\n        /* \"#utility.yul\":14450:14464   */\n      gt\n        /* \"#utility.yul\":14447:14487   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":14467:14485   */\n      tag_648\n      tag_462\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14447:14487   */\n    tag_647:\n        /* \"#utility.yul\":14500:14505   */\n      pop\n      jump(tag_639)\n        /* \"#utility.yul\":14238:14515   */\n    tag_642:\n      pop\n        /* \"#utility.yul\":14624:14626   */\n      0x20\n        /* \"#utility.yul\":14614:14622   */\n      dup4\n        /* \"#utility.yul\":14611:14627   */\n      lt\n        /* \"#utility.yul\":14605:14608   */\n      0x0133\n        /* \"#utility.yul\":14599:14603   */\n      dup4\n        /* \"#utility.yul\":14596:14609   */\n      lt\n        /* \"#utility.yul\":14592:14628   */\n      and\n        /* \"#utility.yul\":14574:14576   */\n      0x4e\n        /* \"#utility.yul\":14564:14572   */\n      dup5\n        /* \"#utility.yul\":14561:14577   */\n      lt\n        /* \"#utility.yul\":14556:14558   */\n      0x0b\n        /* \"#utility.yul\":14550:14554   */\n      dup5\n        /* \"#utility.yul\":14547:14559   */\n      lt\n        /* \"#utility.yul\":14543:14578   */\n      and\n        /* \"#utility.yul\":14527:14638   */\n      or\n        /* \"#utility.yul\":14524:14770   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":14680:14688   */\n      dup3\n        /* \"#utility.yul\":14674:14678   */\n      dup3\n        /* \"#utility.yul\":14670:14689   */\n      exp\n        /* \"#utility.yul\":14661:14689   */\n      swap1\n      pop\n        /* \"#utility.yul\":14715:14718   */\n      dup4\n        /* \"#utility.yul\":14708:14713   */\n      dup2\n        /* \"#utility.yul\":14705:14719   */\n      gt\n        /* \"#utility.yul\":14702:14742   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":14722:14740   */\n      tag_651\n      tag_462\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":14702:14742   */\n    tag_650:\n        /* \"#utility.yul\":14755:14760   */\n      jump(tag_639)\n        /* \"#utility.yul\":14524:14770   */\n    tag_649:\n        /* \"#utility.yul\":14795:14837   */\n      tag_652\n        /* \"#utility.yul\":14833:14836   */\n      dup5\n        /* \"#utility.yul\":14823:14831   */\n      dup5\n        /* \"#utility.yul\":14817:14821   */\n      dup5\n        /* \"#utility.yul\":14814:14815   */\n      0x01\n        /* \"#utility.yul\":14795:14837   */\n      tag_464\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":14780:14837   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":14869:14873   */\n      dup2\n        /* \"#utility.yul\":14864:14867   */\n      dup5\n        /* \"#utility.yul\":14860:14874   */\n      div\n        /* \"#utility.yul\":14853:14858   */\n      dup2\n        /* \"#utility.yul\":14850:14875   */\n      gt\n        /* \"#utility.yul\":14847:14898   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":14878:14896   */\n      tag_654\n      tag_462\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":14847:14898   */\n    tag_653:\n        /* \"#utility.yul\":14927:14931   */\n      dup2\n        /* \"#utility.yul\":14920:14925   */\n      dup2\n        /* \"#utility.yul\":14916:14932   */\n      mul\n        /* \"#utility.yul\":14907:14932   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:14938   */\n    tag_639:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14944:15229   */\n    tag_180:\n        /* \"#utility.yul\":15004:15009   */\n      0x00\n        /* \"#utility.yul\":15028:15051   */\n      tag_656\n        /* \"#utility.yul\":15046:15050   */\n      dup3\n        /* \"#utility.yul\":15028:15051   */\n      tag_438\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15020:15051   */\n      swap2\n      pop\n        /* \"#utility.yul\":15072:15099   */\n      tag_657\n        /* \"#utility.yul\":15090:15098   */\n      dup4\n        /* \"#utility.yul\":15072:15099   */\n      tag_438\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":15060:15099   */\n      swap3\n      pop\n        /* \"#utility.yul\":15118:15222   */\n      tag_658\n        /* \"#utility.yul\":15155:15221   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15145:15153   */\n      dup5\n        /* \"#utility.yul\":15139:15143   */\n      dup5\n        /* \"#utility.yul\":15118:15222   */\n      tag_465\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":15109:15222   */\n      swap1\n      pop\n        /* \"#utility.yul\":14944:15229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15235:15645   */\n    tag_182:\n        /* \"#utility.yul\":15275:15282   */\n      0x00\n        /* \"#utility.yul\":15298:15318   */\n      tag_660\n        /* \"#utility.yul\":15316:15317   */\n      dup3\n        /* \"#utility.yul\":15298:15318   */\n      tag_438\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":15293:15318   */\n      swap2\n      pop\n        /* \"#utility.yul\":15332:15352   */\n      tag_661\n        /* \"#utility.yul\":15350:15351   */\n      dup4\n        /* \"#utility.yul\":15332:15352   */\n      tag_438\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":15327:15352   */\n      swap3\n      pop\n        /* \"#utility.yul\":15387:15388   */\n      dup3\n        /* \"#utility.yul\":15384:15385   */\n      dup3\n        /* \"#utility.yul\":15380:15389   */\n      mul\n        /* \"#utility.yul\":15409:15439   */\n      tag_662\n        /* \"#utility.yul\":15427:15438   */\n      dup2\n        /* \"#utility.yul\":15409:15439   */\n      tag_438\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":15398:15439   */\n      swap2\n      pop\n        /* \"#utility.yul\":15588:15589   */\n      dup3\n        /* \"#utility.yul\":15579:15586   */\n      dup3\n        /* \"#utility.yul\":15575:15590   */\n      div\n        /* \"#utility.yul\":15572:15573   */\n      dup5\n        /* \"#utility.yul\":15569:15591   */\n      eq\n        /* \"#utility.yul\":15549:15550   */\n      dup4\n        /* \"#utility.yul\":15542:15551   */\n      iszero\n        /* \"#utility.yul\":15522:15605   */\n      or\n        /* \"#utility.yul\":15499:15638   */\n      tag_663\n      jumpi\n        /* \"#utility.yul\":15618:15636   */\n      tag_664\n      tag_462\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15499:15638   */\n    tag_663:\n        /* \"#utility.yul\":15283:15645   */\n      pop\n        /* \"#utility.yul\":15235:15645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15651:15831   */\n    tag_466:\n        /* \"#utility.yul\":15699:15776   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15696:15697   */\n      0x00\n        /* \"#utility.yul\":15689:15777   */\n      mstore\n        /* \"#utility.yul\":15796:15800   */\n      0x12\n        /* \"#utility.yul\":15793:15794   */\n      0x04\n        /* \"#utility.yul\":15786:15801   */\n      mstore\n        /* \"#utility.yul\":15820:15824   */\n      0x24\n        /* \"#utility.yul\":15817:15818   */\n      0x00\n        /* \"#utility.yul\":15810:15825   */\n      revert\n        /* \"#utility.yul\":15837:16022   */\n    tag_184:\n        /* \"#utility.yul\":15877:15878   */\n      0x00\n        /* \"#utility.yul\":15894:15914   */\n      tag_667\n        /* \"#utility.yul\":15912:15913   */\n      dup3\n        /* \"#utility.yul\":15894:15914   */\n      tag_438\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":15889:15914   */\n      swap2\n      pop\n        /* \"#utility.yul\":15928:15948   */\n      tag_668\n        /* \"#utility.yul\":15946:15947   */\n      dup4\n        /* \"#utility.yul\":15928:15948   */\n      tag_438\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":15923:15948   */\n      swap3\n      pop\n        /* \"#utility.yul\":15967:15968   */\n      dup3\n        /* \"#utility.yul\":15957:15992   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":15972:15990   */\n      tag_670\n      tag_466\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":15957:15992   */\n    tag_669:\n        /* \"#utility.yul\":16014:16015   */\n      dup3\n        /* \"#utility.yul\":16011:16012   */\n      dup3\n        /* \"#utility.yul\":16007:16016   */\n      div\n        /* \"#utility.yul\":16002:16016   */\n      swap1\n      pop\n        /* \"#utility.yul\":15837:16022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16028:16201   */\n    tag_467:\n        /* \"#utility.yul\":16168:16193   */\n      0x50726573616c653a206973206e6f742073746f70706564000000000000000000\n        /* \"#utility.yul\":16164:16165   */\n      0x00\n        /* \"#utility.yul\":16156:16162   */\n      dup3\n        /* \"#utility.yul\":16152:16166   */\n      add\n        /* \"#utility.yul\":16145:16194   */\n      mstore\n        /* \"#utility.yul\":16028:16201   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16207:16573   */\n    tag_468:\n        /* \"#utility.yul\":16349:16352   */\n      0x00\n        /* \"#utility.yul\":16370:16437   */\n      tag_673\n        /* \"#utility.yul\":16434:16436   */\n      0x17\n        /* \"#utility.yul\":16429:16432   */\n      dup4\n        /* \"#utility.yul\":16370:16437   */\n      tag_459\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":16363:16437   */\n      swap2\n      pop\n        /* \"#utility.yul\":16446:16539   */\n      tag_674\n        /* \"#utility.yul\":16535:16538   */\n      dup3\n        /* \"#utility.yul\":16446:16539   */\n      tag_467\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":16564:16566   */\n      0x20\n        /* \"#utility.yul\":16559:16562   */\n      dup3\n        /* \"#utility.yul\":16555:16567   */\n      add\n        /* \"#utility.yul\":16548:16567   */\n      swap1\n      pop\n        /* \"#utility.yul\":16207:16573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16579:16998   */\n    tag_192:\n        /* \"#utility.yul\":16745:16749   */\n      0x00\n        /* \"#utility.yul\":16783:16785   */\n      0x20\n        /* \"#utility.yul\":16772:16781   */\n      dup3\n        /* \"#utility.yul\":16768:16786   */\n      add\n        /* \"#utility.yul\":16760:16786   */\n      swap1\n      pop\n        /* \"#utility.yul\":16832:16841   */\n      dup2\n        /* \"#utility.yul\":16826:16830   */\n      dup2\n        /* \"#utility.yul\":16822:16842   */\n      sub\n        /* \"#utility.yul\":16818:16819   */\n      0x00\n        /* \"#utility.yul\":16807:16816   */\n      dup4\n        /* \"#utility.yul\":16803:16820   */\n      add\n        /* \"#utility.yul\":16796:16843   */\n      mstore\n        /* \"#utility.yul\":16860:16991   */\n      tag_676\n        /* \"#utility.yul\":16986:16990   */\n      dup2\n        /* \"#utility.yul\":16860:16991   */\n      tag_468\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":16852:16991   */\n      swap1\n      pop\n        /* \"#utility.yul\":16579:16998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17004:17181   */\n    tag_469:\n        /* \"#utility.yul\":17144:17173   */\n      0x50726573616c653a204e6f20746f6b656e7320746f20636c61696d0000000000\n        /* \"#utility.yul\":17140:17141   */\n      0x00\n        /* \"#utility.yul\":17132:17138   */\n      dup3\n        /* \"#utility.yul\":17128:17142   */\n      add\n        /* \"#utility.yul\":17121:17174   */\n      mstore\n        /* \"#utility.yul\":17004:17181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17187:17553   */\n    tag_470:\n        /* \"#utility.yul\":17329:17332   */\n      0x00\n        /* \"#utility.yul\":17350:17417   */\n      tag_679\n        /* \"#utility.yul\":17414:17416   */\n      0x1b\n        /* \"#utility.yul\":17409:17412   */\n      dup4\n        /* \"#utility.yul\":17350:17417   */\n      tag_459\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":17343:17417   */\n      swap2\n      pop\n        /* \"#utility.yul\":17426:17519   */\n      tag_680\n        /* \"#utility.yul\":17515:17518   */\n      dup3\n        /* \"#utility.yul\":17426:17519   */\n      tag_469\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":17544:17546   */\n      0x20\n        /* \"#utility.yul\":17539:17542   */\n      dup3\n        /* \"#utility.yul\":17535:17547   */\n      add\n        /* \"#utility.yul\":17528:17547   */\n      swap1\n      pop\n        /* \"#utility.yul\":17187:17553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17559:17978   */\n    tag_196:\n        /* \"#utility.yul\":17725:17729   */\n      0x00\n        /* \"#utility.yul\":17763:17765   */\n      0x20\n        /* \"#utility.yul\":17752:17761   */\n      dup3\n        /* \"#utility.yul\":17748:17766   */\n      add\n        /* \"#utility.yul\":17740:17766   */\n      swap1\n      pop\n        /* \"#utility.yul\":17812:17821   */\n      dup2\n        /* \"#utility.yul\":17806:17810   */\n      dup2\n        /* \"#utility.yul\":17802:17822   */\n      sub\n        /* \"#utility.yul\":17798:17799   */\n      0x00\n        /* \"#utility.yul\":17787:17796   */\n      dup4\n        /* \"#utility.yul\":17783:17800   */\n      add\n        /* \"#utility.yul\":17776:17823   */\n      mstore\n        /* \"#utility.yul\":17840:17971   */\n      tag_682\n        /* \"#utility.yul\":17966:17970   */\n      dup2\n        /* \"#utility.yul\":17840:17971   */\n      tag_470\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":17832:17971   */\n      swap1\n      pop\n        /* \"#utility.yul\":17559:17978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17984:18222   */\n    tag_471:\n        /* \"#utility.yul\":18124:18158   */\n      0x50726573616c653a2053746174757320697320616c7265616479207365742074\n        /* \"#utility.yul\":18120:18121   */\n      0x00\n        /* \"#utility.yul\":18112:18118   */\n      dup3\n        /* \"#utility.yul\":18108:18122   */\n      add\n        /* \"#utility.yul\":18101:18159   */\n      mstore\n        /* \"#utility.yul\":18193:18214   */\n      0x6f2074686520646573697265642076616c756500000000000000000000000000\n        /* \"#utility.yul\":18188:18190   */\n      0x20\n        /* \"#utility.yul\":18180:18186   */\n      dup3\n        /* \"#utility.yul\":18176:18191   */\n      add\n        /* \"#utility.yul\":18169:18215   */\n      mstore\n        /* \"#utility.yul\":17984:18222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18228:18594   */\n    tag_472:\n        /* \"#utility.yul\":18370:18373   */\n      0x00\n        /* \"#utility.yul\":18391:18458   */\n      tag_685\n        /* \"#utility.yul\":18455:18457   */\n      0x33\n        /* \"#utility.yul\":18450:18453   */\n      dup4\n        /* \"#utility.yul\":18391:18458   */\n      tag_459\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":18384:18458   */\n      swap2\n      pop\n        /* \"#utility.yul\":18467:18560   */\n      tag_686\n        /* \"#utility.yul\":18556:18559   */\n      dup3\n        /* \"#utility.yul\":18467:18560   */\n      tag_471\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":18585:18587   */\n      0x40\n        /* \"#utility.yul\":18580:18583   */\n      dup3\n        /* \"#utility.yul\":18576:18588   */\n      add\n        /* \"#utility.yul\":18569:18588   */\n      swap1\n      pop\n        /* \"#utility.yul\":18228:18594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18600:19019   */\n    tag_205:\n        /* \"#utility.yul\":18766:18770   */\n      0x00\n        /* \"#utility.yul\":18804:18806   */\n      0x20\n        /* \"#utility.yul\":18793:18802   */\n      dup3\n        /* \"#utility.yul\":18789:18807   */\n      add\n        /* \"#utility.yul\":18781:18807   */\n      swap1\n      pop\n        /* \"#utility.yul\":18853:18862   */\n      dup2\n        /* \"#utility.yul\":18847:18851   */\n      dup2\n        /* \"#utility.yul\":18843:18863   */\n      sub\n        /* \"#utility.yul\":18839:18840   */\n      0x00\n        /* \"#utility.yul\":18828:18837   */\n      dup4\n        /* \"#utility.yul\":18824:18841   */\n      add\n        /* \"#utility.yul\":18817:18864   */\n      mstore\n        /* \"#utility.yul\":18881:19012   */\n      tag_688\n        /* \"#utility.yul\":19007:19011   */\n      dup2\n        /* \"#utility.yul\":18881:19012   */\n      tag_472\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":18873:19012   */\n      swap1\n      pop\n        /* \"#utility.yul\":18600:19019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19025:19259   */\n    tag_473:\n        /* \"#utility.yul\":19165:19199   */\n      0x50726573616c653a20746f6b656e732026207072696365732061727261797320\n        /* \"#utility.yul\":19161:19162   */\n      0x00\n        /* \"#utility.yul\":19153:19159   */\n      dup3\n        /* \"#utility.yul\":19149:19163   */\n      add\n        /* \"#utility.yul\":19142:19200   */\n      mstore\n        /* \"#utility.yul\":19234:19251   */\n      0x6c656e677468206d69736d617463680000000000000000000000000000000000\n        /* \"#utility.yul\":19229:19231   */\n      0x20\n        /* \"#utility.yul\":19221:19227   */\n      dup3\n        /* \"#utility.yul\":19217:19232   */\n      add\n        /* \"#utility.yul\":19210:19252   */\n      mstore\n        /* \"#utility.yul\":19025:19259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19265:19631   */\n    tag_474:\n        /* \"#utility.yul\":19407:19410   */\n      0x00\n        /* \"#utility.yul\":19428:19495   */\n      tag_691\n        /* \"#utility.yul\":19492:19494   */\n      0x2f\n        /* \"#utility.yul\":19487:19490   */\n      dup4\n        /* \"#utility.yul\":19428:19495   */\n      tag_459\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":19421:19495   */\n      swap2\n      pop\n        /* \"#utility.yul\":19504:19597   */\n      tag_692\n        /* \"#utility.yul\":19593:19596   */\n      dup3\n        /* \"#utility.yul\":19504:19597   */\n      tag_473\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":19622:19624   */\n      0x40\n        /* \"#utility.yul\":19617:19620   */\n      dup3\n        /* \"#utility.yul\":19613:19625   */\n      add\n        /* \"#utility.yul\":19606:19625   */\n      swap1\n      pop\n        /* \"#utility.yul\":19265:19631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19637:20056   */\n    tag_211:\n        /* \"#utility.yul\":19803:19807   */\n      0x00\n        /* \"#utility.yul\":19841:19843   */\n      0x20\n        /* \"#utility.yul\":19830:19839   */\n      dup3\n        /* \"#utility.yul\":19826:19844   */\n      add\n        /* \"#utility.yul\":19818:19844   */\n      swap1\n      pop\n        /* \"#utility.yul\":19890:19899   */\n      dup2\n        /* \"#utility.yul\":19884:19888   */\n      dup2\n        /* \"#utility.yul\":19880:19900   */\n      sub\n        /* \"#utility.yul\":19876:19877   */\n      0x00\n        /* \"#utility.yul\":19865:19874   */\n      dup4\n        /* \"#utility.yul\":19861:19878   */\n      add\n        /* \"#utility.yul\":19854:19901   */\n      mstore\n        /* \"#utility.yul\":19918:20049   */\n      tag_694\n        /* \"#utility.yul\":20044:20048   */\n      dup2\n        /* \"#utility.yul\":19918:20049   */\n      tag_474\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":19910:20049   */\n      swap1\n      pop\n        /* \"#utility.yul\":19637:20056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20062:20242   */\n    tag_218:\n        /* \"#utility.yul\":20110:20187   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20107:20108   */\n      0x00\n        /* \"#utility.yul\":20100:20188   */\n      mstore\n        /* \"#utility.yul\":20207:20211   */\n      0x32\n        /* \"#utility.yul\":20204:20205   */\n      0x04\n        /* \"#utility.yul\":20197:20212   */\n      mstore\n        /* \"#utility.yul\":20231:20235   */\n      0x24\n        /* \"#utility.yul\":20228:20229   */\n      0x00\n        /* \"#utility.yul\":20221:20236   */\n      revert\n        /* \"#utility.yul\":20248:20472   */\n    tag_475:\n        /* \"#utility.yul\":20388:20422   */\n      0x50726573616c653a20546f6b656e206973206e6f7420612070617961626c6520\n        /* \"#utility.yul\":20384:20385   */\n      0x00\n        /* \"#utility.yul\":20376:20382   */\n      dup3\n        /* \"#utility.yul\":20372:20386   */\n      add\n        /* \"#utility.yul\":20365:20423   */\n      mstore\n        /* \"#utility.yul\":20457:20464   */\n      0x746f6b656e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20452:20454   */\n      0x20\n        /* \"#utility.yul\":20444:20450   */\n      dup3\n        /* \"#utility.yul\":20440:20455   */\n      add\n        /* \"#utility.yul\":20433:20465   */\n      mstore\n        /* \"#utility.yul\":20248:20472   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:20844   */\n    tag_476:\n        /* \"#utility.yul\":20620:20623   */\n      0x00\n        /* \"#utility.yul\":20641:20708   */\n      tag_698\n        /* \"#utility.yul\":20705:20707   */\n      0x25\n        /* \"#utility.yul\":20700:20703   */\n      dup4\n        /* \"#utility.yul\":20641:20708   */\n      tag_459\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":20634:20708   */\n      swap2\n      pop\n        /* \"#utility.yul\":20717:20810   */\n      tag_699\n        /* \"#utility.yul\":20806:20809   */\n      dup3\n        /* \"#utility.yul\":20717:20810   */\n      tag_475\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":20835:20837   */\n      0x40\n        /* \"#utility.yul\":20830:20833   */\n      dup3\n        /* \"#utility.yul\":20826:20838   */\n      add\n        /* \"#utility.yul\":20819:20838   */\n      swap1\n      pop\n        /* \"#utility.yul\":20478:20844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20850:21269   */\n    tag_221:\n        /* \"#utility.yul\":21016:21020   */\n      0x00\n        /* \"#utility.yul\":21054:21056   */\n      0x20\n        /* \"#utility.yul\":21043:21052   */\n      dup3\n        /* \"#utility.yul\":21039:21057   */\n      add\n        /* \"#utility.yul\":21031:21057   */\n      swap1\n      pop\n        /* \"#utility.yul\":21103:21112   */\n      dup2\n        /* \"#utility.yul\":21097:21101   */\n      dup2\n        /* \"#utility.yul\":21093:21113   */\n      sub\n        /* \"#utility.yul\":21089:21090   */\n      0x00\n        /* \"#utility.yul\":21078:21087   */\n      dup4\n        /* \"#utility.yul\":21074:21091   */\n      add\n        /* \"#utility.yul\":21067:21114   */\n      mstore\n        /* \"#utility.yul\":21131:21262   */\n      tag_701\n        /* \"#utility.yul\":21257:21261   */\n      dup2\n        /* \"#utility.yul\":21131:21262   */\n      tag_476\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21123:21262   */\n      swap1\n      pop\n        /* \"#utility.yul\":20850:21269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21275:21454   */\n    tag_477:\n        /* \"#utility.yul\":21415:21446   */\n      0x50726573616c653a2050726963652063616e6e6f74206265207a65726f000000\n        /* \"#utility.yul\":21411:21412   */\n      0x00\n        /* \"#utility.yul\":21403:21409   */\n      dup3\n        /* \"#utility.yul\":21399:21413   */\n      add\n        /* \"#utility.yul\":21392:21447   */\n      mstore\n        /* \"#utility.yul\":21275:21454   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21460:21826   */\n    tag_478:\n        /* \"#utility.yul\":21602:21605   */\n      0x00\n        /* \"#utility.yul\":21623:21690   */\n      tag_704\n        /* \"#utility.yul\":21687:21689   */\n      0x1d\n        /* \"#utility.yul\":21682:21685   */\n      dup4\n        /* \"#utility.yul\":21623:21690   */\n      tag_459\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":21616:21690   */\n      swap2\n      pop\n        /* \"#utility.yul\":21699:21792   */\n      tag_705\n        /* \"#utility.yul\":21788:21791   */\n      dup3\n        /* \"#utility.yul\":21699:21792   */\n      tag_477\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":21817:21819   */\n      0x20\n        /* \"#utility.yul\":21812:21815   */\n      dup3\n        /* \"#utility.yul\":21808:21820   */\n      add\n        /* \"#utility.yul\":21801:21820   */\n      swap1\n      pop\n        /* \"#utility.yul\":21460:21826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21832:22251   */\n    tag_226:\n        /* \"#utility.yul\":21998:22002   */\n      0x00\n        /* \"#utility.yul\":22036:22038   */\n      0x20\n        /* \"#utility.yul\":22025:22034   */\n      dup3\n        /* \"#utility.yul\":22021:22039   */\n      add\n        /* \"#utility.yul\":22013:22039   */\n      swap1\n      pop\n        /* \"#utility.yul\":22085:22094   */\n      dup2\n        /* \"#utility.yul\":22079:22083   */\n      dup2\n        /* \"#utility.yul\":22075:22095   */\n      sub\n        /* \"#utility.yul\":22071:22072   */\n      0x00\n        /* \"#utility.yul\":22060:22069   */\n      dup4\n        /* \"#utility.yul\":22056:22073   */\n      add\n        /* \"#utility.yul\":22049:22096   */\n      mstore\n        /* \"#utility.yul\":22113:22244   */\n      tag_707\n        /* \"#utility.yul\":22239:22243   */\n      dup2\n        /* \"#utility.yul\":22113:22244   */\n      tag_478\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22105:22244   */\n      swap1\n      pop\n        /* \"#utility.yul\":21832:22251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22257:22448   */\n    tag_232:\n        /* \"#utility.yul\":22297:22300   */\n      0x00\n        /* \"#utility.yul\":22316:22336   */\n      tag_709\n        /* \"#utility.yul\":22334:22335   */\n      dup3\n        /* \"#utility.yul\":22316:22336   */\n      tag_438\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":22311:22336   */\n      swap2\n      pop\n        /* \"#utility.yul\":22350:22370   */\n      tag_710\n        /* \"#utility.yul\":22368:22369   */\n      dup4\n        /* \"#utility.yul\":22350:22370   */\n      tag_438\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":22345:22370   */\n      swap3\n      pop\n        /* \"#utility.yul\":22393:22394   */\n      dup3\n        /* \"#utility.yul\":22390:22391   */\n      dup3\n        /* \"#utility.yul\":22386:22395   */\n      add\n        /* \"#utility.yul\":22379:22395   */\n      swap1\n      pop\n        /* \"#utility.yul\":22414:22417   */\n      dup1\n        /* \"#utility.yul\":22411:22412   */\n      dup3\n        /* \"#utility.yul\":22408:22418   */\n      gt\n        /* \"#utility.yul\":22405:22441   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":22421:22439   */\n      tag_712\n      tag_462\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":22405:22441   */\n    tag_711:\n        /* \"#utility.yul\":22257:22448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22454:22687   */\n    tag_260:\n        /* \"#utility.yul\":22493:22496   */\n      0x00\n        /* \"#utility.yul\":22516:22540   */\n      tag_714\n        /* \"#utility.yul\":22534:22539   */\n      dup3\n        /* \"#utility.yul\":22516:22540   */\n      tag_438\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":22507:22540   */\n      swap2\n      pop\n        /* \"#utility.yul\":22562:22628   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22555:22560   */\n      dup3\n        /* \"#utility.yul\":22552:22629   */\n      sub\n        /* \"#utility.yul\":22549:22652   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":22632:22650   */\n      tag_716\n      tag_462\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":22549:22652   */\n    tag_715:\n        /* \"#utility.yul\":22679:22680   */\n      0x01\n        /* \"#utility.yul\":22672:22677   */\n      dup3\n        /* \"#utility.yul\":22668:22681   */\n      add\n        /* \"#utility.yul\":22661:22681   */\n      swap1\n      pop\n        /* \"#utility.yul\":22454:22687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22693:22866   */\n    tag_479:\n        /* \"#utility.yul\":22833:22858   */\n      0x50726573616c653a206973206e6f7420656e61626c6564000000000000000000\n        /* \"#utility.yul\":22829:22830   */\n      0x00\n        /* \"#utility.yul\":22821:22827   */\n      dup3\n        /* \"#utility.yul\":22817:22831   */\n      add\n        /* \"#utility.yul\":22810:22859   */\n      mstore\n        /* \"#utility.yul\":22693:22866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22872:23238   */\n    tag_480:\n        /* \"#utility.yul\":23014:23017   */\n      0x00\n        /* \"#utility.yul\":23035:23102   */\n      tag_719\n        /* \"#utility.yul\":23099:23101   */\n      0x17\n        /* \"#utility.yul\":23094:23097   */\n      dup4\n        /* \"#utility.yul\":23035:23102   */\n      tag_459\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":23028:23102   */\n      swap2\n      pop\n        /* \"#utility.yul\":23111:23204   */\n      tag_720\n        /* \"#utility.yul\":23200:23203   */\n      dup3\n        /* \"#utility.yul\":23111:23204   */\n      tag_479\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":23229:23231   */\n      0x20\n        /* \"#utility.yul\":23224:23227   */\n      dup3\n        /* \"#utility.yul\":23220:23232   */\n      add\n        /* \"#utility.yul\":23213:23232   */\n      swap1\n      pop\n        /* \"#utility.yul\":22872:23238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23244:23663   */\n    tag_283:\n        /* \"#utility.yul\":23410:23414   */\n      0x00\n        /* \"#utility.yul\":23448:23450   */\n      0x20\n        /* \"#utility.yul\":23437:23446   */\n      dup3\n        /* \"#utility.yul\":23433:23451   */\n      add\n        /* \"#utility.yul\":23425:23451   */\n      swap1\n      pop\n        /* \"#utility.yul\":23497:23506   */\n      dup2\n        /* \"#utility.yul\":23491:23495   */\n      dup2\n        /* \"#utility.yul\":23487:23507   */\n      sub\n        /* \"#utility.yul\":23483:23484   */\n      0x00\n        /* \"#utility.yul\":23472:23481   */\n      dup4\n        /* \"#utility.yul\":23468:23485   */\n      add\n        /* \"#utility.yul\":23461:23508   */\n      mstore\n        /* \"#utility.yul\":23525:23656   */\n      tag_722\n        /* \"#utility.yul\":23651:23655   */\n      dup2\n        /* \"#utility.yul\":23525:23656   */\n      tag_480\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":23517:23656   */\n      swap1\n      pop\n        /* \"#utility.yul\":23244:23663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23669:23893   */\n    tag_481:\n        /* \"#utility.yul\":23809:23843   */\n      0x50726573616c653a204e6f7420656e6f75676820746f6b656e7320746f206265\n        /* \"#utility.yul\":23805:23806   */\n      0x00\n        /* \"#utility.yul\":23797:23803   */\n      dup3\n        /* \"#utility.yul\":23793:23807   */\n      add\n        /* \"#utility.yul\":23786:23844   */\n      mstore\n        /* \"#utility.yul\":23878:23885   */\n      0x2073616c65000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23873:23875   */\n      0x20\n        /* \"#utility.yul\":23865:23871   */\n      dup3\n        /* \"#utility.yul\":23861:23876   */\n      add\n        /* \"#utility.yul\":23854:23886   */\n      mstore\n        /* \"#utility.yul\":23669:23893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23899:24265   */\n    tag_482:\n        /* \"#utility.yul\":24041:24044   */\n      0x00\n        /* \"#utility.yul\":24062:24129   */\n      tag_725\n        /* \"#utility.yul\":24126:24128   */\n      0x25\n        /* \"#utility.yul\":24121:24124   */\n      dup4\n        /* \"#utility.yul\":24062:24129   */\n      tag_459\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":24055:24129   */\n      swap2\n      pop\n        /* \"#utility.yul\":24138:24231   */\n      tag_726\n        /* \"#utility.yul\":24227:24230   */\n      dup3\n        /* \"#utility.yul\":24138:24231   */\n      tag_481\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":24256:24258   */\n      0x40\n        /* \"#utility.yul\":24251:24254   */\n      dup3\n        /* \"#utility.yul\":24247:24259   */\n      add\n        /* \"#utility.yul\":24240:24259   */\n      swap1\n      pop\n        /* \"#utility.yul\":23899:24265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24271:24690   */\n    tag_292:\n        /* \"#utility.yul\":24437:24441   */\n      0x00\n        /* \"#utility.yul\":24475:24477   */\n      0x20\n        /* \"#utility.yul\":24464:24473   */\n      dup3\n        /* \"#utility.yul\":24460:24478   */\n      add\n        /* \"#utility.yul\":24452:24478   */\n      swap1\n      pop\n        /* \"#utility.yul\":24524:24533   */\n      dup2\n        /* \"#utility.yul\":24518:24522   */\n      dup2\n        /* \"#utility.yul\":24514:24534   */\n      sub\n        /* \"#utility.yul\":24510:24511   */\n      0x00\n        /* \"#utility.yul\":24499:24508   */\n      dup4\n        /* \"#utility.yul\":24495:24512   */\n      add\n        /* \"#utility.yul\":24488:24535   */\n      mstore\n        /* \"#utility.yul\":24552:24683   */\n      tag_728\n        /* \"#utility.yul\":24678:24682   */\n      dup2\n        /* \"#utility.yul\":24552:24683   */\n      tag_482\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":24544:24683   */\n      swap1\n      pop\n        /* \"#utility.yul\":24271:24690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24696:24921   */\n    tag_483:\n        /* \"#utility.yul\":24836:24870   */\n      0x50726573616c653a20416d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":24832:24833   */\n      0x00\n        /* \"#utility.yul\":24824:24830   */\n      dup3\n        /* \"#utility.yul\":24820:24834   */\n      add\n        /* \"#utility.yul\":24813:24871   */\n      mstore\n        /* \"#utility.yul\":24905:24913   */\n      0x7468616e20300000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24900:24902   */\n      0x20\n        /* \"#utility.yul\":24892:24898   */\n      dup3\n        /* \"#utility.yul\":24888:24903   */\n      add\n        /* \"#utility.yul\":24881:24914   */\n      mstore\n        /* \"#utility.yul\":24696:24921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24927:25293   */\n    tag_484:\n        /* \"#utility.yul\":25069:25072   */\n      0x00\n        /* \"#utility.yul\":25090:25157   */\n      tag_731\n        /* \"#utility.yul\":25154:25156   */\n      0x26\n        /* \"#utility.yul\":25149:25152   */\n      dup4\n        /* \"#utility.yul\":25090:25157   */\n      tag_459\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":25083:25157   */\n      swap2\n      pop\n        /* \"#utility.yul\":25166:25259   */\n      tag_732\n        /* \"#utility.yul\":25255:25258   */\n      dup3\n        /* \"#utility.yul\":25166:25259   */\n      tag_483\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":25284:25286   */\n      0x40\n        /* \"#utility.yul\":25279:25282   */\n      dup3\n        /* \"#utility.yul\":25275:25287   */\n      add\n        /* \"#utility.yul\":25268:25287   */\n      swap1\n      pop\n        /* \"#utility.yul\":24927:25293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25299:25718   */\n    tag_296:\n        /* \"#utility.yul\":25465:25469   */\n      0x00\n        /* \"#utility.yul\":25503:25505   */\n      0x20\n        /* \"#utility.yul\":25492:25501   */\n      dup3\n        /* \"#utility.yul\":25488:25506   */\n      add\n        /* \"#utility.yul\":25480:25506   */\n      swap1\n      pop\n        /* \"#utility.yul\":25552:25561   */\n      dup2\n        /* \"#utility.yul\":25546:25550   */\n      dup2\n        /* \"#utility.yul\":25542:25562   */\n      sub\n        /* \"#utility.yul\":25538:25539   */\n      0x00\n        /* \"#utility.yul\":25527:25536   */\n      dup4\n        /* \"#utility.yul\":25523:25540   */\n      add\n        /* \"#utility.yul\":25516:25563   */\n      mstore\n        /* \"#utility.yul\":25580:25711   */\n      tag_734\n        /* \"#utility.yul\":25706:25710   */\n      dup2\n        /* \"#utility.yul\":25580:25711   */\n      tag_484\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":25572:25711   */\n      swap1\n      pop\n        /* \"#utility.yul\":25299:25718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25724:25918   */\n    tag_320:\n        /* \"#utility.yul\":25764:25768   */\n      0x00\n        /* \"#utility.yul\":25784:25804   */\n      tag_736\n        /* \"#utility.yul\":25802:25803   */\n      dup3\n        /* \"#utility.yul\":25784:25804   */\n      tag_438\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":25779:25804   */\n      swap2\n      pop\n        /* \"#utility.yul\":25818:25838   */\n      tag_737\n        /* \"#utility.yul\":25836:25837   */\n      dup4\n        /* \"#utility.yul\":25818:25838   */\n      tag_438\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":25813:25838   */\n      swap3\n      pop\n        /* \"#utility.yul\":25862:25863   */\n      dup3\n        /* \"#utility.yul\":25859:25860   */\n      dup3\n        /* \"#utility.yul\":25855:25864   */\n      sub\n        /* \"#utility.yul\":25847:25864   */\n      swap1\n      pop\n        /* \"#utility.yul\":25886:25887   */\n      dup2\n        /* \"#utility.yul\":25880:25884   */\n      dup2\n        /* \"#utility.yul\":25877:25888   */\n      gt\n        /* \"#utility.yul\":25874:25911   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":25891:25909   */\n      tag_739\n      tag_462\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":25874:25911   */\n    tag_738:\n        /* \"#utility.yul\":25724:25918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25924:26067   */\n    tag_485:\n        /* \"#utility.yul\":25981:25986   */\n      0x00\n        /* \"#utility.yul\":26012:26018   */\n      dup2\n        /* \"#utility.yul\":26006:26019   */\n      mload\n        /* \"#utility.yul\":25997:26019   */\n      swap1\n      pop\n        /* \"#utility.yul\":26028:26061   */\n      tag_741\n        /* \"#utility.yul\":26055:26060   */\n      dup2\n        /* \"#utility.yul\":26028:26061   */\n      tag_439\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":25924:26067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26073:26424   */\n    tag_336:\n        /* \"#utility.yul\":26143:26149   */\n      0x00\n        /* \"#utility.yul\":26192:26194   */\n      0x20\n        /* \"#utility.yul\":26180:26189   */\n      dup3\n        /* \"#utility.yul\":26171:26178   */\n      dup5\n        /* \"#utility.yul\":26167:26190   */\n      sub\n        /* \"#utility.yul\":26163:26195   */\n      slt\n        /* \"#utility.yul\":26160:26279   */\n      iszero\n      tag_743\n      jumpi\n        /* \"#utility.yul\":26198:26277   */\n      tag_744\n      tag_432\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":26160:26279   */\n    tag_743:\n        /* \"#utility.yul\":26318:26319   */\n      0x00\n        /* \"#utility.yul\":26343:26407   */\n      tag_745\n        /* \"#utility.yul\":26399:26406   */\n      dup5\n        /* \"#utility.yul\":26390:26396   */\n      dup3\n        /* \"#utility.yul\":26379:26388   */\n      dup6\n        /* \"#utility.yul\":26375:26397   */\n      add\n        /* \"#utility.yul\":26343:26407   */\n      tag_485\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":26333:26407   */\n      swap2\n      pop\n        /* \"#utility.yul\":26289:26417   */\n      pop\n        /* \"#utility.yul\":26073:26424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26430:26762   */\n    tag_338:\n        /* \"#utility.yul\":26551:26555   */\n      0x00\n        /* \"#utility.yul\":26589:26591   */\n      0x40\n        /* \"#utility.yul\":26578:26587   */\n      dup3\n        /* \"#utility.yul\":26574:26592   */\n      add\n        /* \"#utility.yul\":26566:26592   */\n      swap1\n      pop\n        /* \"#utility.yul\":26602:26673   */\n      tag_747\n        /* \"#utility.yul\":26670:26671   */\n      0x00\n        /* \"#utility.yul\":26659:26668   */\n      dup4\n        /* \"#utility.yul\":26655:26672   */\n      add\n        /* \"#utility.yul\":26646:26652   */\n      dup6\n        /* \"#utility.yul\":26602:26673   */\n      tag_458\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":26683:26755   */\n      tag_748\n        /* \"#utility.yul\":26751:26753   */\n      0x20\n        /* \"#utility.yul\":26740:26749   */\n      dup4\n        /* \"#utility.yul\":26736:26754   */\n      add\n        /* \"#utility.yul\":26727:26733   */\n      dup5\n        /* \"#utility.yul\":26683:26755   */\n      tag_441\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":26430:26762   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26768:26905   */\n    tag_486:\n        /* \"#utility.yul\":26822:26827   */\n      0x00\n        /* \"#utility.yul\":26853:26859   */\n      dup2\n        /* \"#utility.yul\":26847:26860   */\n      mload\n        /* \"#utility.yul\":26838:26860   */\n      swap1\n      pop\n        /* \"#utility.yul\":26869:26899   */\n      tag_750\n        /* \"#utility.yul\":26893:26898   */\n      dup2\n        /* \"#utility.yul\":26869:26899   */\n      tag_443\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":26768:26905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26911:27256   */\n    tag_342:\n        /* \"#utility.yul\":26978:26984   */\n      0x00\n        /* \"#utility.yul\":27027:27029   */\n      0x20\n        /* \"#utility.yul\":27015:27024   */\n      dup3\n        /* \"#utility.yul\":27006:27013   */\n      dup5\n        /* \"#utility.yul\":27002:27025   */\n      sub\n        /* \"#utility.yul\":26998:27030   */\n      slt\n        /* \"#utility.yul\":26995:27114   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":27033:27112   */\n      tag_753\n      tag_432\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":26995:27114   */\n    tag_752:\n        /* \"#utility.yul\":27153:27154   */\n      0x00\n        /* \"#utility.yul\":27178:27239   */\n      tag_754\n        /* \"#utility.yul\":27231:27238   */\n      dup5\n        /* \"#utility.yul\":27222:27228   */\n      dup3\n        /* \"#utility.yul\":27211:27220   */\n      dup6\n        /* \"#utility.yul\":27207:27229   */\n      add\n        /* \"#utility.yul\":27178:27239   */\n      tag_486\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":27168:27239   */\n      swap2\n      pop\n        /* \"#utility.yul\":27124:27249   */\n      pop\n        /* \"#utility.yul\":26911:27256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27262:27440   */\n    tag_487:\n        /* \"#utility.yul\":27402:27432   */\n      0x50726573616c653a20526174652063616e6e6f74206265207a65726f00000000\n        /* \"#utility.yul\":27398:27399   */\n      0x00\n        /* \"#utility.yul\":27390:27396   */\n      dup3\n        /* \"#utility.yul\":27386:27400   */\n      add\n        /* \"#utility.yul\":27379:27433   */\n      mstore\n        /* \"#utility.yul\":27262:27440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27446:27812   */\n    tag_488:\n        /* \"#utility.yul\":27588:27591   */\n      0x00\n        /* \"#utility.yul\":27609:27676   */\n      tag_757\n        /* \"#utility.yul\":27673:27675   */\n      0x1c\n        /* \"#utility.yul\":27668:27671   */\n      dup4\n        /* \"#utility.yul\":27609:27676   */\n      tag_459\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":27602:27676   */\n      swap2\n      pop\n        /* \"#utility.yul\":27685:27778   */\n      tag_758\n        /* \"#utility.yul\":27774:27777   */\n      dup3\n        /* \"#utility.yul\":27685:27778   */\n      tag_487\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":27803:27805   */\n      0x20\n        /* \"#utility.yul\":27798:27801   */\n      dup3\n        /* \"#utility.yul\":27794:27806   */\n      add\n        /* \"#utility.yul\":27787:27806   */\n      swap1\n      pop\n        /* \"#utility.yul\":27446:27812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27818:28237   */\n    tag_348:\n        /* \"#utility.yul\":27984:27988   */\n      0x00\n        /* \"#utility.yul\":28022:28024   */\n      0x20\n        /* \"#utility.yul\":28011:28020   */\n      dup3\n        /* \"#utility.yul\":28007:28025   */\n      add\n        /* \"#utility.yul\":27999:28025   */\n      swap1\n      pop\n        /* \"#utility.yul\":28071:28080   */\n      dup2\n        /* \"#utility.yul\":28065:28069   */\n      dup2\n        /* \"#utility.yul\":28061:28081   */\n      sub\n        /* \"#utility.yul\":28057:28058   */\n      0x00\n        /* \"#utility.yul\":28046:28055   */\n      dup4\n        /* \"#utility.yul\":28042:28059   */\n      add\n        /* \"#utility.yul\":28035:28082   */\n      mstore\n        /* \"#utility.yul\":28099:28230   */\n      tag_760\n        /* \"#utility.yul\":28225:28229   */\n      dup2\n        /* \"#utility.yul\":28099:28230   */\n      tag_488\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":28091:28230   */\n      swap1\n      pop\n        /* \"#utility.yul\":27818:28237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28243:28329   */\n    tag_489:\n        /* \"#utility.yul\":28278:28285   */\n      0x00\n        /* \"#utility.yul\":28318:28322   */\n      0xff\n        /* \"#utility.yul\":28311:28316   */\n      dup3\n        /* \"#utility.yul\":28307:28323   */\n      and\n        /* \"#utility.yul\":28296:28323   */\n      swap1\n      pop\n        /* \"#utility.yul\":28243:28329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28335:28453   */\n    tag_490:\n        /* \"#utility.yul\":28406:28428   */\n      tag_763\n        /* \"#utility.yul\":28422:28427   */\n      dup2\n        /* \"#utility.yul\":28406:28428   */\n      tag_489\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":28399:28404   */\n      dup2\n        /* \"#utility.yul\":28396:28429   */\n      eq\n        /* \"#utility.yul\":28386:28447   */\n      tag_764\n      jumpi\n        /* \"#utility.yul\":28443:28444   */\n      0x00\n        /* \"#utility.yul\":28440:28441   */\n      dup1\n        /* \"#utility.yul\":28433:28445   */\n      revert\n        /* \"#utility.yul\":28386:28447   */\n    tag_764:\n        /* \"#utility.yul\":28335:28453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28459:28598   */\n    tag_491:\n        /* \"#utility.yul\":28514:28519   */\n      0x00\n        /* \"#utility.yul\":28545:28551   */\n      dup2\n        /* \"#utility.yul\":28539:28552   */\n      mload\n        /* \"#utility.yul\":28530:28552   */\n      swap1\n      pop\n        /* \"#utility.yul\":28561:28592   */\n      tag_766\n        /* \"#utility.yul\":28586:28591   */\n      dup2\n        /* \"#utility.yul\":28561:28592   */\n      tag_490\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":28459:28598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28604:28951   */\n    tag_352:\n        /* \"#utility.yul\":28672:28678   */\n      0x00\n        /* \"#utility.yul\":28721:28723   */\n      0x20\n        /* \"#utility.yul\":28709:28718   */\n      dup3\n        /* \"#utility.yul\":28700:28707   */\n      dup5\n        /* \"#utility.yul\":28696:28719   */\n      sub\n        /* \"#utility.yul\":28692:28724   */\n      slt\n        /* \"#utility.yul\":28689:28808   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":28727:28806   */\n      tag_769\n      tag_432\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":28689:28808   */\n    tag_768:\n        /* \"#utility.yul\":28847:28848   */\n      0x00\n        /* \"#utility.yul\":28872:28934   */\n      tag_770\n        /* \"#utility.yul\":28926:28933   */\n      dup5\n        /* \"#utility.yul\":28917:28923   */\n      dup3\n        /* \"#utility.yul\":28906:28915   */\n      dup6\n        /* \"#utility.yul\":28902:28924   */\n      add\n        /* \"#utility.yul\":28872:28934   */\n      tag_491\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":28862:28934   */\n      swap2\n      pop\n        /* \"#utility.yul\":28818:28944   */\n      pop\n        /* \"#utility.yul\":28604:28951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28957:29399   */\n    tag_418:\n        /* \"#utility.yul\":29106:29110   */\n      0x00\n        /* \"#utility.yul\":29144:29146   */\n      0x60\n        /* \"#utility.yul\":29133:29142   */\n      dup3\n        /* \"#utility.yul\":29129:29147   */\n      add\n        /* \"#utility.yul\":29121:29147   */\n      swap1\n      pop\n        /* \"#utility.yul\":29157:29228   */\n      tag_772\n        /* \"#utility.yul\":29225:29226   */\n      0x00\n        /* \"#utility.yul\":29214:29223   */\n      dup4\n        /* \"#utility.yul\":29210:29227   */\n      add\n        /* \"#utility.yul\":29201:29207   */\n      dup7\n        /* \"#utility.yul\":29157:29228   */\n      tag_458\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":29238:29310   */\n      tag_773\n        /* \"#utility.yul\":29306:29308   */\n      0x20\n        /* \"#utility.yul\":29295:29304   */\n      dup4\n        /* \"#utility.yul\":29291:29309   */\n      add\n        /* \"#utility.yul\":29282:29288   */\n      dup6\n        /* \"#utility.yul\":29238:29310   */\n      tag_458\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":29320:29392   */\n      tag_774\n        /* \"#utility.yul\":29388:29390   */\n      0x40\n        /* \"#utility.yul\":29377:29386   */\n      dup4\n        /* \"#utility.yul\":29373:29391   */\n      add\n        /* \"#utility.yul\":29364:29370   */\n      dup5\n        /* \"#utility.yul\":29320:29392   */\n      tag_441\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":28957:29399   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ee6780f313f9827010f0e5c7dd537092c40c9f90b22190734ad684b80db7c54764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_934": {
									"entryPoint": null,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 182,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000085575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007c9190620001ba565b60405180910390fd5b6200009681620000b660201b60201c565b505f60065f6101000a81548160ff021916908315150217905550620001d5565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001a28262000177565b9050919050565b620001b48162000196565b82525050565b5f602082019050620001cf5f830184620001a9565b92915050565b61301b80620001e35f395ff3fe6080604052600436106101d7575f3560e01c8063715018a611610101578063e36b0b3711610094578063f3fef3a311610063578063f3fef3a31461060d578063f4739ee314610635578063f9020e3314610675578063fa09e6301461069f576101d7565b8063e36b0b3714610569578063e985e3671461057f578063f2aa8218146105a9578063f2fde38b146105e5576101d7565b80639ae2fd34116100d05780639ae2fd34146104d9578063a01bd50c146104ef578063a282637314610517578063ace1741c1461053f576101d7565b8063715018a61461042157806380655eef14610437578063828b7953146104735780638da5cb5b146104af576101d7565b806333e364cb1161017957806363b201171161014857806363b2011714610389578063641579a6146103b357806368f8fc10146103db5780636bcedf9c146103f7576101d7565b806333e364cb1461030d5780633c00a36c146103235780635413c1c81461034b5780635e0be60714610373576101d7565b8063204120bc116101b5578063204120bc1461025757806329d429a8146102935780632c4e722e146102bb5780633115329e146102e5576101d7565b8063115ece4c146101db57806318a24b5b146102175780631b3ed7221461022d575b5f80fd5b3480156101e6575f80fd5b5061020160048036038101906101fc91906120f1565b6106c7565b60405161020e919061213e565b60405180910390f35b348015610222575f80fd5b5061022b61082e565b005b348015610238575f80fd5b5061024161090e565b60405161024e919061213e565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612157565b610914565b60405161028a919061213e565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b491906121b7565b610929565b005b3480156102c6575f80fd5b506102cf610a18565b6040516102dc919061213e565b60405180910390f35b3480156102f0575f80fd5b5061030b60048036038101906103069190612405565b610a1e565b005b348015610318575f80fd5b50610321610c1a565b005b34801561032e575f80fd5b506103496004803603810190610344919061248d565b610c3e565b005b348015610356575f80fd5b50610371600480360381019061036c91906124b8565b610c8d565b005b34801561037e575f80fd5b50610387610e3d565b005b348015610394575f80fd5b5061039d610f02565b6040516103aa919061213e565b60405180910390f35b3480156103be575f80fd5b506103d960048036038101906103d4919061248d565b610f08565b005b6103f560048036038101906103f091906120f1565b610f22565b005b348015610402575f80fd5b5061040b611257565b604051610418919061213e565b60405180910390f35b34801561042c575f80fd5b5061043561125d565b005b348015610442575f80fd5b5061045d60048036038101906104589190612157565b611270565b60405161046a919061253d565b60405180910390f35b34801561047e575f80fd5b5061049960048036038101906104949190612157565b61128d565b6040516104a6919061213e565b60405180910390f35b3480156104ba575f80fd5b506104c36113ac565b6040516104d09190612565565b60405180910390f35b3480156104e4575f80fd5b506104ed6113d3565b005b3480156104fa575f80fd5b506105156004803603810190610510919061257e565b611572565b005b348015610522575f80fd5b5061053d6004803603810190610538919061248d565b611718565b005b34801561054a575f80fd5b50610553611789565b604051610560919061213e565b60405180910390f35b348015610574575f80fd5b5061057d61178f565b005b34801561058a575f80fd5b506105936117b2565b6040516105a09190612565565b60405180910390f35b3480156105b4575f80fd5b506105cf60048036038101906105ca919061248d565b6117d7565b6040516105dc9190612565565b60405180910390f35b3480156105f0575f80fd5b5061060b60048036038101906106069190612157565b611812565b005b348015610618575f80fd5b50610633600480360381019061062e91906120f1565b611896565b005b348015610640575f80fd5b5061065b60048036038101906106569190612157565b6118cd565b60405161066c9594939291906125f5565b60405180910390f35b348015610680575f80fd5b50610689611918565b604051610696919061253d565b60405180910390f35b3480156106aa575f80fd5b506106c560048036038101906106c09190612157565b61192a565b005b5f805f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146107fa576001151560095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615151461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906126a0565b60405180910390fd5b5f600b5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080600454600a6107dd919061281a565b856107e89190612864565b6107f291906128d2565b915050610824565b600254600454600a61080c919061281a565b846108179190612864565b61082191906128d2565b90505b8091505092915050565b5f151560065f9054906101000a900460ff16151514610882576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108799061294c565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fa906129b4565b60405180910390fd5b61090c336119bb565b565b60015481565b600b602052805f5260405f205f915090505481565b610931611b7d565b80151560095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515036109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790612a42565b60405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b60025481565b610a26611b7d565b8151835114610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190612ad0565b60405180910390fd5b5f8114610a7957806002819055505b5f5b8351811015610c14576001151560095f868481518110610a9e57610a9d612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2590612b8b565b60405180910390fd5b5f838281518110610b4257610b41612aee565b5b602002602001015103610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190612bf3565b60405180910390fd5b828181518110610b9d57610b9c612aee565b5b6020026020010151600b5f868481518110610bbb57610bba612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600181610c0d9190612c11565b9050610a7b565b50505050565b610c22611b7d565b600160065f6101000a81548160ff021916908315150217905550565b610c46611b7d565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c89573d5f803e3d5ffd5b5050565b610c95611b7d565b8051825114610cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd090612ad0565b60405180910390fd5b5f5b8251811015610e38575f828281518110610cf857610cf7612aee565b5b602002602001015103610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3790612bf3565b60405180910390fd5b600160095f858481518110610d5857610d57612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550818181518110610dc257610dc1612aee565b5b6020026020010151600b5f858481518110610de057610ddf612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508080610e3090612c44565b915050610cdb565b505050565b610e45611b7d565b5f151560065f9054906101000a900460ff16151514610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e909061294c565b60405180910390fd5b5f5b600780549050811015610eff57610eec60078281548110610ebf57610ebe612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119bb565b8080610ef790612c44565b915050610e9b565b50565b60085481565b610f10611b7d565b610f18611c04565b8060018190555050565b6001151560065f9054906101000a900460ff16151514610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90612cd5565b60405180910390fd5b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fba57610fb55f346106c7565b610fc5565b610fc483836106c7565b5b905060055481600854610fd89190612c11565b10611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100f90612d63565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146110c6575f821161108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490612df1565b60405180910390fd5b6110c1336110996113ac565b848673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b611112565b6110ce6113ac565b73ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015611110573d5f803e3d5ffd5b505b8060085f8282546111239190612c11565b925050819055505f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806001015f9054906101000a900460ff1661120057600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001816001015f6101000a81548160ff02191690831515021790555061122f565b5f815f0154111561122e576112143361128d565b816002015f8282546112269190612c11565b925050819055505b5b81815f015f8282546112419190612c11565b9250508190555042816003018190555050505050565b60055481565b611265611b7d565b61126e5f611e71565b565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154036112dc575f90506113a7565b5f62015180600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301544261132d9190612e0f565b61133791906128d2565b90505f61271082600154600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015461138b9190612864565b6113959190612864565b61139f91906128d2565b905080925050505b919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113db611b7d565b5f151560065f9054906101000a900460ff1615151461142f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114269061294c565b60405180910390fd5b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161148a9190612565565b602060405180830381865afa1580156114a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c99190612e56565b905060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611527929190612e81565b6020604051808303815f875af1158015611543573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115679190612ebc565b505f60058190555050565b61157a611b7d565b5f83036115bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b390612f31565b60405180910390fd5b826002819055508460035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548160ff02191690831515021790555060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116aa9190612f85565b60ff166004819055508360058190555081600181905550611711333060055460035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b5050505050565b611720611b7d565b8060055f8282546117319190612c11565b9250508190555061178633308360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b50565b60045481565b611797611b7d565b5f60065f6101000a81548160ff021916908315150217905550565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600781815481106117e6575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61181a611b7d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361188a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118819190612565565b60405180910390fd5b61189381611e71565b50565b61189e611b7d565b6118c933828473ffffffffffffffffffffffffffffffffffffffff16611f329092919063ffffffff16565b5050565b600a602052805f5260405f205f91509050805f015490806001015f9054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154905085565b60065f9054906101000a900460ff1681565b611932611b7d565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161196c9190612565565b602060405180830381865afa158015611987573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119ab9190612e56565b90506119b78282611896565b5050565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611b7a575f611a0c8261128d565b600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154611a979190612c11565b611aa19190612c11565b90505f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550611b78828260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f329092919063ffffffff16565b505b50565b611b85611fb1565b73ffffffffffffffffffffffffffffffffffffffff16611ba36113ac565b73ffffffffffffffffffffffffffffffffffffffff1614611c0257611bc6611fb1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bf99190612565565b60405180910390fd5b565b5f5b600780549050811015611dec575f600a5f60078481548110611c2b57611c2a612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611dd957611cd960078281548110611cac57611cab612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661128d565b600a5f60078481548110611cf057611cef612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002018190555042600a5f60078481548110611d7057611d6f612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055505b8080611de490612c44565b915050611c06565b50565b611e6b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611e2493929190612fb0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fb8565b50505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fac838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f65929190612e81565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fb8565b505050565b5f33905090565b5f8060205f8451602086015f885af180611fd7576040513d5f823e3d81fd5b3d92505f519150505f8214611ff057600181141561200b565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561204d57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016120449190612565565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61208d82612064565b9050919050565b61209d81612083565b81146120a7575f80fd5b50565b5f813590506120b881612094565b92915050565b5f819050919050565b6120d0816120be565b81146120da575f80fd5b50565b5f813590506120eb816120c7565b92915050565b5f80604083850312156121075761210661205c565b5b5f612114858286016120aa565b9250506020612125858286016120dd565b9150509250929050565b612138816120be565b82525050565b5f6020820190506121515f83018461212f565b92915050565b5f6020828403121561216c5761216b61205c565b5b5f612179848285016120aa565b91505092915050565b5f8115159050919050565b61219681612182565b81146121a0575f80fd5b50565b5f813590506121b18161218d565b92915050565b5f80604083850312156121cd576121cc61205c565b5b5f6121da858286016120aa565b92505060206121eb858286016121a3565b9150509250929050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61223f826121f9565b810181811067ffffffffffffffff8211171561225e5761225d612209565b5b80604052505050565b5f612270612053565b905061227c8282612236565b919050565b5f67ffffffffffffffff82111561229b5761229a612209565b5b602082029050602081019050919050565b5f80fd5b5f6122c26122bd84612281565b612267565b905080838252602082019050602084028301858111156122e5576122e46122ac565b5b835b8181101561230e57806122fa88826120aa565b8452602084019350506020810190506122e7565b5050509392505050565b5f82601f83011261232c5761232b6121f5565b5b813561233c8482602086016122b0565b91505092915050565b5f67ffffffffffffffff82111561235f5761235e612209565b5b602082029050602081019050919050565b5f61238261237d84612345565b612267565b905080838252602082019050602084028301858111156123a5576123a46122ac565b5b835b818110156123ce57806123ba88826120dd565b8452602084019350506020810190506123a7565b5050509392505050565b5f82601f8301126123ec576123eb6121f5565b5b81356123fc848260208601612370565b91505092915050565b5f805f6060848603121561241c5761241b61205c565b5b5f84013567ffffffffffffffff81111561243957612438612060565b5b61244586828701612318565b935050602084013567ffffffffffffffff81111561246657612465612060565b5b612472868287016123d8565b9250506040612483868287016120dd565b9150509250925092565b5f602082840312156124a2576124a161205c565b5b5f6124af848285016120dd565b91505092915050565b5f80604083850312156124ce576124cd61205c565b5b5f83013567ffffffffffffffff8111156124eb576124ea612060565b5b6124f785828601612318565b925050602083013567ffffffffffffffff81111561251857612517612060565b5b612524858286016123d8565b9150509250929050565b61253781612182565b82525050565b5f6020820190506125505f83018461252e565b92915050565b61255f81612083565b82525050565b5f6020820190506125785f830184612556565b92915050565b5f805f805f60a086880312156125975761259661205c565b5b5f6125a4888289016120aa565b95505060206125b5888289016120dd565b94505060406125c6888289016120dd565b93505060606125d7888289016120dd565b92505060806125e8888289016121a3565b9150509295509295909350565b5f60a0820190506126085f83018861212f565b612615602083018761252e565b612622604083018661252e565b61262f606083018561212f565b61263c608083018461212f565b9695505050505050565b5f82825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f7420616c6c6f7765640000000000005f82015250565b5f61268a601a83612646565b915061269582612656565b602082019050919050565b5f6020820190508181035f8301526126b78161267e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156127405780860481111561271c5761271b6126be565b5b600185161561272b5780820291505b8081029050612739856126eb565b9450612700565b94509492505050565b5f826127585760019050612813565b81612765575f9050612813565b816001811461277b5760028114612785576127b4565b6001915050612813565b60ff841115612797576127966126be565b5b8360020a9150848211156127ae576127ad6126be565b5b50612813565b5060208310610133831016604e8410600b84101617156127e95782820a9050838111156127e4576127e36126be565b5b612813565b6127f684848460016126f7565b9250905081840481111561280d5761280c6126be565b5b81810290505b9392505050565b5f612824826120be565b915061282f836120be565b925061285c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612749565b905092915050565b5f61286e826120be565b9150612879836120be565b9250828202612887816120be565b9150828204841483151761289e5761289d6126be565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6128dc826120be565b91506128e7836120be565b9250826128f7576128f66128a5565b5b828204905092915050565b7f50726573616c653a206973206e6f742073746f707065640000000000000000005f82015250565b5f612936601783612646565b915061294182612902565b602082019050919050565b5f6020820190508181035f8301526129638161292a565b9050919050565b7f50726573616c653a204e6f20746f6b656e7320746f20636c61696d00000000005f82015250565b5f61299e601b83612646565b91506129a98261296a565b602082019050919050565b5f6020820190508181035f8301526129cb81612992565b9050919050565b7f50726573616c653a2053746174757320697320616c72656164792073657420745f8201527f6f2074686520646573697265642076616c756500000000000000000000000000602082015250565b5f612a2c603383612646565b9150612a37826129d2565b604082019050919050565b5f6020820190508181035f830152612a5981612a20565b9050919050565b7f50726573616c653a20746f6b656e7320262070726963657320617272617973205f8201527f6c656e677468206d69736d617463680000000000000000000000000000000000602082015250565b5f612aba602f83612646565b9150612ac582612a60565b604082019050919050565b5f6020820190508181035f830152612ae781612aae565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f50726573616c653a20546f6b656e206973206e6f7420612070617961626c65205f8201527f746f6b656e000000000000000000000000000000000000000000000000000000602082015250565b5f612b75602583612646565b9150612b8082612b1b565b604082019050919050565b5f6020820190508181035f830152612ba281612b69565b9050919050565b7f50726573616c653a2050726963652063616e6e6f74206265207a65726f0000005f82015250565b5f612bdd601d83612646565b9150612be882612ba9565b602082019050919050565b5f6020820190508181035f830152612c0a81612bd1565b9050919050565b5f612c1b826120be565b9150612c26836120be565b9250828201905080821115612c3e57612c3d6126be565b5b92915050565b5f612c4e826120be565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c8057612c7f6126be565b5b600182019050919050565b7f50726573616c653a206973206e6f7420656e61626c65640000000000000000005f82015250565b5f612cbf601783612646565b9150612cca82612c8b565b602082019050919050565b5f6020820190508181035f830152612cec81612cb3565b9050919050565b7f50726573616c653a204e6f7420656e6f75676820746f6b656e7320746f2062655f8201527f2073616c65000000000000000000000000000000000000000000000000000000602082015250565b5f612d4d602583612646565b9150612d5882612cf3565b604082019050919050565b5f6020820190508181035f830152612d7a81612d41565b9050919050565b7f50726573616c653a20416d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f612ddb602683612646565b9150612de682612d81565b604082019050919050565b5f6020820190508181035f830152612e0881612dcf565b9050919050565b5f612e19826120be565b9150612e24836120be565b9250828203905081811115612e3c57612e3b6126be565b5b92915050565b5f81519050612e50816120c7565b92915050565b5f60208284031215612e6b57612e6a61205c565b5b5f612e7884828501612e42565b91505092915050565b5f604082019050612e945f830185612556565b612ea1602083018461212f565b9392505050565b5f81519050612eb68161218d565b92915050565b5f60208284031215612ed157612ed061205c565b5b5f612ede84828501612ea8565b91505092915050565b7f50726573616c653a20526174652063616e6e6f74206265207a65726f000000005f82015250565b5f612f1b601c83612646565b9150612f2682612ee7565b602082019050919050565b5f6020820190508181035f830152612f4881612f0f565b9050919050565b5f60ff82169050919050565b612f6481612f4f565b8114612f6e575f80fd5b50565b5f81519050612f7f81612f5b565b92915050565b5f60208284031215612f9a57612f9961205c565b5b5f612fa784828501612f71565b91505092915050565b5f606082019050612fc35f830186612556565b612fd06020830185612556565b612fdd604083018461212f565b94935050505056fea2646970667358221220ee6780f313f9827010f0e5c7dd537092c40c9f90b22190734ad684b80db7c54764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1A2 DUP3 PUSH3 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B4 DUP2 PUSH3 0x196 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CF PUSH0 DUP4 ADD DUP5 PUSH3 0x1A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x301B DUP1 PUSH3 0x1E3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xE36B0B37 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xF3FEF3A3 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xF4739EE3 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0xF9020E33 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x69F JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF2AA8218 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E5 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x9AE2FD34 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9AE2FD34 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xA01BD50C EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xA2826373 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xACE1741C EQ PUSH2 0x53F JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x80655EEF EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x828B7953 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x33E364CB GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x641579A6 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x3F7 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x33E364CB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5413C1C8 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x5E0BE607 EQ PUSH2 0x373 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x204120BC GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x29D429A8 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x3115329E EQ PUSH2 0x2E5 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x18A24B5B EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x22D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0xC1A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0xE3D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0xF08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x435 PUSH2 0x125D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0x13D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x1572 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x178F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x593 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x633 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x1896 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x689 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7FA JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST DUP6 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x824 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST DUP5 PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90C CALLER PUSH2 0x19BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x931 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA26 PUSH2 0x1B7D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 EQ PUSH2 0xA79 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x1B7D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC95 PUSH2 0x1B7D JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD0 SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xE38 JUMPI PUSH0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCF8 JUMPI PUSH2 0xCF7 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDE0 JUMPI PUSH2 0xDDF PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xE30 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xEFF JUMPI PUSH2 0xEEC PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19BB JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF7 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x1C04 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBA JUMPI PUSH2 0xFB5 PUSH0 CALLVALUE PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC4 DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST LT PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C6 JUMPI PUSH0 DUP3 GT PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C1 CALLER PUSH2 0x1099 PUSH2 0x13AC JUMP JUMPDEST DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1110 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1123 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1200 JUMPI PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x122F JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x1214 CALLER PUSH2 0x128D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x126E PUSH0 PUSH2 0x1E71 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x12DC JUMPI PUSH0 SWAP1 POP PUSH2 0x13A7 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH1 0x1 SLOAD PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x1395 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13DB PUSH2 0x1B7D JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x142F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148A SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C9 SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1527 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x157A PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP4 SUB PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B3 SWAP1 PUSH2 0x2F31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1711 CALLER ADDRESS PUSH1 0x5 SLOAD PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1720 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1786 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x181A PUSH2 0x1B7D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1893 DUP2 PUSH2 0x1E71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x189E PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x18C9 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F32 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1932 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1987 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AB SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B7 DUP3 DUP3 PUSH2 0x1896 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B7A JUMPI PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x128D JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B78 DUP3 DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F32 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B85 PUSH2 0x1FB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA3 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C02 JUMPI PUSH2 0x1BC6 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1DEC JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C2B JUMPI PUSH2 0x1C2A PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1CD9 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128D JUMP JUMPDEST PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CF0 JUMPI PUSH2 0x1CEF PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x1DE4 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E24 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FB8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1FAC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F65 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1FF0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x200B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x204D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2044 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208D DUP3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209D DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B8 DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D0 DUP2 PUSH2 0x20BE JUMP JUMPDEST DUP2 EQ PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EB DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2107 JUMPI PUSH2 0x2106 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2114 DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2125 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2138 DUP2 PUSH2 0x20BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2151 PUSH0 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2179 DUP5 DUP3 DUP6 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2196 DUP2 PUSH2 0x2182 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B1 DUP2 PUSH2 0x218D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21DA DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21EB DUP6 DUP3 DUP7 ADD PUSH2 0x21A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x223F DUP3 PUSH2 0x21F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x225E JUMPI PUSH2 0x225D PUSH2 0x2209 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2270 PUSH2 0x2053 JUMP JUMPDEST SWAP1 POP PUSH2 0x227C DUP3 DUP3 PUSH2 0x2236 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x2209 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x22C2 PUSH2 0x22BD DUP5 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x2267 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x22AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x230E JUMPI DUP1 PUSH2 0x22FA DUP9 DUP3 PUSH2 0x20AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x21F5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x233C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x235F JUMPI PUSH2 0x235E PUSH2 0x2209 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2382 PUSH2 0x237D DUP5 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x2267 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x22AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23CE JUMPI DUP1 PUSH2 0x23BA DUP9 DUP3 PUSH2 0x20DD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23A7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23EC JUMPI PUSH2 0x23EB PUSH2 0x21F5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2370 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2445 DUP7 DUP3 DUP8 ADD PUSH2 0x2318 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2472 DUP7 DUP3 DUP8 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2483 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AF DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24CE JUMPI PUSH2 0x24CD PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x24F7 DUP6 DUP3 DUP7 ADD PUSH2 0x2318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2518 JUMPI PUSH2 0x2517 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2524 DUP6 DUP3 DUP7 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2537 DUP2 PUSH2 0x2182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2550 PUSH0 DUP4 ADD DUP5 PUSH2 0x252E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255F DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2578 PUSH0 DUP4 ADD DUP5 PUSH2 0x2556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25A4 DUP9 DUP3 DUP10 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x25B5 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x25C6 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x25D7 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25E8 DUP9 DUP3 DUP10 ADD PUSH2 0x21A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2608 PUSH0 DUP4 ADD DUP9 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x2615 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x252E JUMP JUMPDEST PUSH2 0x2622 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x252E JUMP JUMPDEST PUSH2 0x262F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x263C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F7420616C6C6F776564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x268A PUSH1 0x1A DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2695 DUP3 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26B7 DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2740 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x271C JUMPI PUSH2 0x271B PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x272B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2739 DUP6 PUSH2 0x26EB JUMP JUMPDEST SWAP5 POP PUSH2 0x2700 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2758 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2813 JUMP JUMPDEST DUP2 PUSH2 0x2765 JUMPI PUSH0 SWAP1 POP PUSH2 0x2813 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x277B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2785 JUMPI PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2813 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x26BE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x27AE JUMPI PUSH2 0x27AD PUSH2 0x26BE JUMP JUMPDEST JUMPDEST POP PUSH2 0x2813 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x27E9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E3 PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x27F6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26F7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x26BE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP PUSH2 0x285C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2749 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x286E DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2879 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2887 DUP2 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x289E JUMPI PUSH2 0x289D PUSH2 0x26BE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28DC DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x28E7 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28F7 JUMPI PUSH2 0x28F6 PUSH2 0x28A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A206973206E6F742073746F70706564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2936 PUSH1 0x17 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2941 DUP3 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2963 DUP2 PUSH2 0x292A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A204E6F20746F6B656E7320746F20636C61696D0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x299E PUSH1 0x1B DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x29A9 DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29CB DUP2 PUSH2 0x2992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053746174757320697320616C7265616479207365742074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F2074686520646573697265642076616C756500000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2C PUSH1 0x33 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A37 DUP3 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A59 DUP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20746F6B656E732026207072696365732061727261797320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABA PUSH1 0x2F DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC5 DUP3 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE7 DUP2 PUSH2 0x2AAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206973206E6F7420612070617961626C6520 PUSH0 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B75 PUSH1 0x25 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP3 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BA2 DUP2 PUSH2 0x2B69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726963652063616E6E6F74206265207A65726F000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDD PUSH1 0x1D DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE8 DUP3 PUSH2 0x2BA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C0A DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1B DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C26 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C3E JUMPI PUSH2 0x2C3D PUSH2 0x26BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C4E DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A206973206E6F7420656E61626C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CBF PUSH1 0x17 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCA DUP3 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CEC DUP2 PUSH2 0x2CB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A204E6F7420656E6F75676820746F6B656E7320746F206265 PUSH0 DUP3 ADD MSTORE PUSH32 0x2073616C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D4D PUSH1 0x25 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D58 DUP3 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DDB PUSH1 0x26 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE6 DUP3 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E08 DUP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E19 DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E24 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2E3C JUMPI PUSH2 0x2E3B PUSH2 0x26BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E50 DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E6A PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E78 DUP5 DUP3 DUP6 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E94 PUSH0 DUP4 ADD DUP6 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2EA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2EB6 DUP2 PUSH2 0x218D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED1 JUMPI PUSH2 0x2ED0 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EDE DUP5 DUP3 DUP6 ADD PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20526174652063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1B PUSH1 0x1C DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 DUP3 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F48 DUP2 PUSH2 0x2F0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F64 DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F7F DUP2 PUSH2 0x2F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9A JUMPI PUSH2 0x2F99 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FA7 DUP5 DUP3 DUP6 ADD PUSH2 0x2F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FC3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2FD0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2FDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH8 0x80F313F9827010F0 0xE5 0xC7 0xDD MSTORE8 PUSH17 0x92C40C9F90B22190734AD684B80DB7C547 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "672:10364:9:-:0;;;2459:103;;;;;;;;;;2481:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2515:5:9::1;2502:10;;:18;;;;;;;;;;;;;;;;;;672:10364:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;672:10364:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_763": {
									"entryPoint": 8120,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7037,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_817": {
									"entryPoint": 8113,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 7793,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPayableTokens_1123": {
									"entryPoint": 3213,
									"id": 1123,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyToken_1487": {
									"entryPoint": 3874,
									"id": 1487,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@buyersDetails_896": {
									"entryPoint": 6349,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyers_885": {
									"entryPoint": 6103,
									"id": 885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBuyerReward_1623": {
									"entryPoint": 4749,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenAmount_1576": {
									"entryPoint": 1735,
									"id": 1576,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseTotalTokensforSale_1041": {
									"entryPoint": 5912,
									"id": 1041,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@multiplier_872": {
									"entryPoint": 2318,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 5036,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payableTokenStatus_1149": {
									"entryPoint": 2345,
									"id": 1149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@payableTokens_891": {
									"entryPoint": 4720,
									"id": 891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rate_874": {
									"entryPoint": 2584,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4701,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@resumeSale_1061": {
									"entryPoint": 3098,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_413": {
									"entryPoint": 7663,
									"id": 413,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_386": {
									"entryPoint": 7986,
									"id": 386,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleStatus_882": {
									"entryPoint": 6424,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleTokenDec_878": {
									"entryPoint": 6025,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleToken_876": {
									"entryPoint": 6066,
									"id": 876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMultiplier_1015": {
									"entryPoint": 3848,
									"id": 1015,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setParams_999": {
									"entryPoint": 5490,
									"id": 999,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@stopSale_1051": {
									"entryPoint": 6031,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrices_900": {
									"entryPoint": 2324,
									"id": 900,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensSold_887": {
									"entryPoint": 3842,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTokensforSale_880": {
									"entryPoint": 4695,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 6162,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlockAllTokens_1254": {
									"entryPoint": 3645,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlockTokenFor_1727": {
									"entryPoint": 6587,
									"id": 1727,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlockToken_1510": {
									"entryPoint": 2094,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateRewards_1674": {
									"entryPoint": 7172,
									"id": 1674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTokenRate_1226": {
									"entryPoint": 2590,
									"id": 1226,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawAllSaleTokens_1288": {
									"entryPoint": 5075,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_1332": {
									"entryPoint": 6442,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCurrency_1349": {
									"entryPoint": 3134,
									"id": 1349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1307": {
									"entryPoint": 6294,
									"id": 1307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9072,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 12145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool": {
									"entryPoint": 9598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 12165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12208,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_bool_t_uint256_t_uint256__to_t_uint256_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9717,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 10266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10057,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 12111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323": {
									"entryPoint": 9814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe": {
									"entryPoint": 11177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3": {
									"entryPoint": 10498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355": {
									"entryPoint": 10848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77": {
									"entryPoint": 11507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf": {
									"entryPoint": 10602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986": {
									"entryPoint": 11649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48": {
									"entryPoint": 11035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e": {
									"entryPoint": 11403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb": {
									"entryPoint": 12007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189": {
									"entryPoint": 10706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 12123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29402:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:10",
														"type": ""
													}
												],
												"src": "1677:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:10",
														"type": ""
													}
												],
												"src": "1801:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2141:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:32:10"
															},
															"nodeType": "YulIf",
															"src": "2105:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2234:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2065:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2076:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2088:6:10",
														"type": ""
													}
												],
												"src": "2029:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2406:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2416:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2441:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2434:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2434:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2416:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2388:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2398:7:10",
														"type": ""
													}
												],
												"src": "2364:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2500:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2554:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2563:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2566:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2556:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2556:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2523:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2545:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2530:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2530:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2520:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:40:10"
															},
															"nodeType": "YulIf",
															"src": "2510:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2493:5:10",
														"type": ""
													}
												],
												"src": "2460:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2641:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2663:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2641:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2703:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2679:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2609:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2617:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2625:5:10",
														"type": ""
													}
												],
												"src": "2582:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2801:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2847:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2849:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2849:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2849:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2822:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2831:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:32:10"
															},
															"nodeType": "YulIf",
															"src": "2811:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2940:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2955:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2969:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2959:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2984:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3019:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3030:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3015:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3039:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2994:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2994:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2984:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3067:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3082:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3086:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3112:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3144:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3140:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3140:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3164:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3122:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3112:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2763:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2774:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2786:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2794:6:10",
														"type": ""
													}
												],
												"src": "2721:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3284:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3304:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3195:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3366:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3376:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3394:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3401:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3410:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3376:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3349:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3359:6:10",
														"type": ""
													}
												],
												"src": "3318:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3454:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3471:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3474:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3464:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3464:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3571:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3561:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3592:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3585:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3426:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3655:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3665:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3687:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3717:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3695:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3695:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3683:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3669:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3834:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3836:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3836:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3836:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3777:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3774:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3774:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3813:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3825:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3810:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3771:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:62:10"
															},
															"nodeType": "YulIf",
															"src": "3768:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3872:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3876:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3865:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3865:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3641:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3649:4:10",
														"type": ""
													}
												],
												"src": "3612:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3940:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3950:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3960:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4009:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4017:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3989:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3989:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3989:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3924:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3933:6:10",
														"type": ""
													}
												],
												"src": "3899:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4116:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4221:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4223:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4223:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4193:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4201:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:30:10"
															},
															"nodeType": "YulIf",
															"src": "4187:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4253:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4265:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4273:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4253:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4315:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4327:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4333:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4315:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4100:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4111:4:10",
														"type": ""
													}
												],
												"src": "4034:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4440:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4460:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4450:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4450:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4351:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4603:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4685:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4628:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4628:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4612:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4603:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4702:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4713:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4706:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4735:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4728:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4758:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4769:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4776:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4791:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4809:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4829:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4795:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4863:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4877:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4850:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4858:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4847:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:15:10"
															},
															"nodeType": "YulIf",
															"src": "4844:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5051:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5066:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "5084:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "5070:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "5134:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "5146:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "5113:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5113:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5101:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5101:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5101:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5164:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5175:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5180:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5171:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5164:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5004:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5009:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5017:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5019:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5030:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5035:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5026:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5026:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5019:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4979:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4981:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4992:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4985:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4975:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4563:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4571:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4579:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4587:5:10",
														"type": ""
													}
												],
												"src": "4491:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5301:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5350:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5352:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5352:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5352:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5329:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5337:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5325:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5325:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5344:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:35:10"
															},
															"nodeType": "YulIf",
															"src": "5311:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5442:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5469:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5456:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5446:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5485:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5561:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5569:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5576:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5584:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5494:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5485:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5279:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5287:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5295:5:10",
														"type": ""
													}
												],
												"src": "5224:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5682:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5787:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5789:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5789:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5789:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5759:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5756:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:30:10"
															},
															"nodeType": "YulIf",
															"src": "5753:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5819:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5831:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5839:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5827:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5819:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5881:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5893:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5881:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5666:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5677:4:10",
														"type": ""
													}
												],
												"src": "5600:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6036:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6046:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6071:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6055:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6055:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6046:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6145:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6156:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6149:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6178:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6185:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6201:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6212:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6219:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6201:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6234:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6264:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6272:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6260:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6248:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6238:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6306:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6320:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6320:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6320:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6293:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6301:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6290:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:15:10"
															},
															"nodeType": "YulIf",
															"src": "6287:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6494:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6509:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6513:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6551:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6577:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6589:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6556:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6556:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6544:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6544:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6544:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6607:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6618:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6623:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6614:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6614:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6607:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6447:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6444:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6460:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6462:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6473:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6478:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6469:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6469:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6462:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6422:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6424:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6435:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6428:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6418:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6006:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6014:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6022:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6030:5:10",
														"type": ""
													}
												],
												"src": "5934:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6744:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6793:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6795:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6795:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6795:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6780:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6768:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6787:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6764:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6757:35:10"
															},
															"nodeType": "YulIf",
															"src": "6754:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6885:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6899:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6889:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6928:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7004:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7012:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7000:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7027:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6937:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6928:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6722:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6730:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6738:5:10",
														"type": ""
													}
												],
												"src": "6667:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7193:889:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7239:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7241:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7241:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7241:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7214:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7223:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7210:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7235:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7206:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:32:10"
															},
															"nodeType": "YulIf",
															"src": "7203:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "7332:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7347:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7378:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7389:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7374:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7374:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7361:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7361:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7351:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7439:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7441:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7441:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7441:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7411:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7419:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7408:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "7405:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7536:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7596:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7592:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7546:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7546:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7536:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7644:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7659:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7690:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7701:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7686:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7686:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7673:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7673:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7663:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7752:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7754:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7754:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7754:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7724:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7732:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7721:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7721:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "7718:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7849:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7909:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7920:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7905:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7905:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7929:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7859:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7859:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7849:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7957:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7972:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7986:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7976:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8002:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8037:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8048:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8033:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8033:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8057:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8012:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8012:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8002:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7147:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7158:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7170:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7178:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7186:6:10",
														"type": ""
													}
												],
												"src": "7043:1039:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8154:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8200:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8202:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8202:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8202:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8175:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8184:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8196:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:32:10"
															},
															"nodeType": "YulIf",
															"src": "8164:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8293:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8308:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8312:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8337:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8372:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8383:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8368:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8368:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8392:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8347:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8347:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8337:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8124:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8135:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8147:6:10",
														"type": ""
													}
												],
												"src": "8088:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8556:761:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8602:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8604:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8604:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8604:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8577:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8586:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8573:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8598:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:32:10"
															},
															"nodeType": "YulIf",
															"src": "8566:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8695:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8710:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8741:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8752:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8737:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8737:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8724:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8724:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8714:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8802:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8804:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8804:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8804:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8774:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8782:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8771:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8771:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "8768:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8899:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8959:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8970:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8955:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8955:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8979:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8909:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8909:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8899:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9007:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9022:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9053:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9064:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9049:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9049:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9036:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9026:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9115:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9117:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9117:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9117:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9087:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9095:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9084:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9084:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9081:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9212:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9272:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9283:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9268:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9268:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9292:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9222:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9222:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9212:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8518:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8529:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8541:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8549:6:10",
														"type": ""
													}
												],
												"src": "8423:894:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9382:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9399:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9419:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9404:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9404:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9392:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9392:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9370:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9377:3:10",
														"type": ""
													}
												],
												"src": "9323:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9530:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9540:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9552:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9563:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9548:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9548:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9540:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9614:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9627:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9638:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9623:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9576:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9576:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9576:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9502:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9514:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9525:4:10",
														"type": ""
													}
												],
												"src": "9438:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9719:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9736:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9759:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9741:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9741:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9729:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9729:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9707:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9714:3:10",
														"type": ""
													}
												],
												"src": "9654:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9876:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9886:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9898:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9909:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9894:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9886:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9966:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9979:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9990:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9975:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9922:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9922:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9922:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9848:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9860:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9871:4:10",
														"type": ""
													}
												],
												"src": "9778:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10137:774:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10184:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10186:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10186:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10186:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10158:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10154:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10179:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:33:10"
															},
															"nodeType": "YulIf",
															"src": "10147:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10277:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10292:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10306:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10296:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10321:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10356:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10367:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10352:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10352:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10376:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10331:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10331:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10321:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10404:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10419:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10423:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10449:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10484:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10495:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10480:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10480:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10504:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10459:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10459:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10449:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10532:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10547:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10561:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10551:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10577:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10612:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10623:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10608:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10608:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10632:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10587:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10587:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10577:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10660:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10675:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10689:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10679:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10705:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10740:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10751:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10736:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10736:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10760:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10715:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10715:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10705:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10788:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10803:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10817:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10807:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10834:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10866:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10877:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10862:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10862:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10886:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10844:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10844:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10834:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10075:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10086:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10098:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10106:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10114:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10122:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10130:6:10",
														"type": ""
													}
												],
												"src": "10006:905:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11115:442:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11125:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11137:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11148:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11133:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11133:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11206:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11219:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11230:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11215:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11215:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11162:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11281:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11294:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11305:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11290:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11243:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11243:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11357:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11370:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11381:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11366:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11366:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11319:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11319:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11439:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11463:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11395:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11395:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11395:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11521:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11545:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11530:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11477:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11477:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_bool_t_uint256_t_uint256__to_t_uint256_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11055:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11067:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11075:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11083:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11091:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11099:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11110:4:10",
														"type": ""
													}
												],
												"src": "10917:640:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11659:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11676:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11681:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11669:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11669:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11697:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11716:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11721:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11712:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11697:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11631:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11636:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11647:11:10",
														"type": ""
													}
												],
												"src": "11563:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11844:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11866:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11874:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11862:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11878:28:10",
																		"type": "",
																		"value": "Presale: Token not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11855:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11855:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11855:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11836:6:10",
														"type": ""
													}
												],
												"src": "11738:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12066:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12076:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12142:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12147:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12083:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12076:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12248:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323",
																	"nodeType": "YulIdentifier",
																	"src": "12159:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12159:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12261:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12272:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12277:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12268:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12261:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12054:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12062:3:10",
														"type": ""
													}
												],
												"src": "11920:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12463:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12520:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12531:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12516:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12539:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12535:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12565:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12699:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12573:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12573:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12565:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12443:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12458:4:10",
														"type": ""
													}
												],
												"src": "12292:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12745:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12762:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12765:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12755:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12755:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12859:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12862:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12852:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12852:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12852:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12883:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12886:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12876:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12717:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12954:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12964:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12989:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12992:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12985:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12985:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "12964:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12935:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "12945:8:10",
														"type": ""
													}
												],
												"src": "12903:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13084:775:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13094:15:10",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "13103:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "13094:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13118:14:10",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "13127:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "13118:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13176:677:10",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13264:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "13266:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13266:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13266:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13242:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "13252:3:10"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "13257:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "13248:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13248:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "13239:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13239:24:10"
																		},
																		"nodeType": "YulIf",
																		"src": "13236:50:10"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13331:419:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "13711:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "13724:5:10"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "13731:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "13720:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13720:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "13711:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13306:8:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13316:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13302:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13302:16:10"
																		},
																		"nodeType": "YulIf",
																		"src": "13299:451:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13763:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13775:4:10"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13781:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "13771:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13771:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "13763:4:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13799:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13834:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "13811:22:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13811:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "13799:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13152:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13162:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13149:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13149:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13165:2:10",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13145:3:10",
																"statements": []
															},
															"src": "13141:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "13039:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "13047:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13054:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "13064:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13072:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13079:4:10",
														"type": ""
													}
												],
												"src": "13011:848:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:1013:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14120:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14122:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14131:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "14122:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14133:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14110:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14103:16:10"
															},
															"nodeType": "YulIf",
															"src": "14100:40:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14165:20:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14167:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14176:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "14167:5:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14178:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14159:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14152:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:12:10"
															},
															"nodeType": "YulIf",
															"src": "14149:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14295:20:10",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "14297:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14306:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "14297:5:10"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "14308:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14288:27:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14293:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14339:176:10",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "14374:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "14376:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14376:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "14376:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "14359:8:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14369:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "14356:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14356:17:10"
																				},
																				"nodeType": "YulIf",
																				"src": "14353:43:10"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "14409:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14422:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "14425:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "14418:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14418:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "14409:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "14465:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "14467:16:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14467:18:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "14467:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "14453:5:10"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "14460:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "14450:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14450:14:10"
																				},
																				"nodeType": "YulIf",
																				"src": "14447:40:10"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "14500:5:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14324:191:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14329:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "14245:4:10"
															},
															"nodeType": "YulSwitch",
															"src": "14238:277:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14647:123:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14661:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14674:4:10"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "14680:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "14670:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14670:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "14661:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14720:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "14722:16:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14722:18:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14722:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "14708:5:10"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "14715:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "14705:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14705:14:10"
																		},
																		"nodeType": "YulIf",
																		"src": "14702:40:10"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14755:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "14550:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14556:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "14547:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14547:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "14564:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14574:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "14561:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14561:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14543:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "14599:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14605:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "14596:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14596:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "14614:8:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14624:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "14611:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14611:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14592:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14527:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14527:111:10"
															},
															"nodeType": "YulIf",
															"src": "14524:246:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14780:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14814:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14817:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14823:8:10"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "14833:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "14795:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14795:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14780:5:10"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "14787:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14876:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14878:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14878:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14878:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "14853:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "14864:3:10"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "14869:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "14860:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14860:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14850:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:25:10"
															},
															"nodeType": "YulIf",
															"src": "14847:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14907:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "14920:5:10"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14927:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14916:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14907:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13895:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13901:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "13911:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13919:5:10",
														"type": ""
													}
												],
												"src": "13865:1073:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15010:219:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15020:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15046:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15028:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15028:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "15020:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15060:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15090:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15072:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15072:27:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "15060:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15109:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15139:4:10"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15145:8:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15155:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "15118:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15109:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14985:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14991:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "15004:5:10",
														"type": ""
													}
												],
												"src": "14944:285:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15283:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15293:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15316:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15298:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15298:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15293:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15327:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15350:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15332:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15327:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15361:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15384:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15387:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15380:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15380:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "15365:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15398:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "15427:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15409:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15409:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15398:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15616:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15618:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15618:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15618:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15549:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15542:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15542:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "15572:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "15579:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "15588:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "15575:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15575:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "15569:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15569:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15522:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15522:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15502:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15502:113:10"
															},
															"nodeType": "YulIf",
															"src": "15499:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15266:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15269:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15275:7:10",
														"type": ""
													}
												],
												"src": "15235:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15679:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15696:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15699:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15689:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15689:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15689:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15793:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15796:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15786:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15786:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15817:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15820:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15810:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15810:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15651:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15879:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15889:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15912:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15894:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15894:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15889:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15923:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15946:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15928:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15928:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15923:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15970:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15972:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15972:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15972:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15967:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15960:9:10"
															},
															"nodeType": "YulIf",
															"src": "15957:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16002:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16011:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16014:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16007:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16007:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16002:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15868:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15871:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15877:1:10",
														"type": ""
													}
												],
												"src": "15837:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16134:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16156:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16164:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16152:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a206973206e6f742073746f70706564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16168:25:10",
																		"type": "",
																		"value": "Presale: is not stopped"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16145:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16145:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16126:6:10",
														"type": ""
													}
												],
												"src": "16028:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16353:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16363:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16429:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16370:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16370:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16363:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16535:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3",
																	"nodeType": "YulIdentifier",
																	"src": "16446:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16446:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16446:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16548:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16559:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16564:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16555:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16548:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16341:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16349:3:10",
														"type": ""
													}
												],
												"src": "16207:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16750:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16760:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16772:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16783:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16768:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16760:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16807:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16818:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16803:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16826:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16822:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16796:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16796:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16796:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16852:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16986:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16860:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16860:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16852:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16730:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16745:4:10",
														"type": ""
													}
												],
												"src": "16579:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17110:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17132:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17140:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17128:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17128:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a204e6f20746f6b656e7320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17144:29:10",
																		"type": "",
																		"value": "Presale: No tokens to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17121:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17121:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17121:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17102:6:10",
														"type": ""
													}
												],
												"src": "17004:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17333:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17343:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17409:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17414:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17350:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17350:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17343:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17515:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf",
																	"nodeType": "YulIdentifier",
																	"src": "17426:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17426:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17426:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17528:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17539:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17544:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17535:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17535:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17528:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17321:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17329:3:10",
														"type": ""
													}
												],
												"src": "17187:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17730:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17740:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17752:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17763:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17748:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17748:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17740:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17787:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17798:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17783:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17783:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17806:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17812:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17802:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17802:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17776:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17776:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17832:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17966:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17840:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17840:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17832:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17710:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17725:4:10",
														"type": ""
													}
												],
												"src": "17559:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18090:132:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18112:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18120:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18108:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a2053746174757320697320616c7265616479207365742074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18124:34:10",
																		"type": "",
																		"value": "Presale: Status is already set t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18101:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18101:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18101:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18180:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18188:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18176:15:10"
																	},
																	{
																		"hexValue": "6f2074686520646573697265642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18193:21:10",
																		"type": "",
																		"value": "o the desired value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18169:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18082:6:10",
														"type": ""
													}
												],
												"src": "17984:238:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18374:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18384:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18450:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18455:2:10",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18391:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18391:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18384:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18556:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189",
																	"nodeType": "YulIdentifier",
																	"src": "18467:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18467:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18467:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18569:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18580:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18576:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18576:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18370:3:10",
														"type": ""
													}
												],
												"src": "18228:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18771:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18793:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18789:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18828:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18824:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18847:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18843:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18817:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18817:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18817:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18873:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19007:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18881:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18881:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18751:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18766:4:10",
														"type": ""
													}
												],
												"src": "18600:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19131:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19153:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19149:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19149:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a20746f6b656e732026207072696365732061727261797320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19165:34:10",
																		"type": "",
																		"value": "Presale: tokens & prices arrays "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19142:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19142:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19142:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19221:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19229:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19217:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19217:15:10"
																	},
																	{
																		"hexValue": "6c656e677468206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19234:17:10",
																		"type": "",
																		"value": "length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19210:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19210:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19210:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19123:6:10",
														"type": ""
													}
												],
												"src": "19025:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19411:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19421:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19487:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19492:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19428:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19428:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19421:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19593:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
																	"nodeType": "YulIdentifier",
																	"src": "19504:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19504:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19504:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19606:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19617:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19622:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19613:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19613:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19606:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19399:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19407:3:10",
														"type": ""
													}
												],
												"src": "19265:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19808:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19818:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19830:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19841:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19826:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19818:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19865:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19876:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19861:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19884:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19890:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19880:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19854:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19910:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20044:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19918:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19918:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19910:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19788:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19803:4:10",
														"type": ""
													}
												],
												"src": "19637:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20090:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20110:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20100:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20100:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20204:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20207:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20197:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20197:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20231:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20221:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20221:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20062:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20354:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20376:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20384:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20372:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20372:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206973206e6f7420612070617961626c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20388:34:10",
																		"type": "",
																		"value": "Presale: Token is not a payable "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20365:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20365:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20365:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20444:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20452:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20440:15:10"
																	},
																	{
																		"hexValue": "746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20457:7:10",
																		"type": "",
																		"value": "token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20433:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20433:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20346:6:10",
														"type": ""
													}
												],
												"src": "20248:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20624:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20634:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20700:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20705:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20641:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20641:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20634:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20806:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48",
																	"nodeType": "YulIdentifier",
																	"src": "20717:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20717:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20717:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20819:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20830:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20835:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20826:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20826:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20819:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20612:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20620:3:10",
														"type": ""
													}
												],
												"src": "20478:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21021:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21031:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21043:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21054:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21039:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21031:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21089:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21074:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21097:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21103:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21093:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21067:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21067:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21123:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21257:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21131:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21131:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21123:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21001:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21016:4:10",
														"type": ""
													}
												],
												"src": "20850:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21381:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21403:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21411:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21399:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21399:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a2050726963652063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21415:31:10",
																		"type": "",
																		"value": "Presale: Price cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21392:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21392:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21392:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21373:6:10",
														"type": ""
													}
												],
												"src": "21275:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21606:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21616:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21682:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21687:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21623:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21623:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21616:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21788:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
																	"nodeType": "YulIdentifier",
																	"src": "21699:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21699:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21699:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21801:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21812:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21817:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21808:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21808:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21801:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21594:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21602:3:10",
														"type": ""
													}
												],
												"src": "21460:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22003:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22013:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22025:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22036:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22021:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22021:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22013:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22071:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22056:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22079:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22085:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22075:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22075:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22049:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22049:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22105:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22239:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22113:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22113:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22105:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21983:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21998:4:10",
														"type": ""
													}
												],
												"src": "21832:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22301:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22311:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22334:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22316:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22316:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22311:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22345:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22368:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22350:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22350:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22345:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22379:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22390:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22393:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22386:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "22379:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22419:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22421:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22421:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22421:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22411:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "22414:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22408:10:10"
															},
															"nodeType": "YulIf",
															"src": "22405:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22288:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22291:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22297:3:10",
														"type": ""
													}
												],
												"src": "22257:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22497:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22507:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22534:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22516:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22516:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22507:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22630:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22632:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22632:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22632:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22555:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22562:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "22552:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22552:77:10"
															},
															"nodeType": "YulIf",
															"src": "22549:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22661:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22672:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22679:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22668:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22668:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "22661:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22483:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22493:3:10",
														"type": ""
													}
												],
												"src": "22454:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22799:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22821:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22817:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a206973206e6f7420656e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22833:25:10",
																		"type": "",
																		"value": "Presale: is not enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22810:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22810:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22791:6:10",
														"type": ""
													}
												],
												"src": "22693:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23018:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23028:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23094:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23099:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23035:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23035:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23028:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23200:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e",
																	"nodeType": "YulIdentifier",
																	"src": "23111:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23111:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23111:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23213:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23224:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23229:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23220:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23220:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23213:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23006:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23014:3:10",
														"type": ""
													}
												],
												"src": "22872:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23415:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23425:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23437:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23448:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23433:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23433:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23425:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23472:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23483:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23468:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23468:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23491:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23497:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23487:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23461:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23461:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23461:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23517:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23651:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23525:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23525:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23517:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23395:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23410:4:10",
														"type": ""
													}
												],
												"src": "23244:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23775:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23797:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23805:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23793:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a204e6f7420656e6f75676820746f6b656e7320746f206265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23809:34:10",
																		"type": "",
																		"value": "Presale: Not enough tokens to be"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23786:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23786:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23865:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23873:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23861:15:10"
																	},
																	{
																		"hexValue": "2073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23878:7:10",
																		"type": "",
																		"value": " sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23854:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23854:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23767:6:10",
														"type": ""
													}
												],
												"src": "23669:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24045:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24055:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24121:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24126:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24062:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24062:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24055:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24227:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77",
																	"nodeType": "YulIdentifier",
																	"src": "24138:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24138:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24138:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24240:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24251:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24256:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24247:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24247:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24240:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24033:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24041:3:10",
														"type": ""
													}
												],
												"src": "23899:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24442:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24452:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24464:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24475:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24460:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24460:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24452:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24499:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24510:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24495:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24518:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24524:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24514:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24514:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24488:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24488:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24544:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24678:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24552:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24552:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24544:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24422:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24437:4:10",
														"type": ""
													}
												],
												"src": "24271:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24802:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24824:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24832:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24820:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24820:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24836:34:10",
																		"type": "",
																		"value": "Presale: Amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24813:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24813:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24892:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24900:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24888:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24888:15:10"
																	},
																	{
																		"hexValue": "7468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24905:8:10",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24881:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24881:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24794:6:10",
														"type": ""
													}
												],
												"src": "24696:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25073:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25083:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25149:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25154:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25090:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25090:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25083:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25255:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986",
																	"nodeType": "YulIdentifier",
																	"src": "25166:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25166:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25166:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25268:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25279:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25284:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25275:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25275:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25268:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25061:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25069:3:10",
														"type": ""
													}
												],
												"src": "24927:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25470:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25480:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25492:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25503:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25488:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25480:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25523:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25546:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25552:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25542:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25516:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25516:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25572:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25706:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25580:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25580:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25572:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25450:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25465:4:10",
														"type": ""
													}
												],
												"src": "25299:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25769:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25779:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25802:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25784:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25784:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25779:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25813:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25836:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25818:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25818:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25813:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25847:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25859:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25862:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "25855:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25855:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "25847:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25889:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25891:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25891:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25891:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "25880:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25886:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25877:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25877:11:10"
															},
															"nodeType": "YulIf",
															"src": "25874:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25755:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25758:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "25764:4:10",
														"type": ""
													}
												],
												"src": "25724:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25987:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25997:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26012:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26006:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26006:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25997:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26055:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26028:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26028:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26028:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "25965:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25973:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25981:5:10",
														"type": ""
													}
												],
												"src": "25924:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26150:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26196:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "26198:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26198:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26198:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26171:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26180:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26167:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26167:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26163:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26163:32:10"
															},
															"nodeType": "YulIf",
															"src": "26160:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "26289:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "26304:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26318:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "26308:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "26333:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "26379:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "26390:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "26375:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26375:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26399:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "26343:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26343:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "26333:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26120:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26131:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26143:6:10",
														"type": ""
													}
												],
												"src": "26073:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26556:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26566:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26578:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26589:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26574:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26574:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26566:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26646:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26659:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26670:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26655:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26655:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26602:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26602:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26602:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26727:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26740:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26736:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26683:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26683:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26683:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26520:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26532:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26540:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26551:4:10",
														"type": ""
													}
												],
												"src": "26430:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26828:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26838:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26853:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26847:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26847:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26838:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26893:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "26869:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26869:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26869:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26806:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26814:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26822:5:10",
														"type": ""
													}
												],
												"src": "26768:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26985:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27031:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27033:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27033:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27033:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27006:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27015:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27002:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27027:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26998:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26998:32:10"
															},
															"nodeType": "YulIf",
															"src": "26995:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "27124:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27139:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27153:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27143:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27168:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27211:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27222:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27207:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27207:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27231:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27178:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27178:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27168:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26955:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26966:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26978:6:10",
														"type": ""
													}
												],
												"src": "26911:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27368:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27390:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27398:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27386:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27386:14:10"
																	},
																	{
																		"hexValue": "50726573616c653a20526174652063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27402:30:10",
																		"type": "",
																		"value": "Presale: Rate cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27379:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27379:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27379:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27360:6:10",
														"type": ""
													}
												],
												"src": "27262:178:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27592:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27602:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27668:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27673:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27609:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27609:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27602:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27774:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb",
																	"nodeType": "YulIdentifier",
																	"src": "27685:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27685:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27685:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27787:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27798:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27803:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27794:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27787:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27580:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27588:3:10",
														"type": ""
													}
												],
												"src": "27446:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27989:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27999:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28022:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28007:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28007:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27999:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28046:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28057:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28042:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28042:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28065:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28071:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28061:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28035:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28035:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28035:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28091:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28225:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28099:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28099:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28091:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27969:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27984:4:10",
														"type": ""
													}
												],
												"src": "27818:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28286:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28296:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28311:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28318:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "28307:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28307:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "28296:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28268:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "28278:7:10",
														"type": ""
													}
												],
												"src": "28243:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28376:77:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28431:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28440:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28443:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28433:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28433:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28433:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28399:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28422:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "28406:15:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28406:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28396:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28396:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28389:41:10"
															},
															"nodeType": "YulIf",
															"src": "28386:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28369:5:10",
														"type": ""
													}
												],
												"src": "28335:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28520:78:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28530:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28545:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28539:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28539:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28530:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28586:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "28561:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28561:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28561:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28498:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28506:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28514:5:10",
														"type": ""
													}
												],
												"src": "28459:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28679:272:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28725:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28727:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28727:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28727:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28700:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28709:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28696:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28696:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28721:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28692:32:10"
															},
															"nodeType": "YulIf",
															"src": "28689:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "28818:126:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28833:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28847:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28837:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28862:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28906:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28917:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28902:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28902:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28926:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28872:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28872:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28862:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28649:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28660:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28672:6:10",
														"type": ""
													}
												],
												"src": "28604:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29111:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29121:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29133:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29144:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29129:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29129:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29121:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29201:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29214:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29225:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29210:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29157:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29157:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29157:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29282:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29295:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29306:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29291:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29291:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29238:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29238:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29238:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "29364:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29377:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29388:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29373:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29320:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29320:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29320:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29067:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29079:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29087:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29095:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29106:4:10",
														"type": ""
													}
												],
												"src": "28957:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool_t_uint256_t_uint256__to_t_uint256_t_bool_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: is not stopped\")\n\n    }\n\n    function abi_encode_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: No tokens to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Status is already set t\")\n\n        mstore(add(memPtr, 32), \"o the desired value\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: tokens & prices arrays \")\n\n        mstore(add(memPtr, 32), \"length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Token is not a payable \")\n\n        mstore(add(memPtr, 32), \"token\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Price cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: is not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Not enough tokens to be\")\n\n        mstore(add(memPtr, 32), \" sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale: Rate cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101d7575f3560e01c8063715018a611610101578063e36b0b3711610094578063f3fef3a311610063578063f3fef3a31461060d578063f4739ee314610635578063f9020e3314610675578063fa09e6301461069f576101d7565b8063e36b0b3714610569578063e985e3671461057f578063f2aa8218146105a9578063f2fde38b146105e5576101d7565b80639ae2fd34116100d05780639ae2fd34146104d9578063a01bd50c146104ef578063a282637314610517578063ace1741c1461053f576101d7565b8063715018a61461042157806380655eef14610437578063828b7953146104735780638da5cb5b146104af576101d7565b806333e364cb1161017957806363b201171161014857806363b2011714610389578063641579a6146103b357806368f8fc10146103db5780636bcedf9c146103f7576101d7565b806333e364cb1461030d5780633c00a36c146103235780635413c1c81461034b5780635e0be60714610373576101d7565b8063204120bc116101b5578063204120bc1461025757806329d429a8146102935780632c4e722e146102bb5780633115329e146102e5576101d7565b8063115ece4c146101db57806318a24b5b146102175780631b3ed7221461022d575b5f80fd5b3480156101e6575f80fd5b5061020160048036038101906101fc91906120f1565b6106c7565b60405161020e919061213e565b60405180910390f35b348015610222575f80fd5b5061022b61082e565b005b348015610238575f80fd5b5061024161090e565b60405161024e919061213e565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612157565b610914565b60405161028a919061213e565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b491906121b7565b610929565b005b3480156102c6575f80fd5b506102cf610a18565b6040516102dc919061213e565b60405180910390f35b3480156102f0575f80fd5b5061030b60048036038101906103069190612405565b610a1e565b005b348015610318575f80fd5b50610321610c1a565b005b34801561032e575f80fd5b506103496004803603810190610344919061248d565b610c3e565b005b348015610356575f80fd5b50610371600480360381019061036c91906124b8565b610c8d565b005b34801561037e575f80fd5b50610387610e3d565b005b348015610394575f80fd5b5061039d610f02565b6040516103aa919061213e565b60405180910390f35b3480156103be575f80fd5b506103d960048036038101906103d4919061248d565b610f08565b005b6103f560048036038101906103f091906120f1565b610f22565b005b348015610402575f80fd5b5061040b611257565b604051610418919061213e565b60405180910390f35b34801561042c575f80fd5b5061043561125d565b005b348015610442575f80fd5b5061045d60048036038101906104589190612157565b611270565b60405161046a919061253d565b60405180910390f35b34801561047e575f80fd5b5061049960048036038101906104949190612157565b61128d565b6040516104a6919061213e565b60405180910390f35b3480156104ba575f80fd5b506104c36113ac565b6040516104d09190612565565b60405180910390f35b3480156104e4575f80fd5b506104ed6113d3565b005b3480156104fa575f80fd5b506105156004803603810190610510919061257e565b611572565b005b348015610522575f80fd5b5061053d6004803603810190610538919061248d565b611718565b005b34801561054a575f80fd5b50610553611789565b604051610560919061213e565b60405180910390f35b348015610574575f80fd5b5061057d61178f565b005b34801561058a575f80fd5b506105936117b2565b6040516105a09190612565565b60405180910390f35b3480156105b4575f80fd5b506105cf60048036038101906105ca919061248d565b6117d7565b6040516105dc9190612565565b60405180910390f35b3480156105f0575f80fd5b5061060b60048036038101906106069190612157565b611812565b005b348015610618575f80fd5b50610633600480360381019061062e91906120f1565b611896565b005b348015610640575f80fd5b5061065b60048036038101906106569190612157565b6118cd565b60405161066c9594939291906125f5565b60405180910390f35b348015610680575f80fd5b50610689611918565b604051610696919061253d565b60405180910390f35b3480156106aa575f80fd5b506106c560048036038101906106c09190612157565b61192a565b005b5f805f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146107fa576001151560095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615151461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906126a0565b60405180910390fd5b5f600b5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080600454600a6107dd919061281a565b856107e89190612864565b6107f291906128d2565b915050610824565b600254600454600a61080c919061281a565b846108179190612864565b61082191906128d2565b90505b8091505092915050565b5f151560065f9054906101000a900460ff16151514610882576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108799061294c565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fa906129b4565b60405180910390fd5b61090c336119bb565b565b60015481565b600b602052805f5260405f205f915090505481565b610931611b7d565b80151560095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515036109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790612a42565b60405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b60025481565b610a26611b7d565b8151835114610a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190612ad0565b60405180910390fd5b5f8114610a7957806002819055505b5f5b8351811015610c14576001151560095f868481518110610a9e57610a9d612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2590612b8b565b60405180910390fd5b5f838281518110610b4257610b41612aee565b5b602002602001015103610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190612bf3565b60405180910390fd5b828181518110610b9d57610b9c612aee565b5b6020026020010151600b5f868481518110610bbb57610bba612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600181610c0d9190612c11565b9050610a7b565b50505050565b610c22611b7d565b600160065f6101000a81548160ff021916908315150217905550565b610c46611b7d565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c89573d5f803e3d5ffd5b5050565b610c95611b7d565b8051825114610cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd090612ad0565b60405180910390fd5b5f5b8251811015610e38575f828281518110610cf857610cf7612aee565b5b602002602001015103610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3790612bf3565b60405180910390fd5b600160095f858481518110610d5857610d57612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550818181518110610dc257610dc1612aee565b5b6020026020010151600b5f858481518110610de057610ddf612aee565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508080610e3090612c44565b915050610cdb565b505050565b610e45611b7d565b5f151560065f9054906101000a900460ff16151514610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e909061294c565b60405180910390fd5b5f5b600780549050811015610eff57610eec60078281548110610ebf57610ebe612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119bb565b8080610ef790612c44565b915050610e9b565b50565b60085481565b610f10611b7d565b610f18611c04565b8060018190555050565b6001151560065f9054906101000a900460ff16151514610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90612cd5565b60405180910390fd5b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fba57610fb55f346106c7565b610fc5565b610fc483836106c7565b5b905060055481600854610fd89190612c11565b10611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100f90612d63565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146110c6575f821161108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490612df1565b60405180910390fd5b6110c1336110996113ac565b848673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b611112565b6110ce6113ac565b73ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015611110573d5f803e3d5ffd5b505b8060085f8282546111239190612c11565b925050819055505f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050806001015f9054906101000a900460ff1661120057600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001816001015f6101000a81548160ff02191690831515021790555061122f565b5f815f0154111561122e576112143361128d565b816002015f8282546112269190612c11565b925050819055505b5b81815f015f8282546112419190612c11565b9250508190555042816003018190555050505050565b60055481565b611265611b7d565b61126e5f611e71565b565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154036112dc575f90506113a7565b5f62015180600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301544261132d9190612e0f565b61133791906128d2565b90505f61271082600154600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015461138b9190612864565b6113959190612864565b61139f91906128d2565b905080925050505b919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113db611b7d565b5f151560065f9054906101000a900460ff1615151461142f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114269061294c565b60405180910390fd5b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161148a9190612565565b602060405180830381865afa1580156114a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c99190612e56565b905060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611527929190612e81565b6020604051808303815f875af1158015611543573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115679190612ebc565b505f60058190555050565b61157a611b7d565b5f83036115bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b390612f31565b60405180910390fd5b826002819055508460035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548160ff02191690831515021790555060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611686573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116aa9190612f85565b60ff166004819055508360058190555081600181905550611711333060055460035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b5050505050565b611720611b7d565b8060055f8282546117319190612c11565b9250508190555061178633308360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611def909392919063ffffffff16565b50565b60045481565b611797611b7d565b5f60065f6101000a81548160ff021916908315150217905550565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600781815481106117e6575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61181a611b7d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361188a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118819190612565565b60405180910390fd5b61189381611e71565b50565b61189e611b7d565b6118c933828473ffffffffffffffffffffffffffffffffffffffff16611f329092919063ffffffff16565b5050565b600a602052805f5260405f205f91509050805f015490806001015f9054906101000a900460ff16908060010160019054906101000a900460ff16908060020154908060030154905085565b60065f9054906101000a900460ff1681565b611932611b7d565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161196c9190612565565b602060405180830381865afa158015611987573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119ab9190612e56565b90506119b78282611896565b5050565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611b7a575f611a0c8261128d565b600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154611a979190612c11565b611aa19190612c11565b90505f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550611b78828260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f329092919063ffffffff16565b505b50565b611b85611fb1565b73ffffffffffffffffffffffffffffffffffffffff16611ba36113ac565b73ffffffffffffffffffffffffffffffffffffffff1614611c0257611bc6611fb1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bf99190612565565b60405180910390fd5b565b5f5b600780549050811015611dec575f600a5f60078481548110611c2b57611c2a612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115611dd957611cd960078281548110611cac57611cab612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661128d565b600a5f60078481548110611cf057611cef612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002018190555042600a5f60078481548110611d7057611d6f612aee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301819055505b8080611de490612c44565b915050611c06565b50565b611e6b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611e2493929190612fb0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fb8565b50505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fac838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f65929190612e81565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fb8565b505050565b5f33905090565b5f8060205f8451602086015f885af180611fd7576040513d5f823e3d81fd5b3d92505f519150505f8214611ff057600181141561200b565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561204d57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016120449190612565565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61208d82612064565b9050919050565b61209d81612083565b81146120a7575f80fd5b50565b5f813590506120b881612094565b92915050565b5f819050919050565b6120d0816120be565b81146120da575f80fd5b50565b5f813590506120eb816120c7565b92915050565b5f80604083850312156121075761210661205c565b5b5f612114858286016120aa565b9250506020612125858286016120dd565b9150509250929050565b612138816120be565b82525050565b5f6020820190506121515f83018461212f565b92915050565b5f6020828403121561216c5761216b61205c565b5b5f612179848285016120aa565b91505092915050565b5f8115159050919050565b61219681612182565b81146121a0575f80fd5b50565b5f813590506121b18161218d565b92915050565b5f80604083850312156121cd576121cc61205c565b5b5f6121da858286016120aa565b92505060206121eb858286016121a3565b9150509250929050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61223f826121f9565b810181811067ffffffffffffffff8211171561225e5761225d612209565b5b80604052505050565b5f612270612053565b905061227c8282612236565b919050565b5f67ffffffffffffffff82111561229b5761229a612209565b5b602082029050602081019050919050565b5f80fd5b5f6122c26122bd84612281565b612267565b905080838252602082019050602084028301858111156122e5576122e46122ac565b5b835b8181101561230e57806122fa88826120aa565b8452602084019350506020810190506122e7565b5050509392505050565b5f82601f83011261232c5761232b6121f5565b5b813561233c8482602086016122b0565b91505092915050565b5f67ffffffffffffffff82111561235f5761235e612209565b5b602082029050602081019050919050565b5f61238261237d84612345565b612267565b905080838252602082019050602084028301858111156123a5576123a46122ac565b5b835b818110156123ce57806123ba88826120dd565b8452602084019350506020810190506123a7565b5050509392505050565b5f82601f8301126123ec576123eb6121f5565b5b81356123fc848260208601612370565b91505092915050565b5f805f6060848603121561241c5761241b61205c565b5b5f84013567ffffffffffffffff81111561243957612438612060565b5b61244586828701612318565b935050602084013567ffffffffffffffff81111561246657612465612060565b5b612472868287016123d8565b9250506040612483868287016120dd565b9150509250925092565b5f602082840312156124a2576124a161205c565b5b5f6124af848285016120dd565b91505092915050565b5f80604083850312156124ce576124cd61205c565b5b5f83013567ffffffffffffffff8111156124eb576124ea612060565b5b6124f785828601612318565b925050602083013567ffffffffffffffff81111561251857612517612060565b5b612524858286016123d8565b9150509250929050565b61253781612182565b82525050565b5f6020820190506125505f83018461252e565b92915050565b61255f81612083565b82525050565b5f6020820190506125785f830184612556565b92915050565b5f805f805f60a086880312156125975761259661205c565b5b5f6125a4888289016120aa565b95505060206125b5888289016120dd565b94505060406125c6888289016120dd565b93505060606125d7888289016120dd565b92505060806125e8888289016121a3565b9150509295509295909350565b5f60a0820190506126085f83018861212f565b612615602083018761252e565b612622604083018661252e565b61262f606083018561212f565b61263c608083018461212f565b9695505050505050565b5f82825260208201905092915050565b7f50726573616c653a20546f6b656e206e6f7420616c6c6f7765640000000000005f82015250565b5f61268a601a83612646565b915061269582612656565b602082019050919050565b5f6020820190508181035f8301526126b78161267e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156127405780860481111561271c5761271b6126be565b5b600185161561272b5780820291505b8081029050612739856126eb565b9450612700565b94509492505050565b5f826127585760019050612813565b81612765575f9050612813565b816001811461277b5760028114612785576127b4565b6001915050612813565b60ff841115612797576127966126be565b5b8360020a9150848211156127ae576127ad6126be565b5b50612813565b5060208310610133831016604e8410600b84101617156127e95782820a9050838111156127e4576127e36126be565b5b612813565b6127f684848460016126f7565b9250905081840481111561280d5761280c6126be565b5b81810290505b9392505050565b5f612824826120be565b915061282f836120be565b925061285c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612749565b905092915050565b5f61286e826120be565b9150612879836120be565b9250828202612887816120be565b9150828204841483151761289e5761289d6126be565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6128dc826120be565b91506128e7836120be565b9250826128f7576128f66128a5565b5b828204905092915050565b7f50726573616c653a206973206e6f742073746f707065640000000000000000005f82015250565b5f612936601783612646565b915061294182612902565b602082019050919050565b5f6020820190508181035f8301526129638161292a565b9050919050565b7f50726573616c653a204e6f20746f6b656e7320746f20636c61696d00000000005f82015250565b5f61299e601b83612646565b91506129a98261296a565b602082019050919050565b5f6020820190508181035f8301526129cb81612992565b9050919050565b7f50726573616c653a2053746174757320697320616c72656164792073657420745f8201527f6f2074686520646573697265642076616c756500000000000000000000000000602082015250565b5f612a2c603383612646565b9150612a37826129d2565b604082019050919050565b5f6020820190508181035f830152612a5981612a20565b9050919050565b7f50726573616c653a20746f6b656e7320262070726963657320617272617973205f8201527f6c656e677468206d69736d617463680000000000000000000000000000000000602082015250565b5f612aba602f83612646565b9150612ac582612a60565b604082019050919050565b5f6020820190508181035f830152612ae781612aae565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f50726573616c653a20546f6b656e206973206e6f7420612070617961626c65205f8201527f746f6b656e000000000000000000000000000000000000000000000000000000602082015250565b5f612b75602583612646565b9150612b8082612b1b565b604082019050919050565b5f6020820190508181035f830152612ba281612b69565b9050919050565b7f50726573616c653a2050726963652063616e6e6f74206265207a65726f0000005f82015250565b5f612bdd601d83612646565b9150612be882612ba9565b602082019050919050565b5f6020820190508181035f830152612c0a81612bd1565b9050919050565b5f612c1b826120be565b9150612c26836120be565b9250828201905080821115612c3e57612c3d6126be565b5b92915050565b5f612c4e826120be565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c8057612c7f6126be565b5b600182019050919050565b7f50726573616c653a206973206e6f7420656e61626c65640000000000000000005f82015250565b5f612cbf601783612646565b9150612cca82612c8b565b602082019050919050565b5f6020820190508181035f830152612cec81612cb3565b9050919050565b7f50726573616c653a204e6f7420656e6f75676820746f6b656e7320746f2062655f8201527f2073616c65000000000000000000000000000000000000000000000000000000602082015250565b5f612d4d602583612646565b9150612d5882612cf3565b604082019050919050565b5f6020820190508181035f830152612d7a81612d41565b9050919050565b7f50726573616c653a20416d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f612ddb602683612646565b9150612de682612d81565b604082019050919050565b5f6020820190508181035f830152612e0881612dcf565b9050919050565b5f612e19826120be565b9150612e24836120be565b9250828203905081811115612e3c57612e3b6126be565b5b92915050565b5f81519050612e50816120c7565b92915050565b5f60208284031215612e6b57612e6a61205c565b5b5f612e7884828501612e42565b91505092915050565b5f604082019050612e945f830185612556565b612ea1602083018461212f565b9392505050565b5f81519050612eb68161218d565b92915050565b5f60208284031215612ed157612ed061205c565b5b5f612ede84828501612ea8565b91505092915050565b7f50726573616c653a20526174652063616e6e6f74206265207a65726f000000005f82015250565b5f612f1b601c83612646565b9150612f2682612ee7565b602082019050919050565b5f6020820190508181035f830152612f4881612f0f565b9050919050565b5f60ff82169050919050565b612f6481612f4f565b8114612f6e575f80fd5b50565b5f81519050612f7f81612f5b565b92915050565b5f60208284031215612f9a57612f9961205c565b5b5f612fa784828501612f71565b91505092915050565b5f606082019050612fc35f830186612556565b612fd06020830185612556565b612fdd604083018461212f565b94935050505056fea2646970667358221220ee6780f313f9827010f0e5c7dd537092c40c9f90b22190734ad684b80db7c54764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xE36B0B37 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xF3FEF3A3 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xF4739EE3 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0xF9020E33 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xFA09E630 EQ PUSH2 0x69F JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xE36B0B37 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xE985E367 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF2AA8218 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E5 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x9AE2FD34 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9AE2FD34 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xA01BD50C EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xA2826373 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0xACE1741C EQ PUSH2 0x53F JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x80655EEF EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x828B7953 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x33E364CB GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x63B20117 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x63B20117 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x641579A6 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x68F8FC10 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x6BCEDF9C EQ PUSH2 0x3F7 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x33E364CB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x3C00A36C EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5413C1C8 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x5E0BE607 EQ PUSH2 0x373 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x204120BC GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x204120BC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x29D429A8 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x3115329E EQ PUSH2 0x2E5 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x115ECE4C EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x18A24B5B EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x1B3ED722 EQ PUSH2 0x22D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0xC1A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0xC3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0xE3D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0xF08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x435 PUSH2 0x125D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0x13D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x1572 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x178F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x593 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1812 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x633 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x1896 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x689 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x192A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7FA JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST DUP6 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x824 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x281A JUMP JUMPDEST DUP5 PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x903 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FA SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90C CALLER PUSH2 0x19BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x931 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA26 PUSH2 0x1B7D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 EQ PUSH2 0xA79 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC22 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC46 PUSH2 0x1B7D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC95 PUSH2 0x1B7D JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD0 SWAP1 PUSH2 0x2AD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xE38 JUMPI PUSH0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCF8 JUMPI PUSH2 0xCF7 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDE0 JUMPI PUSH2 0xDDF PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xE30 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xEFF JUMPI PUSH2 0xEEC PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19BB JUMP JUMPDEST DUP1 DUP1 PUSH2 0xEF7 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0xF18 PUSH2 0x1C04 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBA JUMPI PUSH2 0xFB5 PUSH0 CALLVALUE PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC4 DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 PUSH1 0x8 SLOAD PUSH2 0xFD8 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST LT PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C6 JUMPI PUSH0 DUP3 GT PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1084 SWAP1 PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C1 CALLER PUSH2 0x1099 PUSH2 0x13AC JUMP JUMPDEST DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1110 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1123 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1200 JUMPI PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x122F JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x1214 CALLER PUSH2 0x128D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x126E PUSH0 PUSH2 0x1E71 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x12DC JUMPI PUSH0 SWAP1 POP PUSH2 0x13A7 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH1 0x1 SLOAD PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x1395 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13DB PUSH2 0x1B7D JUMP JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x142F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148A SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C9 SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1527 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x2EBC JUMP JUMPDEST POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x157A PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP4 SUB PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B3 SWAP1 PUSH2 0x2F31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1686 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AA SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1711 CALLER ADDRESS PUSH1 0x5 SLOAD PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1720 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1786 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x181A PUSH2 0x1B7D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1893 DUP2 PUSH2 0x1E71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x189E PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x18C9 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F32 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1932 PUSH2 0x1B7D JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1987 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AB SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B7 DUP3 DUP3 PUSH2 0x1896 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1B7A JUMPI PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x128D JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x2C11 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1B78 DUP3 DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F32 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B85 PUSH2 0x1FB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA3 PUSH2 0x13AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C02 JUMPI PUSH2 0x1BC6 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF9 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1DEC JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C2B JUMPI PUSH2 0x1C2A PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0x1DD9 JUMPI PUSH2 0x1CD9 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128D JUMP JUMPDEST PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1CF0 JUMPI PUSH2 0x1CEF PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x2AEE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0x1DE4 SWAP1 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E6B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E24 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FB8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1FAC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F65 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1FD7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1FF0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x200B JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x204D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2044 SWAP2 SWAP1 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208D DUP3 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209D DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP2 EQ PUSH2 0x20A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B8 DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D0 DUP2 PUSH2 0x20BE JUMP JUMPDEST DUP2 EQ PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EB DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2107 JUMPI PUSH2 0x2106 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2114 DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2125 DUP6 DUP3 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2138 DUP2 PUSH2 0x20BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2151 PUSH0 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2179 DUP5 DUP3 DUP6 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2196 DUP2 PUSH2 0x2182 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B1 DUP2 PUSH2 0x218D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH2 0x21CC PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21DA DUP6 DUP3 DUP7 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21EB DUP6 DUP3 DUP7 ADD PUSH2 0x21A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x223F DUP3 PUSH2 0x21F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x225E JUMPI PUSH2 0x225D PUSH2 0x2209 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2270 PUSH2 0x2053 JUMP JUMPDEST SWAP1 POP PUSH2 0x227C DUP3 DUP3 PUSH2 0x2236 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x2209 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x22C2 PUSH2 0x22BD DUP5 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x2267 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22E5 JUMPI PUSH2 0x22E4 PUSH2 0x22AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x230E JUMPI DUP1 PUSH2 0x22FA DUP9 DUP3 PUSH2 0x20AA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x21F5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x233C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x235F JUMPI PUSH2 0x235E PUSH2 0x2209 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2382 PUSH2 0x237D DUP5 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x2267 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x22AC JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23CE JUMPI DUP1 PUSH2 0x23BA DUP9 DUP3 PUSH2 0x20DD JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23A7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23EC JUMPI PUSH2 0x23EB PUSH2 0x21F5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23FC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2370 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x241C JUMPI PUSH2 0x241B PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2445 DUP7 DUP3 DUP8 ADD PUSH2 0x2318 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2472 DUP7 DUP3 DUP8 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2483 DUP7 DUP3 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH2 0x24A1 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AF DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24CE JUMPI PUSH2 0x24CD PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24EB JUMPI PUSH2 0x24EA PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x24F7 DUP6 DUP3 DUP7 ADD PUSH2 0x2318 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2518 JUMPI PUSH2 0x2517 PUSH2 0x2060 JUMP JUMPDEST JUMPDEST PUSH2 0x2524 DUP6 DUP3 DUP7 ADD PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2537 DUP2 PUSH2 0x2182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2550 PUSH0 DUP4 ADD DUP5 PUSH2 0x252E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255F DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2578 PUSH0 DUP4 ADD DUP5 PUSH2 0x2556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2597 JUMPI PUSH2 0x2596 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25A4 DUP9 DUP3 DUP10 ADD PUSH2 0x20AA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x25B5 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x25C6 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x25D7 DUP9 DUP3 DUP10 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25E8 DUP9 DUP3 DUP10 ADD PUSH2 0x21A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2608 PUSH0 DUP4 ADD DUP9 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x2615 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x252E JUMP JUMPDEST PUSH2 0x2622 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x252E JUMP JUMPDEST PUSH2 0x262F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x263C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206E6F7420616C6C6F776564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x268A PUSH1 0x1A DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2695 DUP3 PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26B7 DUP2 PUSH2 0x267E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2740 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x271C JUMPI PUSH2 0x271B PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x272B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2739 DUP6 PUSH2 0x26EB JUMP JUMPDEST SWAP5 POP PUSH2 0x2700 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2758 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2813 JUMP JUMPDEST DUP2 PUSH2 0x2765 JUMPI PUSH0 SWAP1 POP PUSH2 0x2813 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x277B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2785 JUMPI PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2813 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x26BE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x27AE JUMPI PUSH2 0x27AD PUSH2 0x26BE JUMP JUMPDEST JUMPDEST POP PUSH2 0x2813 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x27E9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E3 PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x27F6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26F7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x26BE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP PUSH2 0x285C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2749 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x286E DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2879 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2887 DUP2 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x289E JUMPI PUSH2 0x289D PUSH2 0x26BE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28DC DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x28E7 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28F7 JUMPI PUSH2 0x28F6 PUSH2 0x28A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A206973206E6F742073746F70706564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2936 PUSH1 0x17 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2941 DUP3 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2963 DUP2 PUSH2 0x292A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A204E6F20746F6B656E7320746F20636C61696D0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x299E PUSH1 0x1B DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x29A9 DUP3 PUSH2 0x296A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29CB DUP2 PUSH2 0x2992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2053746174757320697320616C7265616479207365742074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F2074686520646573697265642076616C756500000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2C PUSH1 0x33 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A37 DUP3 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A59 DUP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20746F6B656E732026207072696365732061727261797320 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABA PUSH1 0x2F DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC5 DUP3 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE7 DUP2 PUSH2 0x2AAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x50726573616C653A20546F6B656E206973206E6F7420612070617961626C6520 PUSH0 DUP3 ADD MSTORE PUSH32 0x746F6B656E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B75 PUSH1 0x25 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP3 PUSH2 0x2B1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BA2 DUP2 PUSH2 0x2B69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A2050726963652063616E6E6F74206265207A65726F000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDD PUSH1 0x1D DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE8 DUP3 PUSH2 0x2BA9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C0A DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1B DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C26 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C3E JUMPI PUSH2 0x2C3D PUSH2 0x26BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C4E DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x26BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A206973206E6F7420656E61626C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CBF PUSH1 0x17 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCA DUP3 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CEC DUP2 PUSH2 0x2CB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A204E6F7420656E6F75676820746F6B656E7320746F206265 PUSH0 DUP3 ADD MSTORE PUSH32 0x2073616C65000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D4D PUSH1 0x25 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D58 DUP3 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C653A20416D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DDB PUSH1 0x26 DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE6 DUP3 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E08 DUP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E19 DUP3 PUSH2 0x20BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E24 DUP4 PUSH2 0x20BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2E3C JUMPI PUSH2 0x2E3B PUSH2 0x26BE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E50 DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6B JUMPI PUSH2 0x2E6A PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E78 DUP5 DUP3 DUP6 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E94 PUSH0 DUP4 ADD DUP6 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2EA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2EB6 DUP2 PUSH2 0x218D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ED1 JUMPI PUSH2 0x2ED0 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EDE DUP5 DUP3 DUP6 ADD PUSH2 0x2EA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C653A20526174652063616E6E6F74206265207A65726F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1B PUSH1 0x1C DUP4 PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F26 DUP3 PUSH2 0x2EE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F48 DUP2 PUSH2 0x2F0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F64 DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F7F DUP2 PUSH2 0x2F5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9A JUMPI PUSH2 0x2F99 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FA7 DUP5 DUP3 DUP6 ADD PUSH2 0x2F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FC3 PUSH0 DUP4 ADD DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2FD0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2FDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x212F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH8 0x80F313F9827010F0 0xE5 0xC7 0xDD MSTORE8 PUSH17 0x92C40C9F90B22190734AD684B80DB7C547 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "672:10364:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8954:479;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8390:206;;;;;;;;;;;;;:::i;:::-;;1232:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4871:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1322:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5242:632;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4111:75;;;;;;;;;;;;;:::i;:::-;;6796:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4295:494;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6007:167;;;;;;;;;;;;;:::i;:::-;;1781:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3513:127;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7072:1189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1545:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1876:45:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9510:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6282:221:9;;;;;;;;;;;;;:::i;:::-;;2758:622;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3731:294;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1484:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4031:74;;;;;;;;;;;;;:::i;:::-;;1423:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1716:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6509:123:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1977:58;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1640:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6638:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8954:479;9052:7;9071:14;9116:1;9099:19;;:5;:19;;;9095:309;;9166:4;9142:28;;:13;:20;9156:5;9142:20;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;9134:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9215:13;9231:11;:18;9243:5;9231:18;;;;;;;;;;;;;;;;9215:34;;9307:5;9289:12;;9283:2;:18;;;;:::i;:::-;9273:6;:29;;;;:::i;:::-;9272:41;;;;:::i;:::-;9263:50;;9120:204;9095:309;;;9388:4;;9370:12;;9364:2;:18;;;;:::i;:::-;9354:6;:29;;;;:::i;:::-;9353:40;;;;:::i;:::-;9344:49;;9095:309;9420:6;9413:13;;;8954:479;;;;:::o;8390:206::-;2374:5;2360:19;;:10;;;;;;;;;;;:19;;;2352:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;8499:1:::1;8464:13;:25;8478:10;8464:25;;;;;;;;;;;;;;;:32;;;:36;8443:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;8563:26;8578:10;8563:14;:26::i;:::-;8390:206::o:0;1232:25::-;;;;:::o;2085:46::-;;;;;;;;;;;;;;;;;:::o;4871:253::-;1531:13:0;:11;:13::i;:::-;5013:7:9::1;4988:32;;:13;:21;5002:6;4988:21;;;;;;;;;;;;;;;;;;;;;;;;;:32;;::::0;4980:96:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5110:7;5086:13;:21;5100:6;5086:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;4871:253:::0;;:::o;1322:19::-;;;;:::o;5242:632::-;1531:13:0;:11;:13::i;:::-;5432:7:9::1;:14;5414:7;:14;:32;5393:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;5542:1;5533:5;:10;5529:53;;5566:5;5559:4;:12;;;;5529:53;5596:9;5591:277;5615:7;:14;5611:1;:18;5591:277;;;5690:4;5661:33;;:13;:25;5675:7;5683:1;5675:10;;;;;;;;:::i;:::-;;;;;;;;5661:25;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;5653:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5772:1;5758:7;5766:1;5758:10;;;;;;;;:::i;:::-;;;;;;;;:15:::0;5750:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5847:7;5855:1;5847:10;;;;;;;;:::i;:::-;;;;;;;;5821:11;:23;5833:7;5841:1;5833:10;;;;;;;;:::i;:::-;;;;;;;;5821:23;;;;;;;;;;;;;;;:36;;;;5636:1;5631:6;;;;;:::i;:::-;;;5591:277;;;;5242:632:::0;;;:::o;4111:75::-;1531:13:0;:11;:13::i;:::-;4175:4:9::1;4162:10;;:17;;;;;;;;;;;;;;;;;;4111:75::o:0;6796:106::-;1531:13:0;:11;:13::i;:::-;6870:10:9::1;6862:28;;:33;6891:3;6862:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6796:106:::0;:::o;4295:494::-;1531:13:0;:11;:13::i;:::-;4463:7:9::1;:14;4445:7;:14;:32;4424:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;4565:9;4560:223;4584:7;:14;4580:1;:18;4560:223;;;4641:1;4627:7;4635:1;4627:10;;;;;;;;:::i;:::-;;;;;;;;:15:::0;4619:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4718:4;4690:13;:25;4704:7;4712:1;4704:10;;;;;;;;:::i;:::-;;;;;;;;4690:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4762:7;4770:1;4762:10;;;;;;;;:::i;:::-;;;;;;;;4736:11;:23;4748:7;4756:1;4748:10;;;;;;;;:::i;:::-;;;;;;;;4736:23;;;;;;;;;;;;;;;:36;;;;4600:3;;;;;:::i;:::-;;;;4560:223;;;;4295:494:::0;;:::o;6007:167::-;1531:13:0;:11;:13::i;:::-;2374:5:9::1;2360:19;;:10;;;;;;;;;;;:19;;;2352:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;6079:9:::2;6074:94;6098:6;:13;;;;6094:1;:17;6074:94;;;6132:25;6147:6;6154:1;6147:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6132:14;:25::i;:::-;6113:3;;;;;:::i;:::-;;;;6074:94;;;;6007:167::o:0;1781:30::-;;;;:::o;3513:127::-;1531:13:0;:11;:13::i;:::-;3584:15:9::1;:13;:15::i;:::-;3622:11;3609:10;:24;;;;3513:127:::0;:::o;7072:1189::-;2264:4;2250:18;;:10;;;;;;;;;;;:18;;;2242:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7184:20:::1;7225:1:::0;7207:20:::1;;:6;:20;;::::0;:110:::1;;7280:37;7303:1;7307:9;7280:14;:37::i;:::-;7207:110;;;7238:31;7253:6;7261:7;7238:14;:31::i;:::-;7207:110;7184:133;;7392:18;;7376:12;7358:15;;:30;;;;:::i;:::-;7357:53;7336:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;7506:1;7488:20;;:6;:20;;;7484:255;;7542:1;7532:7;:11;7524:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7600:61;7632:10;7644:7;:5;:7::i;:::-;7653;7607:6;7600:31;;;;:61;;;;;;:::i;:::-;7484:255;;;7700:7;:5;:7::i;:::-;7692:25;;:36;7718:9;7692:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7484:255;7768:12;7749:15;;:31;;;;;;;:::i;:::-;;;;;;;;7790:38;7831:13;:25;7845:10;7831:25;;;;;;;;;;;;;;;7790:66;;7872:12;:19;;;;;;;;;;;;7867:284;;7907:6;7919:10;7907:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7966:4;7944:12;:19;;;:26;;;;;;;;;;;;;;;;;;7867:284;;;8013:1;7991:12;:19;;;:23;7987:164;;;8114:26;8129:10;8114:14;:26::i;:::-;8091:12;:19;;;:49;;;;;;;:::i;:::-;;;;;;;;7987:164;7867:284;8183:12;8160;:19;;;:35;;;;;;;:::i;:::-;;;;;;;;8239:15;8205:12;:31;;:49;;;;7174:1087;;7072:1189:::0;;:::o;1545:33::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1876:45:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;9510:378::-;9570:7;9624:1;9593:13;:20;9607:5;9593:20;;;;;;;;;;;;;;;:27;;;:32;9589:46;;9634:1;9627:8;;;;9589:46;9646:15;9738:5;9695:13;:20;9709:5;9695:20;;;;;;;;;;;;;;;:39;;;9665:15;:69;;;;:::i;:::-;9664:79;;;;:::i;:::-;9646:97;;9754:14;9853:5;9839:10;9814;;9772:13;:20;9786:5;9772:20;;;;;;;;;;;;;;;:27;;;:52;;;;:::i;:::-;:77;;;;:::i;:::-;9771:87;;;;:::i;:::-;9754:104;;9875:6;9868:13;;;;9510:378;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6282:221:9:-;1531:13:0;:11;:13::i;:::-;2374:5:9::1;2360:19;;:10;;;;;;;;;;;:19;;;2352:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;6355:11:::2;6376:9;;;;;;;;;;;6369:27;;;6405:4;6369:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6355:56;;6428:9;;;;;;;;;;;6421:26;;;6448:10;6460:3;6421:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6495:1;6474:18;:22;;;;6345:158;6282:221::o:0;2758:622::-;1531:13:0;:11;:13::i;:::-;2969:1:9::1;2960:5;:10:::0;2952:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3020:5;3013:4;:12;;;;3047:10;3035:9;;:22;;;;;;;;;;;;;;;;;;3080:11;3067:10;;:24;;;;;;;;;;;;;;;;;;3131:9;;;;;;;;;;;3116:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3101:51;;:12;:51;;;;3183:19;3162:18;:40;;;;3225:11;3212:10;:24;;;;3246:127;3294:10;3326:4;3345:18;;3253:9;;;;;;;;;;;3246:34;;;;:127;;;;;;:::i;:::-;2758:622:::0;;;;;:::o;3731:294::-;1531:13:0;:11;:13::i;:::-;3861:19:9::1;3839:18;;:41;;;;;;;:::i;:::-;;;;;;;;3890:128;3938:10;3970:4;3989:19;3897:9;;;;;;;;;;;3890:34;;;;:128;;;;;;:::i;:::-;3731:294:::0;:::o;1484:24::-;;;;:::o;4031:74::-;1531:13:0;:11;:13::i;:::-;4093:5:9::1;4080:10;;:18;;;;;;;;;;;;;;;;;;4031:74::o:0;1423:24::-;;;;;;;;;;;;;:::o;1716:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6509:123:9:-;1531:13:0;:11;:13::i;:::-;6582:43:9::1;6609:10;6621:3;6589:5;6582:26;;;;:43;;;;;:::i;:::-;6509:123:::0;;:::o;1977:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1640:22::-;;;;;;;;;;;;;:::o;6638:152::-;1531:13:0;:11;:13::i;:::-;6701:11:9::1;6722:5;6715:23;;;6747:4;6715:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6701:52;;6763:20;6772:5;6779:3;6763:8;:20::i;:::-;6691:99;6638:152:::0;:::o;10589:445::-;10681:1;10651:13;:20;10665:5;10651:20;;;;;;;;;;;;;;;:27;;;:31;10647:381;;;10698:25;10810:21;10825:5;10810:14;:21::i;:::-;10768:13;:20;10782:5;10768:20;;;;;;;;;;;;;;;:27;;;10726:13;:20;10740:5;10726:20;;;;;;;;;;;;;;;:27;;;:69;;;;:::i;:::-;:105;;;;:::i;:::-;10698:133;;10888:1;10858:13;:20;10872:5;10858:20;;;;;;;;;;;;;;;:27;;:31;;;;10933:1;10903:13;:20;10917:5;10903:20;;;;;;;;;;;;;;;:27;;:31;;;;10961:56;10992:5;10999:17;10968:9;;;;;;;;;;;10961:30;;;;:56;;;;;:::i;:::-;10684:344;10647:381;10589:445;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10065:330:9:-;10114:9;10109:280;10133:6;:13;;;;10129:1;:17;10109:280;;;10205:1;10171:13;:24;10185:6;10192:1;10185:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10171:24;;;;;;;;;;;;;;;:31;;;:35;10167:212;;;10260:25;10275:6;10282:1;10275:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10260:14;:25::i;:::-;10226:13;:24;10240:6;10247:1;10240:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10226:24;;;;;;;;;;;;;;;:31;;:59;;;;10349:15;10303:13;:24;10317:6;10324:1;10317:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10303:24;;;;;;;;;;;;;;;:43;;:61;;;;10167:212;10148:3;;;;;:::i;:::-;;;;10109:280;;;;10065:330::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:116::-;2530:21;2545:5;2530:21;:::i;:::-;2523:5;2520:32;2510:60;;2566:1;2563;2556:12;2510:60;2460:116;:::o;2582:133::-;2625:5;2663:6;2650:20;2641:29;;2679:30;2703:5;2679:30;:::i;:::-;2582:133;;;;:::o;2721:468::-;2786:6;2794;2843:2;2831:9;2822:7;2818:23;2814:32;2811:119;;;2849:79;;:::i;:::-;2811:119;2969:1;2994:53;3039:7;3030:6;3019:9;3015:22;2994:53;:::i;:::-;2984:63;;2940:117;3096:2;3122:50;3164:7;3155:6;3144:9;3140:22;3122:50;:::i;:::-;3112:60;;3067:115;2721:468;;;;;:::o;3195:117::-;3304:1;3301;3294:12;3318:102;3359:6;3410:2;3406:7;3401:2;3394:5;3390:14;3386:28;3376:38;;3318:102;;;:::o;3426:180::-;3474:77;3471:1;3464:88;3571:4;3568:1;3561:15;3595:4;3592:1;3585:15;3612:281;3695:27;3717:4;3695:27;:::i;:::-;3687:6;3683:40;3825:6;3813:10;3810:22;3789:18;3777:10;3774:34;3771:62;3768:88;;;3836:18;;:::i;:::-;3768:88;3876:10;3872:2;3865:22;3655:238;3612:281;;:::o;3899:129::-;3933:6;3960:20;;:::i;:::-;3950:30;;3989:33;4017:4;4009:6;3989:33;:::i;:::-;3899:129;;;:::o;4034:311::-;4111:4;4201:18;4193:6;4190:30;4187:56;;;4223:18;;:::i;:::-;4187:56;4273:4;4265:6;4261:17;4253:25;;4333:4;4327;4323:15;4315:23;;4034:311;;;:::o;4351:117::-;4460:1;4457;4450:12;4491:710;4587:5;4612:81;4628:64;4685:6;4628:64;:::i;:::-;4612:81;:::i;:::-;4603:90;;4713:5;4742:6;4735:5;4728:21;4776:4;4769:5;4765:16;4758:23;;4829:4;4821:6;4817:17;4809:6;4805:30;4858:3;4850:6;4847:15;4844:122;;;4877:79;;:::i;:::-;4844:122;4992:6;4975:220;5009:6;5004:3;5001:15;4975:220;;;5084:3;5113:37;5146:3;5134:10;5113:37;:::i;:::-;5108:3;5101:50;5180:4;5175:3;5171:14;5164:21;;5051:144;5035:4;5030:3;5026:14;5019:21;;4975:220;;;4979:21;4593:608;;4491:710;;;;;:::o;5224:370::-;5295:5;5344:3;5337:4;5329:6;5325:17;5321:27;5311:122;;5352:79;;:::i;:::-;5311:122;5469:6;5456:20;5494:94;5584:3;5576:6;5569:4;5561:6;5557:17;5494:94;:::i;:::-;5485:103;;5301:293;5224:370;;;;:::o;5600:311::-;5677:4;5767:18;5759:6;5756:30;5753:56;;;5789:18;;:::i;:::-;5753:56;5839:4;5831:6;5827:17;5819:25;;5899:4;5893;5889:15;5881:23;;5600:311;;;:::o;5934:710::-;6030:5;6055:81;6071:64;6128:6;6071:64;:::i;:::-;6055:81;:::i;:::-;6046:90;;6156:5;6185:6;6178:5;6171:21;6219:4;6212:5;6208:16;6201:23;;6272:4;6264:6;6260:17;6252:6;6248:30;6301:3;6293:6;6290:15;6287:122;;;6320:79;;:::i;:::-;6287:122;6435:6;6418:220;6452:6;6447:3;6444:15;6418:220;;;6527:3;6556:37;6589:3;6577:10;6556:37;:::i;:::-;6551:3;6544:50;6623:4;6618:3;6614:14;6607:21;;6494:144;6478:4;6473:3;6469:14;6462:21;;6418:220;;;6422:21;6036:608;;5934:710;;;;;:::o;6667:370::-;6738:5;6787:3;6780:4;6772:6;6768:17;6764:27;6754:122;;6795:79;;:::i;:::-;6754:122;6912:6;6899:20;6937:94;7027:3;7019:6;7012:4;7004:6;7000:17;6937:94;:::i;:::-;6928:103;;6744:293;6667:370;;;;:::o;7043:1039::-;7170:6;7178;7186;7235:2;7223:9;7214:7;7210:23;7206:32;7203:119;;;7241:79;;:::i;:::-;7203:119;7389:1;7378:9;7374:17;7361:31;7419:18;7411:6;7408:30;7405:117;;;7441:79;;:::i;:::-;7405:117;7546:78;7616:7;7607:6;7596:9;7592:22;7546:78;:::i;:::-;7536:88;;7332:302;7701:2;7690:9;7686:18;7673:32;7732:18;7724:6;7721:30;7718:117;;;7754:79;;:::i;:::-;7718:117;7859:78;7929:7;7920:6;7909:9;7905:22;7859:78;:::i;:::-;7849:88;;7644:303;7986:2;8012:53;8057:7;8048:6;8037:9;8033:22;8012:53;:::i;:::-;8002:63;;7957:118;7043:1039;;;;;:::o;8088:329::-;8147:6;8196:2;8184:9;8175:7;8171:23;8167:32;8164:119;;;8202:79;;:::i;:::-;8164:119;8322:1;8347:53;8392:7;8383:6;8372:9;8368:22;8347:53;:::i;:::-;8337:63;;8293:117;8088:329;;;;:::o;8423:894::-;8541:6;8549;8598:2;8586:9;8577:7;8573:23;8569:32;8566:119;;;8604:79;;:::i;:::-;8566:119;8752:1;8741:9;8737:17;8724:31;8782:18;8774:6;8771:30;8768:117;;;8804:79;;:::i;:::-;8768:117;8909:78;8979:7;8970:6;8959:9;8955:22;8909:78;:::i;:::-;8899:88;;8695:302;9064:2;9053:9;9049:18;9036:32;9095:18;9087:6;9084:30;9081:117;;;9117:79;;:::i;:::-;9081:117;9222:78;9292:7;9283:6;9272:9;9268:22;9222:78;:::i;:::-;9212:88;;9007:303;8423:894;;;;;:::o;9323:109::-;9404:21;9419:5;9404:21;:::i;:::-;9399:3;9392:34;9323:109;;:::o;9438:210::-;9525:4;9563:2;9552:9;9548:18;9540:26;;9576:65;9638:1;9627:9;9623:17;9614:6;9576:65;:::i;:::-;9438:210;;;;:::o;9654:118::-;9741:24;9759:5;9741:24;:::i;:::-;9736:3;9729:37;9654:118;;:::o;9778:222::-;9871:4;9909:2;9898:9;9894:18;9886:26;;9922:71;9990:1;9979:9;9975:17;9966:6;9922:71;:::i;:::-;9778:222;;;;:::o;10006:905::-;10098:6;10106;10114;10122;10130;10179:3;10167:9;10158:7;10154:23;10150:33;10147:120;;;10186:79;;:::i;:::-;10147:120;10306:1;10331:53;10376:7;10367:6;10356:9;10352:22;10331:53;:::i;:::-;10321:63;;10277:117;10433:2;10459:53;10504:7;10495:6;10484:9;10480:22;10459:53;:::i;:::-;10449:63;;10404:118;10561:2;10587:53;10632:7;10623:6;10612:9;10608:22;10587:53;:::i;:::-;10577:63;;10532:118;10689:2;10715:53;10760:7;10751:6;10740:9;10736:22;10715:53;:::i;:::-;10705:63;;10660:118;10817:3;10844:50;10886:7;10877:6;10866:9;10862:22;10844:50;:::i;:::-;10834:60;;10788:116;10006:905;;;;;;;;:::o;10917:640::-;11110:4;11148:3;11137:9;11133:19;11125:27;;11162:71;11230:1;11219:9;11215:17;11206:6;11162:71;:::i;:::-;11243:66;11305:2;11294:9;11290:18;11281:6;11243:66;:::i;:::-;11319;11381:2;11370:9;11366:18;11357:6;11319:66;:::i;:::-;11395:72;11463:2;11452:9;11448:18;11439:6;11395:72;:::i;:::-;11477:73;11545:3;11534:9;11530:19;11521:6;11477:73;:::i;:::-;10917:640;;;;;;;;:::o;11563:169::-;11647:11;11681:6;11676:3;11669:19;11721:4;11716:3;11712:14;11697:29;;11563:169;;;;:::o;11738:176::-;11878:28;11874:1;11866:6;11862:14;11855:52;11738:176;:::o;11920:366::-;12062:3;12083:67;12147:2;12142:3;12083:67;:::i;:::-;12076:74;;12159:93;12248:3;12159:93;:::i;:::-;12277:2;12272:3;12268:12;12261:19;;11920:366;;;:::o;12292:419::-;12458:4;12496:2;12485:9;12481:18;12473:26;;12545:9;12539:4;12535:20;12531:1;12520:9;12516:17;12509:47;12573:131;12699:4;12573:131;:::i;:::-;12565:139;;12292:419;;;:::o;12717:180::-;12765:77;12762:1;12755:88;12862:4;12859:1;12852:15;12886:4;12883:1;12876:15;12903:102;12945:8;12992:5;12989:1;12985:13;12964:34;;12903:102;;;:::o;13011:848::-;13072:5;13079:4;13103:6;13094:15;;13127:5;13118:14;;13141:712;13162:1;13152:8;13149:15;13141:712;;;13257:4;13252:3;13248:14;13242:4;13239:24;13236:50;;;13266:18;;:::i;:::-;13236:50;13316:1;13306:8;13302:16;13299:451;;;13731:4;13724:5;13720:16;13711:25;;13299:451;13781:4;13775;13771:15;13763:23;;13811:32;13834:8;13811:32;:::i;:::-;13799:44;;13141:712;;;13011:848;;;;;;;:::o;13865:1073::-;13919:5;14110:8;14100:40;;14131:1;14122:10;;14133:5;;14100:40;14159:4;14149:36;;14176:1;14167:10;;14178:5;;14149:36;14245:4;14293:1;14288:27;;;;14329:1;14324:191;;;;14238:277;;14288:27;14306:1;14297:10;;14308:5;;;14324:191;14369:3;14359:8;14356:17;14353:43;;;14376:18;;:::i;:::-;14353:43;14425:8;14422:1;14418:16;14409:25;;14460:3;14453:5;14450:14;14447:40;;;14467:18;;:::i;:::-;14447:40;14500:5;;;14238:277;;14624:2;14614:8;14611:16;14605:3;14599:4;14596:13;14592:36;14574:2;14564:8;14561:16;14556:2;14550:4;14547:12;14543:35;14527:111;14524:246;;;14680:8;14674:4;14670:19;14661:28;;14715:3;14708:5;14705:14;14702:40;;;14722:18;;:::i;:::-;14702:40;14755:5;;14524:246;14795:42;14833:3;14823:8;14817:4;14814:1;14795:42;:::i;:::-;14780:57;;;;14869:4;14864:3;14860:14;14853:5;14850:25;14847:51;;;14878:18;;:::i;:::-;14847:51;14927:4;14920:5;14916:16;14907:25;;13865:1073;;;;;;:::o;14944:285::-;15004:5;15028:23;15046:4;15028:23;:::i;:::-;15020:31;;15072:27;15090:8;15072:27;:::i;:::-;15060:39;;15118:104;15155:66;15145:8;15139:4;15118:104;:::i;:::-;15109:113;;14944:285;;;;:::o;15235:410::-;15275:7;15298:20;15316:1;15298:20;:::i;:::-;15293:25;;15332:20;15350:1;15332:20;:::i;:::-;15327:25;;15387:1;15384;15380:9;15409:30;15427:11;15409:30;:::i;:::-;15398:41;;15588:1;15579:7;15575:15;15572:1;15569:22;15549:1;15542:9;15522:83;15499:139;;15618:18;;:::i;:::-;15499:139;15283:362;15235:410;;;;:::o;15651:180::-;15699:77;15696:1;15689:88;15796:4;15793:1;15786:15;15820:4;15817:1;15810:15;15837:185;15877:1;15894:20;15912:1;15894:20;:::i;:::-;15889:25;;15928:20;15946:1;15928:20;:::i;:::-;15923:25;;15967:1;15957:35;;15972:18;;:::i;:::-;15957:35;16014:1;16011;16007:9;16002:14;;15837:185;;;;:::o;16028:173::-;16168:25;16164:1;16156:6;16152:14;16145:49;16028:173;:::o;16207:366::-;16349:3;16370:67;16434:2;16429:3;16370:67;:::i;:::-;16363:74;;16446:93;16535:3;16446:93;:::i;:::-;16564:2;16559:3;16555:12;16548:19;;16207:366;;;:::o;16579:419::-;16745:4;16783:2;16772:9;16768:18;16760:26;;16832:9;16826:4;16822:20;16818:1;16807:9;16803:17;16796:47;16860:131;16986:4;16860:131;:::i;:::-;16852:139;;16579:419;;;:::o;17004:177::-;17144:29;17140:1;17132:6;17128:14;17121:53;17004:177;:::o;17187:366::-;17329:3;17350:67;17414:2;17409:3;17350:67;:::i;:::-;17343:74;;17426:93;17515:3;17426:93;:::i;:::-;17544:2;17539:3;17535:12;17528:19;;17187:366;;;:::o;17559:419::-;17725:4;17763:2;17752:9;17748:18;17740:26;;17812:9;17806:4;17802:20;17798:1;17787:9;17783:17;17776:47;17840:131;17966:4;17840:131;:::i;:::-;17832:139;;17559:419;;;:::o;17984:238::-;18124:34;18120:1;18112:6;18108:14;18101:58;18193:21;18188:2;18180:6;18176:15;18169:46;17984:238;:::o;18228:366::-;18370:3;18391:67;18455:2;18450:3;18391:67;:::i;:::-;18384:74;;18467:93;18556:3;18467:93;:::i;:::-;18585:2;18580:3;18576:12;18569:19;;18228:366;;;:::o;18600:419::-;18766:4;18804:2;18793:9;18789:18;18781:26;;18853:9;18847:4;18843:20;18839:1;18828:9;18824:17;18817:47;18881:131;19007:4;18881:131;:::i;:::-;18873:139;;18600:419;;;:::o;19025:234::-;19165:34;19161:1;19153:6;19149:14;19142:58;19234:17;19229:2;19221:6;19217:15;19210:42;19025:234;:::o;19265:366::-;19407:3;19428:67;19492:2;19487:3;19428:67;:::i;:::-;19421:74;;19504:93;19593:3;19504:93;:::i;:::-;19622:2;19617:3;19613:12;19606:19;;19265:366;;;:::o;19637:419::-;19803:4;19841:2;19830:9;19826:18;19818:26;;19890:9;19884:4;19880:20;19876:1;19865:9;19861:17;19854:47;19918:131;20044:4;19918:131;:::i;:::-;19910:139;;19637:419;;;:::o;20062:180::-;20110:77;20107:1;20100:88;20207:4;20204:1;20197:15;20231:4;20228:1;20221:15;20248:224;20388:34;20384:1;20376:6;20372:14;20365:58;20457:7;20452:2;20444:6;20440:15;20433:32;20248:224;:::o;20478:366::-;20620:3;20641:67;20705:2;20700:3;20641:67;:::i;:::-;20634:74;;20717:93;20806:3;20717:93;:::i;:::-;20835:2;20830:3;20826:12;20819:19;;20478:366;;;:::o;20850:419::-;21016:4;21054:2;21043:9;21039:18;21031:26;;21103:9;21097:4;21093:20;21089:1;21078:9;21074:17;21067:47;21131:131;21257:4;21131:131;:::i;:::-;21123:139;;20850:419;;;:::o;21275:179::-;21415:31;21411:1;21403:6;21399:14;21392:55;21275:179;:::o;21460:366::-;21602:3;21623:67;21687:2;21682:3;21623:67;:::i;:::-;21616:74;;21699:93;21788:3;21699:93;:::i;:::-;21817:2;21812:3;21808:12;21801:19;;21460:366;;;:::o;21832:419::-;21998:4;22036:2;22025:9;22021:18;22013:26;;22085:9;22079:4;22075:20;22071:1;22060:9;22056:17;22049:47;22113:131;22239:4;22113:131;:::i;:::-;22105:139;;21832:419;;;:::o;22257:191::-;22297:3;22316:20;22334:1;22316:20;:::i;:::-;22311:25;;22350:20;22368:1;22350:20;:::i;:::-;22345:25;;22393:1;22390;22386:9;22379:16;;22414:3;22411:1;22408:10;22405:36;;;22421:18;;:::i;:::-;22405:36;22257:191;;;;:::o;22454:233::-;22493:3;22516:24;22534:5;22516:24;:::i;:::-;22507:33;;22562:66;22555:5;22552:77;22549:103;;22632:18;;:::i;:::-;22549:103;22679:1;22672:5;22668:13;22661:20;;22454:233;;;:::o;22693:173::-;22833:25;22829:1;22821:6;22817:14;22810:49;22693:173;:::o;22872:366::-;23014:3;23035:67;23099:2;23094:3;23035:67;:::i;:::-;23028:74;;23111:93;23200:3;23111:93;:::i;:::-;23229:2;23224:3;23220:12;23213:19;;22872:366;;;:::o;23244:419::-;23410:4;23448:2;23437:9;23433:18;23425:26;;23497:9;23491:4;23487:20;23483:1;23472:9;23468:17;23461:47;23525:131;23651:4;23525:131;:::i;:::-;23517:139;;23244:419;;;:::o;23669:224::-;23809:34;23805:1;23797:6;23793:14;23786:58;23878:7;23873:2;23865:6;23861:15;23854:32;23669:224;:::o;23899:366::-;24041:3;24062:67;24126:2;24121:3;24062:67;:::i;:::-;24055:74;;24138:93;24227:3;24138:93;:::i;:::-;24256:2;24251:3;24247:12;24240:19;;23899:366;;;:::o;24271:419::-;24437:4;24475:2;24464:9;24460:18;24452:26;;24524:9;24518:4;24514:20;24510:1;24499:9;24495:17;24488:47;24552:131;24678:4;24552:131;:::i;:::-;24544:139;;24271:419;;;:::o;24696:225::-;24836:34;24832:1;24824:6;24820:14;24813:58;24905:8;24900:2;24892:6;24888:15;24881:33;24696:225;:::o;24927:366::-;25069:3;25090:67;25154:2;25149:3;25090:67;:::i;:::-;25083:74;;25166:93;25255:3;25166:93;:::i;:::-;25284:2;25279:3;25275:12;25268:19;;24927:366;;;:::o;25299:419::-;25465:4;25503:2;25492:9;25488:18;25480:26;;25552:9;25546:4;25542:20;25538:1;25527:9;25523:17;25516:47;25580:131;25706:4;25580:131;:::i;:::-;25572:139;;25299:419;;;:::o;25724:194::-;25764:4;25784:20;25802:1;25784:20;:::i;:::-;25779:25;;25818:20;25836:1;25818:20;:::i;:::-;25813:25;;25862:1;25859;25855:9;25847:17;;25886:1;25880:4;25877:11;25874:37;;;25891:18;;:::i;:::-;25874:37;25724:194;;;;:::o;25924:143::-;25981:5;26012:6;26006:13;25997:22;;26028:33;26055:5;26028:33;:::i;:::-;25924:143;;;;:::o;26073:351::-;26143:6;26192:2;26180:9;26171:7;26167:23;26163:32;26160:119;;;26198:79;;:::i;:::-;26160:119;26318:1;26343:64;26399:7;26390:6;26379:9;26375:22;26343:64;:::i;:::-;26333:74;;26289:128;26073:351;;;;:::o;26430:332::-;26551:4;26589:2;26578:9;26574:18;26566:26;;26602:71;26670:1;26659:9;26655:17;26646:6;26602:71;:::i;:::-;26683:72;26751:2;26740:9;26736:18;26727:6;26683:72;:::i;:::-;26430:332;;;;;:::o;26768:137::-;26822:5;26853:6;26847:13;26838:22;;26869:30;26893:5;26869:30;:::i;:::-;26768:137;;;;:::o;26911:345::-;26978:6;27027:2;27015:9;27006:7;27002:23;26998:32;26995:119;;;27033:79;;:::i;:::-;26995:119;27153:1;27178:61;27231:7;27222:6;27211:9;27207:22;27178:61;:::i;:::-;27168:71;;27124:125;26911:345;;;;:::o;27262:178::-;27402:30;27398:1;27390:6;27386:14;27379:54;27262:178;:::o;27446:366::-;27588:3;27609:67;27673:2;27668:3;27609:67;:::i;:::-;27602:74;;27685:93;27774:3;27685:93;:::i;:::-;27803:2;27798:3;27794:12;27787:19;;27446:366;;;:::o;27818:419::-;27984:4;28022:2;28011:9;28007:18;27999:26;;28071:9;28065:4;28061:20;28057:1;28046:9;28042:17;28035:47;28099:131;28225:4;28099:131;:::i;:::-;28091:139;;27818:419;;;:::o;28243:86::-;28278:7;28318:4;28311:5;28307:16;28296:27;;28243:86;;;:::o;28335:118::-;28406:22;28422:5;28406:22;:::i;:::-;28399:5;28396:33;28386:61;;28443:1;28440;28433:12;28386:61;28335:118;:::o;28459:139::-;28514:5;28545:6;28539:13;28530:22;;28561:31;28586:5;28561:31;:::i;:::-;28459:139;;;;:::o;28604:347::-;28672:6;28721:2;28709:9;28700:7;28696:23;28692:32;28689:119;;;28727:79;;:::i;:::-;28689:119;28847:1;28872:62;28926:7;28917:6;28906:9;28902:22;28872:62;:::i;:::-;28862:72;;28818:126;28604:347;;;;:::o;28957:442::-;29106:4;29144:2;29133:9;29129:18;29121:26;;29157:71;29225:1;29214:9;29210:17;29201:6;29157:71;:::i;:::-;29238:72;29306:2;29295:9;29291:18;29282:6;29238:72;:::i;:::-;29320;29388:2;29377:9;29373:18;29364:6;29320:72;:::i;:::-;28957:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2463000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPayableTokens(address[],uint256[])": "infinite",
								"buyToken(address,uint256)": "infinite",
								"buyers(uint256)": "5033",
								"buyersDetails(address)": "infinite",
								"getBuyerReward(address)": "infinite",
								"getTokenAmount(address,uint256)": "infinite",
								"increaseTotalTokensforSale(uint256)": "infinite",
								"multiplier()": "2516",
								"owner()": "2627",
								"payableTokenStatus(address,bool)": "infinite",
								"payableTokens(address)": "2901",
								"rate()": "2515",
								"renounceOwnership()": "infinite",
								"resumeSale()": "infinite",
								"saleStatus()": "2554",
								"saleToken()": "2575",
								"saleTokenDec()": "2536",
								"setMultiplier(uint256)": "infinite",
								"setParams(address,uint256,uint256,uint256,bool)": "infinite",
								"stopSale()": "infinite",
								"tokenPrices(address)": "2848",
								"totalTokensSold()": "2470",
								"totalTokensforSale()": "2536",
								"transferOwnership(address)": "infinite",
								"unlockAllTokens()": "infinite",
								"unlockToken()": "infinite",
								"updateTokenRate(address[],uint256[],uint256)": "infinite",
								"withdraw(address,uint256)": "infinite",
								"withdrawAll(address)": "infinite",
								"withdrawAllSaleTokens()": "infinite",
								"withdrawCurrency(uint256)": "infinite"
							},
							"internal": {
								"unlockTokenFor(address)": "infinite",
								"updateRewards()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2481,
									"end": 2491,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2515,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2502,
									"end": 2512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2502,
									"end": 2512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2520,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 11036,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee6780f313f9827010f0e5c7dd537092c40c9f90b22190734ad684b80db7c54764736f6c63430008140033",
									".code": [
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "E36B0B37"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F4739EE3"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F9020E33"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "FA09E630"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "E36B0B37"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "E985E367"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F2AA8218"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "9AE2FD34"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "9AE2FD34"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "A01BD50C"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "A2826373"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "ACE1741C"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "80655EEF"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "828B7953"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "33E364CB"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "63B20117"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "63B20117"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "641579A6"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "68F8FC10"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "6BCEDF9C"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "33E364CB"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "3C00A36C"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "5413C1C8"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "5E0BE607"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "204120BC"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "204120BC"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "29D429A8"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "2C4E722E"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "3115329E"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "115ECE4C"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "18A24B5B"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "1B3ED722"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 11036,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 8954,
											"end": 9433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8954,
											"end": 9433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 8954,
											"end": 9433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 8390,
											"end": 8596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1232,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1232,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2085,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2085,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2085,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4871,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1322,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1322,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5242,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5242,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4111,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6796,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6796,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4295,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4295,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6007,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1781,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1781,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3513,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3513,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 7072,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7072,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1545,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1545,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1876,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1876,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1876,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9510,
											"end": 9888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9510,
											"end": 9888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9510,
											"end": 9888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6282,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2758,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2758,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3731,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3731,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1484,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1484,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4031,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1423,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1423,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1716,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1716,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1716,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 6509,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6509,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1977,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1977,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1977,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1640,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1640,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6638,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6638,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9052,
											"end": 9059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9104,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9118,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9170,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9142,
											"end": 9170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9155,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9142,
											"end": 9162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9170,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9134,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 9134,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9248,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9307,
											"end": 9312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9289,
											"end": 9301,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9289,
											"end": 9301,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 9283,
											"end": 9301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9273,
											"end": 9279,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9273,
											"end": 9302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 9273,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9272,
											"end": 9313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9272,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9388,
											"end": 9392,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9388,
											"end": 9392,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9370,
											"end": 9382,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 9364,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9360,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9354,
											"end": 9383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 9354,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9353,
											"end": 9393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 9353,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9344,
											"end": 9393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 9095,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9420,
											"end": 9426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8954,
											"end": 9433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 8390,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2352,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2352,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8488,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8489,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8464,
											"end": 8500,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8443,
											"end": 8553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8443,
											"end": 8553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 8578,
											"end": 8588,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8563,
											"end": 8589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8563,
											"end": 8589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 8563,
											"end": 8589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8390,
											"end": 8596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5008,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4988,
											"end": 5009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4980,
											"end": 5076,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4980,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 5124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 5439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5414,
											"end": 5421,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5414,
											"end": 5428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5414,
											"end": 5446,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 5393,
											"end": 5519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5393,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5543,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 5529,
											"end": 5582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5559,
											"end": 5571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5571,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5559,
											"end": 5571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 5529,
											"end": 5582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5596,
											"end": 5605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5622,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5611,
											"end": 5629,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5661,
											"end": 5694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5682,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5684,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5675,
											"end": 5685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5685,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5661,
											"end": 5686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5694,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5653,
											"end": 5736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5653,
											"end": 5736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5772,
											"end": 5773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5765,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5767,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5758,
											"end": 5768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5750,
											"end": 5807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5750,
											"end": 5807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5847,
											"end": 5857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5833,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5842,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5833,
											"end": 5843,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5843,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5844,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5631,
											"end": 5637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5631,
											"end": 5637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4111,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4162,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4162,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4179,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6870,
											"end": 6880,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6862,
											"end": 6890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 6891,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6895,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4463,
											"end": 4470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4477,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4459,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4477,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4424,
											"end": 4550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4424,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4591,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4598,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4634,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4636,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4627,
											"end": 4637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4619,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4619,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4690,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4711,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4713,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4704,
											"end": 4714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4690,
											"end": 4722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4762,
											"end": 4772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4755,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4757,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4748,
											"end": 4758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4758,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4759,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4772,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4600,
											"end": 4603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6007,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2352,
											"end": 2407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6104,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6098,
											"end": 6111,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6111,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6111,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6111,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6094,
											"end": 6095,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6094,
											"end": 6111,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6157,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 6147,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6154,
											"end": 6155,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 6147,
											"end": 6156,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6147,
											"end": 6156,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6146,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6132,
											"end": 6157,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6157,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 6132,
											"end": 6157,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 6113,
											"end": 6116,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6116,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3584,
											"end": 3597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3584,
											"end": 3599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3584,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3622,
											"end": 3633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3609,
											"end": 3633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2268,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2242,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2242,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7207,
											"end": 7227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7207,
											"end": 7227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7227,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7303,
											"end": 7304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7316,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7280,
											"end": 7317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7280,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7253,
											"end": 7259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7268,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7238,
											"end": 7269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7238,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7207,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7392,
											"end": 7410,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7376,
											"end": 7388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7358,
											"end": 7373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 7358,
											"end": 7388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7358,
											"end": 7388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7410,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7336,
											"end": 7473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7336,
											"end": 7473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7494,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7488,
											"end": 7508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7508,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7539,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7543,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 7524,
											"end": 7586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7524,
											"end": 7586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7632,
											"end": 7642,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 7644,
											"end": 7649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 7644,
											"end": 7651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 7644,
											"end": 7651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7660,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7607,
											"end": 7613,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7600,
											"end": 7631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7600,
											"end": 7631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7600,
											"end": 7661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7700,
											"end": 7705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 7700,
											"end": 7707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7700,
											"end": 7707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7692,
											"end": 7717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 7718,
											"end": 7727,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7484,
											"end": 7739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7749,
											"end": 7764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 7749,
											"end": 7780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7855,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7856,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7790,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7872,
											"end": 7891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7919,
											"end": 7929,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7944,
											"end": 7956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7944,
											"end": 7963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7944,
											"end": 7970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8010,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8010,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8014,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7987,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8129,
											"end": 8139,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 8114,
											"end": 8140,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8114,
											"end": 8140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8091,
											"end": 8110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8091,
											"end": 8140,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7987,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7867,
											"end": 8151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8160,
											"end": 8195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8160,
											"end": 8195,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8254,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8205,
											"end": 8236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8254,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 8261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 8261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 8261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9570,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9606,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9612,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9613,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9620,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9625,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9589,
											"end": 9635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9627,
											"end": 9635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9627,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9627,
											"end": 9635,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9635,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9589,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9646,
											"end": 9661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9743,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 9695,
											"end": 9708,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9714,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9695,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9695,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9680,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9665,
											"end": 9734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9665,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9664,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 9664,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9646,
											"end": 9743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9646,
											"end": 9743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9858,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 9839,
											"end": 9849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9785,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9786,
											"end": 9791,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9799,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9772,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9772,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9772,
											"end": 9849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9772,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9771,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9771,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9881,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 9881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 6282,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2360,
											"end": 2370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2379,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2352,
											"end": 2407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2352,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6376,
											"end": 6385,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6369,
											"end": 6396,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6405,
											"end": 6409,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6369,
											"end": 6411,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6369,
											"end": 6411,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6369,
											"end": 6411,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6411,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6411,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6428,
											"end": 6437,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6421,
											"end": 6447,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6447,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 6448,
											"end": 6458,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6463,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6421,
											"end": 6464,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 6421,
											"end": 6464,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6421,
											"end": 6464,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6474,
											"end": 6492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6474,
											"end": 6496,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6496,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6496,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6496,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6345,
											"end": 6503,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2970,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2952,
											"end": 3003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2952,
											"end": 3003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3013,
											"end": 3025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3025,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3057,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3035,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3067,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3131,
											"end": 3140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3152,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 3116,
											"end": 3152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3116,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3202,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3202,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3212,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3236,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3294,
											"end": 3304,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3330,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3345,
											"end": 3363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3246,
											"end": 3280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3246,
											"end": 3280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3246,
											"end": 3373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3839,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3839,
											"end": 3880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3938,
											"end": 3948,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3970,
											"end": 3974,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4008,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3897,
											"end": 3906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3890,
											"end": 3924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3890,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3890,
											"end": 4018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4031,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4080,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4080,
											"end": 4098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6609,
											"end": 6619,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6624,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6589,
											"end": 6594,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6582,
											"end": 6608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6582,
											"end": 6608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6582,
											"end": 6625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6715,
											"end": 6738,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6747,
											"end": 6751,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6715,
											"end": 6753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6715,
											"end": 6753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 6715,
											"end": 6753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6772,
											"end": 6777,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 6782,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6763,
											"end": 6783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 6763,
											"end": 6783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6691,
											"end": 6790,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11034,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10589,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10681,
											"end": 10682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10670,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10678,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10682,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 11028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 10647,
											"end": 11028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10810,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 10810,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10810,
											"end": 10831,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 10810,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10781,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10787,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10795,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10768,
											"end": 10795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10768,
											"end": 10795,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10739,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10745,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10746,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10753,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 10726,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10726,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 10726,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10726,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10871,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10878,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10889,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10903,
											"end": 10916,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10917,
											"end": 10922,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10903,
											"end": 10923,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10930,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10903,
											"end": 10930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10934,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 10992,
											"end": 10997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10999,
											"end": 11016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10968,
											"end": 10977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 10991,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10961,
											"end": 10991,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 10961,
											"end": 10991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 10961,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10684,
											"end": 11028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 11028,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 10647,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10589,
											"end": 11034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10395,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10065,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10114,
											"end": 10123,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10133,
											"end": 10146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10146,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10146,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10184,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10191,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10185,
											"end": 10194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10195,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10206,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 10167,
											"end": 10379,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10282,
											"end": 10283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10275,
											"end": 10284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 10260,
											"end": 10285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10285,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 10260,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10239,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10246,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10240,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10226,
											"end": 10250,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10257,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10226,
											"end": 10257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10285,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10226,
											"end": 10285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10364,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10316,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10323,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10317,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10327,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10346,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10303,
											"end": 10346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10364,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10379,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 10167,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10148,
											"end": 10151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10148,
											"end": 10151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2448,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2576,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2460,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 2545,
											"end": 2550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 2530,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2551,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 2530,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 2510,
											"end": 2570,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2510,
											"end": 2570,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 2510,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2670,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2679,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2841,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2846,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 2811,
											"end": 2930,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 2849,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 2849,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2928,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 2849,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2930,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 2811,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 2994,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3047,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 2994,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3122,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3312,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 3195,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3306,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3420,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3318,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3386,
											"end": 3414,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3376,
											"end": 3414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 3426,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3551,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3552,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 3576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3600,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3893,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3612,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 3717,
											"end": 3721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3695,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3693,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3832,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3808,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3833,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3856,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 3768,
											"end": 3856,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 3836,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 3836,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3856,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 3768,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3886,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3655,
											"end": 3893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 4028,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3899,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 3960,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3960,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3960,
											"end": 3980,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 3960,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 3989,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 3989,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 4028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 4028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 4028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 4028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4345,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4034,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4111,
											"end": 4115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4243,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 4187,
											"end": 4243,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4223,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4187,
											"end": 4243,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 4187,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4273,
											"end": 4277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4278,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4253,
											"end": 4278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4333,
											"end": 4337,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4468,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4351,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4462,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4587,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 4628,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 4685,
											"end": 4691,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4628,
											"end": 4692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4692,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 4628,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4612,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 4612,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4713,
											"end": 4718,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 4749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4834,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4966,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 4844,
											"end": 4966,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4877,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4966,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 4844,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 5146,
											"end": 5149,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 5113,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5113,
											"end": 5150,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 5113,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5111,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5178,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5171,
											"end": 5185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 4975,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 5000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 5201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 5201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5329,
											"end": 5335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5348,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 5352,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5352,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5352,
											"end": 5431,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 5352,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5476,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 5584,
											"end": 5587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5573,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5494,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5588,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 5494,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5224,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5911,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5600,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5785,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5756,
											"end": 5786,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5809,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5753,
											"end": 5809,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 5789,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5809,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5753,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5844,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5893,
											"end": 5897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5889,
											"end": 5904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5911,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6030,
											"end": 6035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 6071,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 6055,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6260,
											"end": 6277,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6304,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6320,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 6556,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6614,
											"end": 6628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6469,
											"end": 6483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6738,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6780,
											"end": 6784,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6764,
											"end": 6791,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 6795,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6919,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6937,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6744,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 7037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7223,
											"end": 7232,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7214,
											"end": 7221,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7238,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7322,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 7203,
											"end": 7322,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 7241,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7241,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7320,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 7241,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7203,
											"end": 7322,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 7203,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7438,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7405,
											"end": 7522,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7405,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 7405,
											"end": 7522,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 7441,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7441,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7520,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 7441,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7405,
											"end": 7522,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 7405,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 7546,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7624,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 7546,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7624,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7332,
											"end": 7634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7699,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7724,
											"end": 7730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7751,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 7718,
											"end": 7835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 7754,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7754,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 7754,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7718,
											"end": 7835,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 7718,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 7929,
											"end": 7936,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 7859,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7937,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 7859,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7849,
											"end": 7937,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7849,
											"end": 7937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7644,
											"end": 7947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 7988,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8012,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 8057,
											"end": 8064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8046,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8055,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 8012,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8065,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 8012,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 8082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8182,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8199,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8283,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 8164,
											"end": 8283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8202,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 8202,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8283,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 8164,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8383,
											"end": 8389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8381,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 8347,
											"end": 8400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8400,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 8347,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8293,
											"end": 8410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8598,
											"end": 8600,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8586,
											"end": 8595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8573,
											"end": 8596,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8569,
											"end": 8601,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8604,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 8566,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8724,
											"end": 8755,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8801,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8804,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 8979,
											"end": 8986,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 8968,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8955,
											"end": 8977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 8909,
											"end": 8987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8987,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 8909,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8987,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8695,
											"end": 8997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9068,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9114,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 9081,
											"end": 9198,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 9117,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 9117,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9196,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 9117,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9081,
											"end": 9198,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 9081,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 9292,
											"end": 9299,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9268,
											"end": 9290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9222,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9300,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 9222,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9007,
											"end": 9310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 9317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9432,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9323,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 9419,
											"end": 9424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 9404,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9425,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 9404,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9399,
											"end": 9402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9552,
											"end": 9561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 9638,
											"end": 9639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9627,
											"end": 9636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9623,
											"end": 9640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9576,
											"end": 9641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9641,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 9576,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9772,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 9654,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 9759,
											"end": 9764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9741,
											"end": 9765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9741,
											"end": 9765,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 9741,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9911,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9898,
											"end": 9907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 9990,
											"end": 9991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 9988,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 9992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9972,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 9922,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9922,
											"end": 9993,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 9922,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 10000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10165,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10154,
											"end": 10177,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10150,
											"end": 10183,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 10147,
											"end": 10267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10186,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 10186,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 10186,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10186,
											"end": 10265,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 10186,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10267,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 10147,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 10376,
											"end": 10383,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10356,
											"end": 10365,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10331,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 10331,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10331,
											"end": 10384,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 10331,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10384,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10321,
											"end": 10384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10459,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 10504,
											"end": 10511,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10484,
											"end": 10493,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10459,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10459,
											"end": 10512,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 10459,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10512,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10404,
											"end": 10522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10561,
											"end": 10563,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10587,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 10632,
											"end": 10639,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10587,
											"end": 10640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10640,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 10587,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10577,
											"end": 10640,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10577,
											"end": 10640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10532,
											"end": 10650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10715,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 10760,
											"end": 10767,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10749,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10715,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10715,
											"end": 10768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10715,
											"end": 10768,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 10715,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 10820,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10844,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10844,
											"end": 10894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10894,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 10844,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10834,
											"end": 10894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10788,
											"end": 10904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11148,
											"end": 11151,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 11137,
											"end": 11146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11133,
											"end": 11152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11215,
											"end": 11232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11206,
											"end": 11212,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11162,
											"end": 11233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11233,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 11162,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 11305,
											"end": 11307,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11303,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11287,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 11243,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 11243,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11319,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11370,
											"end": 11379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11366,
											"end": 11384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11357,
											"end": 11363,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11319,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 11319,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11319,
											"end": 11385,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 11319,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11395,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 11463,
											"end": 11465,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11395,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11395,
											"end": 11467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11395,
											"end": 11467,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 11395,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11534,
											"end": 11543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11530,
											"end": 11549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11521,
											"end": 11527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11477,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11550,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 11477,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11721,
											"end": 11725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11716,
											"end": 11719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11697,
											"end": 11726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11697,
											"end": 11726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11914,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 11738,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11878,
											"end": 11906,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A20546F6B656E206E6F7420616C6C6F776564000000000000"
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 11907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 12286,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 11920,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12062,
											"end": 12065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 12147,
											"end": 12149,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 12142,
											"end": 12145,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 12083,
											"end": 12150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12150,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 12083,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12150,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 12248,
											"end": 12251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 12159,
											"end": 12252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12252,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 12159,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12277,
											"end": 12279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12272,
											"end": 12275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12261,
											"end": 12280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12261,
											"end": 12280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 12286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 12286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 12286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 12286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12711,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 12292,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12496,
											"end": 12498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12481,
											"end": 12499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12535,
											"end": 12555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12573,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 12699,
											"end": 12703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12573,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 12573,
											"end": 12704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12573,
											"end": 12704,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 12573,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12565,
											"end": 12704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12565,
											"end": 12704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12717,
											"end": 12897,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 12717,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12765,
											"end": 12842,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12762,
											"end": 12763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12755,
											"end": 12843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12862,
											"end": 12866,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 12859,
											"end": 12860,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12852,
											"end": 12867,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12886,
											"end": 12890,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12891,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 13005,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12903,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 12953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12992,
											"end": 12997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 12990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12985,
											"end": 12998,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 12964,
											"end": 12998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12964,
											"end": 12998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 13005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 13005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 13005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 13005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13072,
											"end": 13077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13083,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13103,
											"end": 13109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13127,
											"end": 13132,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13162,
											"end": 13163,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13152,
											"end": 13160,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13149,
											"end": 13164,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13257,
											"end": 13261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13252,
											"end": 13255,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13239,
											"end": 13263,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13286,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 13236,
											"end": 13286,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13266,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 13266,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13286,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 13236,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13317,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13306,
											"end": 13314,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13302,
											"end": 13318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13750,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 13299,
											"end": 13750,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13731,
											"end": 13735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13724,
											"end": 13729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13736,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13711,
											"end": 13736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13750,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 13299,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13775,
											"end": 13779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13771,
											"end": 13786,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 13834,
											"end": 13842,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13811,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13843,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 13811,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13843,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 13141,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 13924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14110,
											"end": 14118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14100,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 14100,
											"end": 14140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14122,
											"end": 14132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14122,
											"end": 14132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14133,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14133,
											"end": 14138,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14100,
											"end": 14140,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 14100,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14159,
											"end": 14163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14149,
											"end": 14185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 14149,
											"end": 14185,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14176,
											"end": 14177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14167,
											"end": 14177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14167,
											"end": 14177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14178,
											"end": 14183,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14149,
											"end": 14185,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 14149,
											"end": 14185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14293,
											"end": 14294,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14329,
											"end": 14330,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14238,
											"end": 14515,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14307,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14297,
											"end": 14307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14297,
											"end": 14307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14308,
											"end": 14313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14308,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14308,
											"end": 14313,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 14324,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14369,
											"end": 14372,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 14359,
											"end": 14367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14356,
											"end": 14373,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14353,
											"end": 14396,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14353,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 14353,
											"end": 14396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14376,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14353,
											"end": 14396,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 14353,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14425,
											"end": 14433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14422,
											"end": 14423,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 14418,
											"end": 14434,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14434,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14460,
											"end": 14463,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14453,
											"end": 14458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14464,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14447,
											"end": 14487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14447,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 14447,
											"end": 14487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14467,
											"end": 14485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14447,
											"end": 14487,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 14447,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14500,
											"end": 14505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14500,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14500,
											"end": 14505,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14515,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14238,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14238,
											"end": 14515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14624,
											"end": 14626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14614,
											"end": 14622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14611,
											"end": 14627,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14605,
											"end": 14608,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 14599,
											"end": 14603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14609,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14628,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14574,
											"end": 14576,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 14564,
											"end": 14572,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14577,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14558,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 14550,
											"end": 14554,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14543,
											"end": 14578,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14527,
											"end": 14638,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14770,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 14524,
											"end": 14770,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14680,
											"end": 14688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14674,
											"end": 14678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14670,
											"end": 14689,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14708,
											"end": 14713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14705,
											"end": 14719,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14742,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 14702,
											"end": 14742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14722,
											"end": 14740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 14722,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14742,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 14702,
											"end": 14742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14770,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 14524,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 14833,
											"end": 14836,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14823,
											"end": 14831,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14821,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14814,
											"end": 14815,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14795,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 14795,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14837,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 14795,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14837,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14869,
											"end": 14873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14867,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14853,
											"end": 14858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 14875,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14898,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 14847,
											"end": 14898,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14878,
											"end": 14896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14898,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 14847,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14927,
											"end": 14931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14916,
											"end": 14932,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 14932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 14932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13865,
											"end": 14938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15028,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15028,
											"end": 15051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15028,
											"end": 15051,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 15028,
											"end": 15051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15020,
											"end": 15051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15020,
											"end": 15051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 15090,
											"end": 15098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15072,
											"end": 15099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15099,
											"name": "tag",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 15072,
											"end": 15099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15060,
											"end": 15099,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15060,
											"end": 15099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 15155,
											"end": 15221,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15145,
											"end": 15153,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15139,
											"end": 15143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15118,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15222,
											"name": "tag",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 15118,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14944,
											"end": 15229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15275,
											"end": 15282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15298,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 15316,
											"end": 15317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15298,
											"end": 15318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15318,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 15298,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15332,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 15350,
											"end": 15351,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15332,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15332,
											"end": 15352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15332,
											"end": 15352,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 15332,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15327,
											"end": 15352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15327,
											"end": 15352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15389,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 15427,
											"end": 15438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15409,
											"end": 15439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15409,
											"end": 15439,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 15409,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15588,
											"end": 15589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15579,
											"end": 15586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15590,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15591,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15549,
											"end": 15550,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15522,
											"end": 15605,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 15499,
											"end": 15638,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 15618,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "tag",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15638,
											"name": "tag",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 15499,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15283,
											"end": 15645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 15831,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15651,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15776,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15696,
											"end": 15697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15689,
											"end": 15777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15800,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 15793,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15786,
											"end": 15801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15820,
											"end": 15824,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15817,
											"end": 15818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15810,
											"end": 15825,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 15878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 15912,
											"end": 15913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15894,
											"end": 15914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 15946,
											"end": 15947,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15928,
											"end": 15948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15948,
											"name": "tag",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 15928,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15948,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15967,
											"end": 15968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 15992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 15957,
											"end": 15992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15972,
											"end": 15990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "tag",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 15972,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 15992,
											"name": "tag",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 15957,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16014,
											"end": 16015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16007,
											"end": 16016,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16002,
											"end": 16016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16002,
											"end": 16016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 16022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16028,
											"end": 16201,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 16028,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16168,
											"end": 16193,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A206973206E6F742073746F70706564000000000000000000"
										},
										{
											"begin": 16164,
											"end": 16165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16156,
											"end": 16162,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16152,
											"end": 16166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16028,
											"end": 16201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16028,
											"end": 16201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16573,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 16207,
											"end": 16573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16370,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 16434,
											"end": 16436,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 16429,
											"end": 16432,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16370,
											"end": 16437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 16370,
											"end": 16437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16370,
											"end": 16437,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 16370,
											"end": 16437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 16535,
											"end": 16538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 16446,
											"end": 16539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16539,
											"name": "tag",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 16446,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16564,
											"end": 16566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16555,
											"end": 16567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16548,
											"end": 16567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16548,
											"end": 16567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16207,
											"end": 16573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16579,
											"end": 16998,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 16579,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16745,
											"end": 16749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16772,
											"end": 16781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16760,
											"end": 16786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16760,
											"end": 16786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16832,
											"end": 16841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16822,
											"end": 16842,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16818,
											"end": 16819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16807,
											"end": 16816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16803,
											"end": 16820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16796,
											"end": 16843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16860,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 16986,
											"end": 16990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16860,
											"end": 16991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 16860,
											"end": 16991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16860,
											"end": 16991,
											"name": "tag",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 16860,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16579,
											"end": 16998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16579,
											"end": 16998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16579,
											"end": 16998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16579,
											"end": 16998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17181,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17004,
											"end": 17181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17144,
											"end": 17173,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A204E6F20746F6B656E7320746F20636C61696D0000000000"
										},
										{
											"begin": 17140,
											"end": 17141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17132,
											"end": 17138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17128,
											"end": 17142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17121,
											"end": 17174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17004,
											"end": 17181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17553,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17187,
											"end": 17553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17329,
											"end": 17332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17350,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 17414,
											"end": 17416,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 17409,
											"end": 17412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 17350,
											"end": 17417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17417,
											"name": "tag",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 17350,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17417,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 17515,
											"end": 17518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 17426,
											"end": 17519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17426,
											"end": 17519,
											"name": "tag",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 17426,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17544,
											"end": 17546,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17539,
											"end": 17542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17535,
											"end": 17547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17528,
											"end": 17547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17528,
											"end": 17547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17978,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 17559,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17725,
											"end": 17729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17763,
											"end": 17765,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17752,
											"end": 17761,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17748,
											"end": 17766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17740,
											"end": 17766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17740,
											"end": 17766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17812,
											"end": 17821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17802,
											"end": 17822,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17798,
											"end": 17799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17787,
											"end": 17796,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17783,
											"end": 17800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17776,
											"end": 17823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17840,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 17966,
											"end": 17970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17840,
											"end": 17971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17840,
											"end": 17971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17840,
											"end": 17971,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 17840,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17832,
											"end": 17971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17832,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17984,
											"end": 18222,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17984,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18124,
											"end": 18158,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A2053746174757320697320616C7265616479207365742074"
										},
										{
											"begin": 18120,
											"end": 18121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18112,
											"end": 18118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18108,
											"end": 18122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18101,
											"end": 18159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18193,
											"end": 18214,
											"name": "PUSH",
											"source": 10,
											"value": "6F2074686520646573697265642076616C756500000000000000000000000000"
										},
										{
											"begin": 18188,
											"end": 18190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18180,
											"end": 18186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18176,
											"end": 18191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18169,
											"end": 18215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17984,
											"end": 18222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17984,
											"end": 18222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18594,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 18228,
											"end": 18594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18370,
											"end": 18373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 18455,
											"end": 18457,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 18450,
											"end": 18453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 18391,
											"end": 18458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18391,
											"end": 18458,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 18391,
											"end": 18458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18467,
											"end": 18560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 18556,
											"end": 18559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18467,
											"end": 18560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 18467,
											"end": 18560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18467,
											"end": 18560,
											"name": "tag",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 18467,
											"end": 18560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18585,
											"end": 18587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18580,
											"end": 18583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18576,
											"end": 18588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 19019,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 18600,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18766,
											"end": 18770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18804,
											"end": 18806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18793,
											"end": 18802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18789,
											"end": 18807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18781,
											"end": 18807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18781,
											"end": 18807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18847,
											"end": 18851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18843,
											"end": 18863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18839,
											"end": 18840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18828,
											"end": 18837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 18841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18817,
											"end": 18864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 19007,
											"end": 19011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 18881,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18881,
											"end": 19012,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 18881,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 19012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 19012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 19019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 19019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 19019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18600,
											"end": 19019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19025,
											"end": 19259,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 19025,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19165,
											"end": 19199,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A20746F6B656E732026207072696365732061727261797320"
										},
										{
											"begin": 19161,
											"end": 19162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19153,
											"end": 19159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19142,
											"end": 19200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19234,
											"end": 19251,
											"name": "PUSH",
											"source": 10,
											"value": "6C656E677468206D69736D617463680000000000000000000000000000000000"
										},
										{
											"begin": 19229,
											"end": 19231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19221,
											"end": 19227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19217,
											"end": 19232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19025,
											"end": 19259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19025,
											"end": 19259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19631,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19265,
											"end": 19631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19428,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 19492,
											"end": 19494,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 19487,
											"end": 19490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19428,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 19428,
											"end": 19495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19428,
											"end": 19495,
											"name": "tag",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 19428,
											"end": 19495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19421,
											"end": 19495,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19421,
											"end": 19495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 19593,
											"end": 19596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 19504,
											"end": 19597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19597,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 19504,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19622,
											"end": 19624,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19617,
											"end": 19620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19613,
											"end": 19625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19631,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19265,
											"end": 19631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 20056,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 19637,
											"end": 20056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19803,
											"end": 19807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19841,
											"end": 19843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19830,
											"end": 19839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19826,
											"end": 19844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19818,
											"end": 19844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19818,
											"end": 19844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19890,
											"end": 19899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19884,
											"end": 19888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19880,
											"end": 19900,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19876,
											"end": 19877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19865,
											"end": 19874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19861,
											"end": 19878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19854,
											"end": 19901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19918,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 20044,
											"end": 20048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19918,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19918,
											"end": 20049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19918,
											"end": 20049,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 19918,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19910,
											"end": 20049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19910,
											"end": 20049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 20056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 20056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 20056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 20056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20062,
											"end": 20242,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 20062,
											"end": 20242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20110,
											"end": 20187,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20107,
											"end": 20108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20100,
											"end": 20188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20207,
											"end": 20211,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 20204,
											"end": 20205,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20197,
											"end": 20212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20231,
											"end": 20235,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20228,
											"end": 20229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20221,
											"end": 20236,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20248,
											"end": 20472,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 20248,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20388,
											"end": 20422,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A20546F6B656E206973206E6F7420612070617961626C6520"
										},
										{
											"begin": 20384,
											"end": 20385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20376,
											"end": 20382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20372,
											"end": 20386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20423,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20464,
											"name": "PUSH",
											"source": 10,
											"value": "746F6B656E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20452,
											"end": 20454,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20444,
											"end": 20450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20440,
											"end": 20455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20433,
											"end": 20465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20248,
											"end": 20472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20248,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20478,
											"end": 20844,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 20478,
											"end": 20844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20620,
											"end": 20623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20641,
											"end": 20708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 20705,
											"end": 20707,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 20700,
											"end": 20703,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20641,
											"end": 20708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 20641,
											"end": 20708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20641,
											"end": 20708,
											"name": "tag",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 20641,
											"end": 20708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20634,
											"end": 20708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20634,
											"end": 20708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 20806,
											"end": 20809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 20717,
											"end": 20810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20810,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 20717,
											"end": 20810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20835,
											"end": 20837,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20830,
											"end": 20833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20826,
											"end": 20838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20819,
											"end": 20838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20478,
											"end": 20844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20478,
											"end": 20844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20478,
											"end": 20844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20478,
											"end": 20844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 21269,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 20850,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21016,
											"end": 21020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21054,
											"end": 21056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21043,
											"end": 21052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21039,
											"end": 21057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21103,
											"end": 21112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21097,
											"end": 21101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21093,
											"end": 21113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21089,
											"end": 21090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21078,
											"end": 21087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21074,
											"end": 21091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21067,
											"end": 21114,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21131,
											"end": 21262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 21257,
											"end": 21261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21131,
											"end": 21262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 21131,
											"end": 21262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21131,
											"end": 21262,
											"name": "tag",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 21131,
											"end": 21262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 21269,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 21269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 21269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 21269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21275,
											"end": 21454,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 21275,
											"end": 21454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21415,
											"end": 21446,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A2050726963652063616E6E6F74206265207A65726F000000"
										},
										{
											"begin": 21411,
											"end": 21412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21403,
											"end": 21409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21399,
											"end": 21413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21392,
											"end": 21447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21275,
											"end": 21454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21275,
											"end": 21454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21460,
											"end": 21826,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 21460,
											"end": 21826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21602,
											"end": 21605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21623,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 21687,
											"end": 21689,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 21682,
											"end": 21685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21623,
											"end": 21690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 21623,
											"end": 21690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21623,
											"end": 21690,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 21623,
											"end": 21690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21616,
											"end": 21690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21616,
											"end": 21690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21699,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 21788,
											"end": 21791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21699,
											"end": 21792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 21699,
											"end": 21792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21699,
											"end": 21792,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 21699,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21817,
											"end": 21819,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21812,
											"end": 21815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21808,
											"end": 21820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21801,
											"end": 21820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21460,
											"end": 21826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21460,
											"end": 21826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21460,
											"end": 21826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21460,
											"end": 21826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21832,
											"end": 22251,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 21832,
											"end": 22251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21998,
											"end": 22002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22025,
											"end": 22034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22021,
											"end": 22039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22013,
											"end": 22039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22013,
											"end": 22039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22085,
											"end": 22094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22079,
											"end": 22083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22075,
											"end": 22095,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22071,
											"end": 22072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22060,
											"end": 22069,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22056,
											"end": 22073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22049,
											"end": 22096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22113,
											"end": 22244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 22239,
											"end": 22243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22113,
											"end": 22244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 22113,
											"end": 22244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22113,
											"end": 22244,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 22113,
											"end": 22244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22105,
											"end": 22244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22105,
											"end": 22244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21832,
											"end": 22251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21832,
											"end": 22251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21832,
											"end": 22251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21832,
											"end": 22251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22297,
											"end": 22300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 22334,
											"end": 22335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 22316,
											"end": 22336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 22316,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22311,
											"end": 22336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22311,
											"end": 22336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 22368,
											"end": 22369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 22350,
											"end": 22370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22370,
											"name": "tag",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 22350,
											"end": 22370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22345,
											"end": 22370,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22345,
											"end": 22370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22393,
											"end": 22394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22390,
											"end": 22391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22386,
											"end": 22395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22379,
											"end": 22395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22414,
											"end": 22417,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22411,
											"end": 22412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22408,
											"end": 22418,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 22405,
											"end": 22441,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22405,
											"end": 22441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 22405,
											"end": 22441,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 22421,
											"end": 22439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 22421,
											"end": 22439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22439,
											"name": "tag",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 22421,
											"end": 22439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22405,
											"end": 22441,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 22405,
											"end": 22441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22454,
											"end": 22687,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 22454,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22493,
											"end": 22496,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22516,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 22534,
											"end": 22539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22516,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 22516,
											"end": 22540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22516,
											"end": 22540,
											"name": "tag",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 22516,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22507,
											"end": 22540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22507,
											"end": 22540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22562,
											"end": 22628,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22555,
											"end": 22560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22552,
											"end": 22629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22549,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 22549,
											"end": 22652,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22632,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 22632,
											"end": 22650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 22632,
											"end": 22650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22632,
											"end": 22650,
											"name": "tag",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 22632,
											"end": 22650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22549,
											"end": 22652,
											"name": "tag",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 22549,
											"end": 22652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22679,
											"end": 22680,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22672,
											"end": 22677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22668,
											"end": 22681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22661,
											"end": 22681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22661,
											"end": 22681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22454,
											"end": 22687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22454,
											"end": 22687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22454,
											"end": 22687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22454,
											"end": 22687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22693,
											"end": 22866,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 22693,
											"end": 22866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22833,
											"end": 22858,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A206973206E6F7420656E61626C6564000000000000000000"
										},
										{
											"begin": 22829,
											"end": 22830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22821,
											"end": 22827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22817,
											"end": 22831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22810,
											"end": 22859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22693,
											"end": 22866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22693,
											"end": 22866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 23238,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 22872,
											"end": 23238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23014,
											"end": 23017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23035,
											"end": 23102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 23099,
											"end": 23101,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 23094,
											"end": 23097,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 23035,
											"end": 23102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23035,
											"end": 23102,
											"name": "tag",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 23035,
											"end": 23102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23028,
											"end": 23102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23028,
											"end": 23102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23111,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 23200,
											"end": 23203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23111,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 23111,
											"end": 23204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23111,
											"end": 23204,
											"name": "tag",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 23111,
											"end": 23204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23229,
											"end": 23231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23224,
											"end": 23227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23220,
											"end": 23232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 23238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 23238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 23238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22872,
											"end": 23238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23663,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 23244,
											"end": 23663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23410,
											"end": 23414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23448,
											"end": 23450,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23437,
											"end": 23446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23433,
											"end": 23451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23425,
											"end": 23451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23425,
											"end": 23451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23497,
											"end": 23506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23491,
											"end": 23495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23487,
											"end": 23507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23483,
											"end": 23484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23472,
											"end": 23481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23468,
											"end": 23485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23461,
											"end": 23508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23525,
											"end": 23656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "722"
										},
										{
											"begin": 23651,
											"end": 23655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23525,
											"end": 23656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 23525,
											"end": 23656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23525,
											"end": 23656,
											"name": "tag",
											"source": 10,
											"value": "722"
										},
										{
											"begin": 23525,
											"end": 23656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23517,
											"end": 23656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23517,
											"end": 23656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23663,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23244,
											"end": 23663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23669,
											"end": 23893,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 23669,
											"end": 23893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23809,
											"end": 23843,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A204E6F7420656E6F75676820746F6B656E7320746F206265"
										},
										{
											"begin": 23805,
											"end": 23806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23797,
											"end": 23803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23793,
											"end": 23807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23786,
											"end": 23844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23878,
											"end": 23885,
											"name": "PUSH",
											"source": 10,
											"value": "2073616C65000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23873,
											"end": 23875,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23861,
											"end": 23876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23854,
											"end": 23886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23669,
											"end": 23893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23669,
											"end": 23893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23899,
											"end": 24265,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 23899,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24041,
											"end": 24044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24062,
											"end": 24129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 24126,
											"end": 24128,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 24121,
											"end": 24124,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24062,
											"end": 24129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 24062,
											"end": 24129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24062,
											"end": 24129,
											"name": "tag",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 24062,
											"end": 24129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24055,
											"end": 24129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24055,
											"end": 24129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 24227,
											"end": 24230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 24138,
											"end": 24231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24138,
											"end": 24231,
											"name": "tag",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 24138,
											"end": 24231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24256,
											"end": 24258,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24251,
											"end": 24254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24247,
											"end": 24259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24240,
											"end": 24259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24240,
											"end": 24259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23899,
											"end": 24265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23899,
											"end": 24265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23899,
											"end": 24265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23899,
											"end": 24265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24271,
											"end": 24690,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 24271,
											"end": 24690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24437,
											"end": 24441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24475,
											"end": 24477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24464,
											"end": 24473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24460,
											"end": 24478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24452,
											"end": 24478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24452,
											"end": 24478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24524,
											"end": 24533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24518,
											"end": 24522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24514,
											"end": 24534,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24510,
											"end": 24511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24499,
											"end": 24508,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24495,
											"end": 24512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24488,
											"end": 24535,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "728"
										},
										{
											"begin": 24678,
											"end": 24682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 24552,
											"end": 24683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24552,
											"end": 24683,
											"name": "tag",
											"source": 10,
											"value": "728"
										},
										{
											"begin": 24552,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24544,
											"end": 24683,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24544,
											"end": 24683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24271,
											"end": 24690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24271,
											"end": 24690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24271,
											"end": 24690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24271,
											"end": 24690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24696,
											"end": 24921,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 24696,
											"end": 24921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24836,
											"end": 24870,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A20416D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 24832,
											"end": 24833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24824,
											"end": 24830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24820,
											"end": 24834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24813,
											"end": 24871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24905,
											"end": 24913,
											"name": "PUSH",
											"source": 10,
											"value": "7468616E20300000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24900,
											"end": 24902,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24892,
											"end": 24898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24888,
											"end": 24903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24881,
											"end": 24914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24696,
											"end": 24921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24696,
											"end": 24921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24927,
											"end": 25293,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 24927,
											"end": 25293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25069,
											"end": 25072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25090,
											"end": 25157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 25154,
											"end": 25156,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 25149,
											"end": 25152,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25090,
											"end": 25157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 25090,
											"end": 25157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25090,
											"end": 25157,
											"name": "tag",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 25090,
											"end": 25157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25083,
											"end": 25157,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25083,
											"end": 25157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25166,
											"end": 25259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 25255,
											"end": 25258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25166,
											"end": 25259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 25166,
											"end": 25259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25166,
											"end": 25259,
											"name": "tag",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 25166,
											"end": 25259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25284,
											"end": 25286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25279,
											"end": 25282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25275,
											"end": 25287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25268,
											"end": 25287,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25268,
											"end": 25287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24927,
											"end": 25293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24927,
											"end": 25293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24927,
											"end": 25293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24927,
											"end": 25293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25718,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 25299,
											"end": 25718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25465,
											"end": 25469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25503,
											"end": 25505,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25492,
											"end": 25501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25488,
											"end": 25506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25552,
											"end": 25561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25546,
											"end": 25550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25538,
											"end": 25539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25527,
											"end": 25536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25523,
											"end": 25540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25516,
											"end": 25563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25580,
											"end": 25711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 25706,
											"end": 25710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25580,
											"end": 25711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 25580,
											"end": 25711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25580,
											"end": 25711,
											"name": "tag",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 25580,
											"end": 25711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25572,
											"end": 25711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25572,
											"end": 25711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25764,
											"end": 25768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25784,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 25802,
											"end": 25803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25784,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 25784,
											"end": 25804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25784,
											"end": 25804,
											"name": "tag",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 25784,
											"end": 25804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25779,
											"end": 25804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25779,
											"end": 25804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25818,
											"end": 25838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 25836,
											"end": 25837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25818,
											"end": 25838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 25818,
											"end": 25838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25818,
											"end": 25838,
											"name": "tag",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 25818,
											"end": 25838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25813,
											"end": 25838,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25813,
											"end": 25838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25862,
											"end": 25863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25859,
											"end": 25860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25855,
											"end": 25864,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25847,
											"end": 25864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25847,
											"end": 25864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25886,
											"end": 25887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25880,
											"end": 25884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25877,
											"end": 25888,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 25874,
											"end": 25911,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25874,
											"end": 25911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 25874,
											"end": 25911,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25891,
											"end": 25909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 25891,
											"end": 25909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 25891,
											"end": 25909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25891,
											"end": 25909,
											"name": "tag",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 25891,
											"end": 25909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25874,
											"end": 25911,
											"name": "tag",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 25874,
											"end": 25911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25724,
											"end": 25918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25981,
											"end": 25986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26012,
											"end": 26018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26006,
											"end": 26019,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25997,
											"end": 26019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25997,
											"end": 26019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26028,
											"end": 26061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "741"
										},
										{
											"begin": 26055,
											"end": 26060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26028,
											"end": 26061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 26028,
											"end": 26061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26028,
											"end": 26061,
											"name": "tag",
											"source": 10,
											"value": "741"
										},
										{
											"begin": 26028,
											"end": 26061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25924,
											"end": 26067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26143,
											"end": 26149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26192,
											"end": 26194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26180,
											"end": 26189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26171,
											"end": 26178,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26167,
											"end": 26190,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26163,
											"end": 26195,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26279,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 26160,
											"end": 26279,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26198,
											"end": 26277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "744"
										},
										{
											"begin": 26198,
											"end": 26277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 26198,
											"end": 26277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26198,
											"end": 26277,
											"name": "tag",
											"source": 10,
											"value": "744"
										},
										{
											"begin": 26198,
											"end": 26277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26279,
											"name": "tag",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 26160,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26318,
											"end": 26319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26343,
											"end": 26407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 26399,
											"end": 26406,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26390,
											"end": 26396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26379,
											"end": 26388,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26375,
											"end": 26397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26343,
											"end": 26407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 26343,
											"end": 26407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26343,
											"end": 26407,
											"name": "tag",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 26343,
											"end": 26407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26333,
											"end": 26407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26333,
											"end": 26407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26289,
											"end": 26417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26551,
											"end": 26555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26589,
											"end": 26591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26578,
											"end": 26587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26574,
											"end": 26592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26566,
											"end": 26592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26566,
											"end": 26592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26602,
											"end": 26673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 26670,
											"end": 26671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26659,
											"end": 26668,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26646,
											"end": 26652,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26602,
											"end": 26673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 26602,
											"end": 26673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26602,
											"end": 26673,
											"name": "tag",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 26602,
											"end": 26673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26683,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 26751,
											"end": 26753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26740,
											"end": 26749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26736,
											"end": 26754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26727,
											"end": 26733,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26683,
											"end": 26755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 26683,
											"end": 26755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26683,
											"end": 26755,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 26683,
											"end": 26755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26430,
											"end": 26762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26822,
											"end": 26827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26853,
											"end": 26859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26847,
											"end": 26860,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26838,
											"end": 26860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26838,
											"end": 26860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26869,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "750"
										},
										{
											"begin": 26893,
											"end": 26898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26869,
											"end": 26899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 26869,
											"end": 26899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26869,
											"end": 26899,
											"name": "tag",
											"source": 10,
											"value": "750"
										},
										{
											"begin": 26869,
											"end": 26899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26768,
											"end": 26905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26978,
											"end": 26984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27027,
											"end": 27029,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27015,
											"end": 27024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27006,
											"end": 27013,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27002,
											"end": 27025,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26998,
											"end": 27030,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 26995,
											"end": 27114,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26995,
											"end": 27114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 26995,
											"end": 27114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27033,
											"end": 27112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 27033,
											"end": 27112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 27033,
											"end": 27112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27033,
											"end": 27112,
											"name": "tag",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 27033,
											"end": 27112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26995,
											"end": 27114,
											"name": "tag",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 26995,
											"end": 27114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27153,
											"end": 27154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27178,
											"end": 27239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 27231,
											"end": 27238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27222,
											"end": 27228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27211,
											"end": 27220,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27207,
											"end": 27229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27178,
											"end": 27239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 27178,
											"end": 27239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27178,
											"end": 27239,
											"name": "tag",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 27178,
											"end": 27239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27168,
											"end": 27239,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27168,
											"end": 27239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27124,
											"end": 27249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 27256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27262,
											"end": 27440,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 27262,
											"end": 27440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27402,
											"end": 27432,
											"name": "PUSH",
											"source": 10,
											"value": "50726573616C653A20526174652063616E6E6F74206265207A65726F00000000"
										},
										{
											"begin": 27398,
											"end": 27399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27390,
											"end": 27396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27386,
											"end": 27400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27379,
											"end": 27433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27262,
											"end": 27440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27262,
											"end": 27440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27446,
											"end": 27812,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 27446,
											"end": 27812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27588,
											"end": 27591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27609,
											"end": 27676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 27673,
											"end": 27675,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 27668,
											"end": 27671,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27609,
											"end": 27676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 27609,
											"end": 27676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27609,
											"end": 27676,
											"name": "tag",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 27609,
											"end": 27676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27602,
											"end": 27676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27602,
											"end": 27676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27685,
											"end": 27778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 27774,
											"end": 27777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27685,
											"end": 27778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 27685,
											"end": 27778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27685,
											"end": 27778,
											"name": "tag",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 27685,
											"end": 27778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27803,
											"end": 27805,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27798,
											"end": 27801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27794,
											"end": 27806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27446,
											"end": 27812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27446,
											"end": 27812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27446,
											"end": 27812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27446,
											"end": 27812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 28237,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 27818,
											"end": 28237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27984,
											"end": 27988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28022,
											"end": 28024,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28011,
											"end": 28020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28007,
											"end": 28025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27999,
											"end": 28025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28071,
											"end": 28080,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28065,
											"end": 28069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28061,
											"end": 28081,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28057,
											"end": 28058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28046,
											"end": 28055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28042,
											"end": 28059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28035,
											"end": 28082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 28225,
											"end": 28229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 28099,
											"end": 28230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28099,
											"end": 28230,
											"name": "tag",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 28099,
											"end": 28230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28091,
											"end": 28230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28091,
											"end": 28230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 28237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 28237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 28237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 28237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28243,
											"end": 28329,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 28243,
											"end": 28329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28278,
											"end": 28285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28318,
											"end": 28322,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 28311,
											"end": 28316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28307,
											"end": 28323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 28296,
											"end": 28323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28296,
											"end": 28323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28243,
											"end": 28329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28243,
											"end": 28329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28243,
											"end": 28329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28243,
											"end": 28329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28335,
											"end": 28453,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 28335,
											"end": 28453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 28422,
											"end": 28427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 28406,
											"end": 28428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "tag",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28399,
											"end": 28404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28396,
											"end": 28429,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 28386,
											"end": 28447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 28386,
											"end": 28447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28443,
											"end": 28444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28440,
											"end": 28441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 28433,
											"end": 28445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 28386,
											"end": 28447,
											"name": "tag",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 28386,
											"end": 28447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28335,
											"end": 28453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28335,
											"end": 28453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28514,
											"end": 28519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28545,
											"end": 28551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28539,
											"end": 28552,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28530,
											"end": 28552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28530,
											"end": 28552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28561,
											"end": 28592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 28586,
											"end": 28591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28561,
											"end": 28592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 28561,
											"end": 28592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28561,
											"end": 28592,
											"name": "tag",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 28561,
											"end": 28592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28672,
											"end": 28678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28721,
											"end": 28723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28709,
											"end": 28718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28700,
											"end": 28707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28696,
											"end": 28719,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28692,
											"end": 28724,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 28689,
											"end": 28808,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 28689,
											"end": 28808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 28689,
											"end": 28808,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28727,
											"end": 28806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 28727,
											"end": 28806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 28727,
											"end": 28806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28727,
											"end": 28806,
											"name": "tag",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 28727,
											"end": 28806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28689,
											"end": 28808,
											"name": "tag",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 28689,
											"end": 28808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28847,
											"end": 28848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28872,
											"end": 28934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 28926,
											"end": 28933,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28917,
											"end": 28923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28906,
											"end": 28915,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28902,
											"end": 28924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28872,
											"end": 28934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 28872,
											"end": 28934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28872,
											"end": 28934,
											"name": "tag",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 28872,
											"end": 28934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28862,
											"end": 28934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28862,
											"end": 28934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28818,
											"end": 28944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28604,
											"end": 28951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29106,
											"end": 29110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29144,
											"end": 29146,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 29133,
											"end": 29142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29129,
											"end": 29147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29121,
											"end": 29147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29121,
											"end": 29147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29157,
											"end": 29228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 29225,
											"end": 29226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29214,
											"end": 29223,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29210,
											"end": 29227,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29201,
											"end": 29207,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 29157,
											"end": 29228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 29157,
											"end": 29228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29157,
											"end": 29228,
											"name": "tag",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 29157,
											"end": 29228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "773"
										},
										{
											"begin": 29306,
											"end": 29308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29295,
											"end": 29304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29291,
											"end": 29309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29288,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 29238,
											"end": 29310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29310,
											"name": "tag",
											"source": 10,
											"value": "773"
										},
										{
											"begin": 29238,
											"end": 29310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29320,
											"end": 29392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 29388,
											"end": 29390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 29377,
											"end": 29386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29373,
											"end": 29391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29364,
											"end": 29370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29320,
											"end": 29392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 29320,
											"end": 29392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29320,
											"end": 29392,
											"name": "tag",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 29320,
											"end": 29392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28957,
											"end": 29399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/BuyStakeContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addPayableTokens(address[],uint256[])": "5413c1c8",
							"buyToken(address,uint256)": "68f8fc10",
							"buyers(uint256)": "f2aa8218",
							"buyersDetails(address)": "f4739ee3",
							"getBuyerReward(address)": "828b7953",
							"getTokenAmount(address,uint256)": "115ece4c",
							"increaseTotalTokensforSale(uint256)": "a2826373",
							"multiplier()": "1b3ed722",
							"owner()": "8da5cb5b",
							"payableTokenStatus(address,bool)": "29d429a8",
							"payableTokens(address)": "80655eef",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"resumeSale()": "33e364cb",
							"saleStatus()": "f9020e33",
							"saleToken()": "e985e367",
							"saleTokenDec()": "ace1741c",
							"setMultiplier(uint256)": "641579a6",
							"setParams(address,uint256,uint256,uint256,bool)": "a01bd50c",
							"stopSale()": "e36b0b37",
							"tokenPrices(address)": "204120bc",
							"totalTokensSold()": "63b20117",
							"totalTokensforSale()": "6bcedf9c",
							"transferOwnership(address)": "f2fde38b",
							"unlockAllTokens()": "5e0be607",
							"unlockToken()": "18a24b5b",
							"updateTokenRate(address[],uint256[],uint256)": "3115329e",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawAll(address)": "fa09e630",
							"withdrawAllSaleTokens()": "9ae2fd34",
							"withdrawCurrency(uint256)": "3c00a36c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"}],\"name\":\"addPayableTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyersDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCalculatedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"getBuyerReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalTokensforSale\",\"type\":\"uint256\"}],\"name\":\"increaseTotalTokensforSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"payableTokenStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTokenDec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"setMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensforSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_saleStatus\",\"type\":\"bool\"}],\"name\":\"setParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensforSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockAllTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updateTokenRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllSaleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdrawCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract for a token presale with staking reward features. Users can buy a specific sale token using either native currency (like ETH) or other approved ERC20 tokens. It also includes a mechanism for buyers to earn rewards over time based on their purchased amount.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addPayableTokens(address[],uint256[])\":{\"details\":\"Adds new ERC20 tokens that can be used for purchase and sets their prices.\"},\"buyToken(address,uint256)\":{\"details\":\"Allows a user to buy saleToken using native currency (msg.value) or an approved ERC20 token.\"},\"getBuyerReward(address)\":{\"details\":\"Calculates the pending reward for a buyer.\"},\"getTokenAmount(address,uint256)\":{\"details\":\"Calculates the amount of saleToken a user will receive for a given amount of payment token.\",\"params\":{\"amount\":\"The amount of the payment token.\",\"token\":\"The address of the payment token (address(0) for native currency).\"},\"returns\":{\"_0\":\"The amount of saleToken to be received.\"}},\"increaseTotalTokensforSale(uint256)\":{\"details\":\"Increases the total number of tokens available for sale.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"payableTokenStatus(address,bool)\":{\"details\":\"Enables or disables an ERC20 token for payment.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMultiplier(uint256)\":{\"details\":\"Sets the reward multiplier. It updates all existing rewards before changing the multiplier.\"},\"setParams(address,uint256,uint256,uint256,bool)\":{\"details\":\"Sets the initial parameters for the presale. This function transfers the total sale tokens from the owner to the contract.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAllTokens()\":{\"details\":\"Unlocks and sends tokens for all buyers. Can only be called by the owner when the sale is stopped.\"},\"unlockToken()\":{\"details\":\"Allows a buyer to claim their purchased tokens and accrued rewards after the sale has stopped.\"},\"updateTokenRate(address[],uint256[],uint256)\":{\"details\":\"Updates the prices of allowed ERC20 tokens and optionally the native currency rate.\"},\"withdrawAllSaleTokens()\":{\"details\":\"Allows the owner to withdraw all remaining sale tokens from the contract.\"}},\"title\":\"INTBuyStake Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyStakeContract.sol\":\"INTBuyStake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/BuyStakeContract.sol\":{\"keccak256\":\"0x2f50e7361d4a6ccbb6453b33e221150570850eeb8e650ed2d888fe7b9ac4e66f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf1367d8805560955223f2d657e0da64c8e951e65f35efc4e165f334838fa4f\",\"dweb:/ipfs/QmXMGhmbyveWgGS6SehcmZBEisr2itjGA6cwsjyiA3jZnZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 872,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "multiplier",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "rate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 876,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "saleToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 878,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "saleTokenDec",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 880,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "totalTokensforSale",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 882,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "saleStatus",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 885,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "buyers",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 887,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "totalTokensSold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "payableTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 896,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "buyersDetails",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(BuyerTokenDetails)870_storage)"
							},
							{
								"astId": 900,
								"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
								"label": "tokenPrices",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(BuyerTokenDetails)870_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct INTBuyStake.BuyerTokenDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerTokenDetails)870_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(BuyerTokenDetails)870_storage": {
								"encoding": "inplace",
								"label": "struct INTBuyStake.BuyerTokenDetails",
								"members": [
									{
										"astId": 861,
										"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 863,
										"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
										"label": "exists",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 865,
										"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
										"label": "isClaimed",
										"offset": 1,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 867,
										"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
										"label": "reward",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 869,
										"contract": "contracts/BuyStakeContract.sol:INTBuyStake",
										"label": "lastCalculatedTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							835
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 836,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 835,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 835,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								835
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							847
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 847,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								847,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							847
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 848,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						],
						"IERC20Metadata": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 316,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "306:6:5"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341,
								315
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 341,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 341,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 337,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 341,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 342,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							805
						]
					},
					"id": 806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 316,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 344,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 346,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 353,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 362,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 381,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 805,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 403,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 405,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 392,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 401,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 388,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 805,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 430,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 432,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 433,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 428,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 426,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 425,
												"id": 437,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 805,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 458,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 460,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 461,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 456,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 454,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 453,
												"id": 466,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 805,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 485,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$805",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$805",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 481,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 492,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 494,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 805,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															511
														],
														"declarations": [
															{
																"constant": false,
																"id": 511,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 540,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 510,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 520,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 516,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$805",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$805",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 512,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 522,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 530,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 525,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 526,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 527,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 524,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 362,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 529,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 533,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 534,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 536,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 532,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 539,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 805,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 553,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 557,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 559,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 561,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 555,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 565,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 566,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 564,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 570,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 573,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 575,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 576,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 577,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 571,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 569,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 583,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 581,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 805,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 602,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 616,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 617,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 618,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 614,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 629,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 628,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 624,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 593,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 622,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 621,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 627,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 608,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 609,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 610,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 607,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 805,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 647,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 662,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 663,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 665,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 676,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 675,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 671,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 669,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 668,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 674,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 653,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 654,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 656,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 652,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 805,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 692,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 706,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 708,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 704,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 719,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 718,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 714,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 683,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 712,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 711,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 717,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 698,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 699,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 700,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 697,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 702,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 805,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 728,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 728,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 735,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 726,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 737,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 738,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 749,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 756,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 754,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 753,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 759,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 805,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 769,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 769,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 778,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 781,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 783,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 785,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 796,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 790,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 767,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 789,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 788,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 800,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 773,
												"id": 802,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 765,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 805,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 806,
							"src": "698:9376:6",
							"usedErrors": [
								353,
								362
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							835
						]
					},
					"id": 836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 835,
							"linearizedBaseContracts": [
								835
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 813,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 812,
												"id": 815,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 835,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 822,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 821,
												"id": 824,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 835,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 830,
												"id": 832,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 835,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 836,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							847
						]
					},
					"id": 848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 837,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 840,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 847,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 848,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"contracts/BuyStakeContract.sol": {
				"ast": {
					"absolutePath": "contracts/BuyStakeContract.sol",
					"exportedSymbols": {
						"Context": [
							835
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IERC20Metadata": [
							341
						],
						"INTBuyStake": [
							1728
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							805
						]
					},
					"id": 1729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "69:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 148,
							"src": "155:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 806,
							"src": "208:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 342,
							"src": "274:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 854,
										"name": "Ownable",
										"nameLocations": [
											"696:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "696:7:9"
									},
									"id": 855,
									"nodeType": "InheritanceSpecifier",
									"src": "696:7:9"
								}
							],
							"canonicalName": "INTBuyStake",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 853,
								"nodeType": "StructuredDocumentation",
								"src": "351:320:9",
								"text": " @title INTBuyStake Contract\n @dev A contract for a token presale with staking reward features.\n Users can buy a specific sale token using either native currency (like ETH) or other approved ERC20 tokens.\n It also includes a mechanism for buyers to earn rewards over time based on their purchased amount."
							},
							"fullyImplemented": true,
							"id": 1728,
							"linearizedBaseContracts": [
								1728,
								147,
								835
							],
							"name": "INTBuyStake",
							"nameLocation": "681:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 859,
									"libraryName": {
										"id": 856,
										"name": "SafeERC20",
										"nameLocations": [
											"716:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "716:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "710:27:9",
									"typeName": {
										"id": 858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 857,
											"name": "IERC20",
											"nameLocations": [
												"730:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "730:6:9"
										},
										"referencedDeclaration": 315,
										"src": "730:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "INTBuyStake.BuyerTokenDetails",
									"id": 870,
									"members": [
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "858:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 870,
											"src": "850:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 860,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "850:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "917:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 870,
											"src": "912:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 862,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "912:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 865,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "979:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 870,
											"src": "974:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 864,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "974:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 867,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "1079:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 870,
											"src": "1071:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 866,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1071:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 869,
											"mutability": "mutable",
											"name": "lastCalculatedTime",
											"nameLocation": "1124:18:9",
											"nodeType": "VariableDeclaration",
											"scope": 870,
											"src": "1119:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 868,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1119:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerTokenDetails",
									"nameLocation": "822:17:9",
									"nodeType": "StructDefinition",
									"scope": 1728,
									"src": "815:379:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b3ed722",
									"id": 872,
									"mutability": "mutable",
									"name": "multiplier",
									"nameLocation": "1247:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1232:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1232:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 874,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "1337:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1322:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 873,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e985e367",
									"id": 876,
									"mutability": "mutable",
									"name": "saleToken",
									"nameLocation": "1438:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1423:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 875,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1423:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ace1741c",
									"id": 878,
									"mutability": "mutable",
									"name": "saleTokenDec",
									"nameLocation": "1496:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1484:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 877,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1484:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6bcedf9c",
									"id": 880,
									"mutability": "mutable",
									"name": "totalTokensforSale",
									"nameLocation": "1560:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1545:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 879,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1545:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9020e33",
									"id": 882,
									"mutability": "mutable",
									"name": "saleStatus",
									"nameLocation": "1652:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1640:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 881,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1640:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f2aa8218",
									"id": 885,
									"mutability": "mutable",
									"name": "buyers",
									"nameLocation": "1733:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1716:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 883,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1716:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 884,
										"nodeType": "ArrayTypeName",
										"src": "1716:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63b20117",
									"id": 887,
									"mutability": "mutable",
									"name": "totalTokensSold",
									"nameLocation": "1796:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1781:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 886,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1781:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80655eef",
									"id": 891,
									"mutability": "mutable",
									"name": "payableTokens",
									"nameLocation": "1908:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1876:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 890,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1884:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1876:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 889,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1895:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f4739ee3",
									"id": 896,
									"mutability": "mutable",
									"name": "buyersDetails",
									"nameLocation": "2022:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1977:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
										"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails)"
									},
									"typeName": {
										"id": 895,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 892,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:37:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
											"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 894,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 893,
												"name": "BuyerTokenDetails",
												"nameLocations": [
													"1996:17:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 870,
												"src": "1996:17:9"
											},
											"referencedDeclaration": 870,
											"src": "1996:17:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
												"typeString": "struct INTBuyStake.BuyerTokenDetails"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "204120bc",
									"id": 900,
									"mutability": "mutable",
									"name": "tokenPrices",
									"nameLocation": "2120:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "2085:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 899,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 897,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2093:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2085:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 898,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2104:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "2232:82:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "saleStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "2250:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2264:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2250:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a206973206e6f7420656e61626c6564",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2270:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e",
																"typeString": "literal_string \"Presale: is not enabled\""
															},
															"value": "Presale: is not enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dea739862f14d8ac7a0c14ca3860813570b3b4626fbdddf07ed71854f0c3222e",
																"typeString": "literal_string \"Presale: is not enabled\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2242:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2242:54:9"
											},
											{
												"id": 909,
												"nodeType": "PlaceholderStatement",
												"src": "2306:1:9"
											}
										]
									},
									"id": 911,
									"name": "saleEnabled",
									"nameLocation": "2218:11:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:2:9"
									},
									"src": "2209:105:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2342:83:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "saleStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "2360:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2374:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2360:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a206973206e6f742073746f70706564",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2381:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3",
																"typeString": "literal_string \"Presale: is not stopped\""
															},
															"value": "Presale: is not stopped"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_564cbb03c1b6bd81f9d025e8b650ab631d058ac48bd13a28a75c6fe187416fb3",
																"typeString": "literal_string \"Presale: is not stopped\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2352:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2352:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2352:55:9"
											},
											{
												"id": 920,
												"nodeType": "PlaceholderStatement",
												"src": "2417:1:9"
											}
										]
									},
									"id": 922,
									"name": "saleStoped",
									"nameLocation": "2329:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:9"
									},
									"src": "2320:105:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "2492:70:9",
										"statements": [
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 929,
														"name": "saleStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2502:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2515:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2502:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "2502:18:9"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 925,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2481:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2485:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2481:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 927,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 924,
												"name": "Ownable",
												"nameLocations": [
													"2473:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2473:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2473:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:2:9"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2492:0:9"
									},
									"scope": 1728,
									"src": "2459:103:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "2942:438:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 951,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "2960:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2969:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2960:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20526174652063616e6e6f74206265207a65726f",
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb",
																"typeString": "literal_string \"Presale: Rate cannot be zero\""
															},
															"value": "Presale: Rate cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8bf17f41a0a832cac5a46c8da3d4fa13a227116082e47f261289911fbcf98eb",
																"typeString": "literal_string \"Presale: Rate cannot be zero\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2952:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2952:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2952:51:9"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3013:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3020:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3013:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "3013:12:9"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "3035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3047:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3035:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "3035:22:9"
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 965,
														"name": "saleStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "3067:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 966,
														"name": "_saleStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3080:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3067:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "3067:24:9"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "saleTokenDec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3101:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "saleToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "3131:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 970,
																	"name": "IERC20Metadata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3116:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$341_$",
																		"typeString": "type(contract IERC20Metadata)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3116:25:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$341",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3142:8:9",
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 340,
															"src": "3116:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3116:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3101:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "3101:51:9"
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3162:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "_totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "3183:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3162:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "3162:40:9"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 981,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3212:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3225:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "3212:24:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 989,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3294:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3298:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3294:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 993,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3326:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3318:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 991,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3318:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3318:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3345:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 986,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "3253:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 985,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "3246:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3246:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3264:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "3246:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3246:127:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "3246:127:9"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "2600:153:9",
										"text": " @dev Sets the initial parameters for the presale.\n This function transfers the total sale tokens from the owner to the contract."
									},
									"functionSelector": "a01bd50c",
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 947,
												"name": "onlyOwner",
												"nameLocations": [
													"2932:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2932:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2932:9:9"
										}
									],
									"name": "setParams",
									"nameLocation": "2767:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "2794:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2786:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_totalTokensforSale",
												"nameLocation": "2822:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2814:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "2859:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2851:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "2879:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2874:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2874:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "_saleStatus",
												"nameLocation": "2905:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2900:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:146:9"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2942:0:9"
									},
									"scope": 1728,
									"src": "2758:622:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "3574:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1007,
														"name": "updateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "3584:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "3584:15:9"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3609:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1011,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "3622:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "3609:24:9"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "3386:122:9",
										"text": " @dev Sets the reward multiplier.\n It updates all existing rewards before changing the multiplier."
									},
									"functionSelector": "641579a6",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1005,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1004,
												"name": "onlyOwner",
												"nameLocations": [
													"3564:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3564:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3564:9:9"
										}
									],
									"name": "setMultiplier",
									"nameLocation": "3522:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "3544:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3536:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:21:9"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3574:0:9"
									},
									"scope": 1728,
									"src": "3513:127:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "3829:196:9",
										"statements": [
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3839:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1024,
														"name": "_totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "3861:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3839:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "3839:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1031,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3938:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3942:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3938:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1035,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3970:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3962:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3962:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3962:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "_totalTokensforSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "3989:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1028,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "3897:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1027,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "3890:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3890:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3908:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "3890:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:128:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3890:128:9"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "3646:80:9",
										"text": " @dev Increases the total number of tokens available for sale."
									},
									"functionSelector": "a2826373",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1020,
												"name": "onlyOwner",
												"nameLocations": [
													"3819:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3819:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3819:9:9"
										}
									],
									"name": "increaseTotalTokensforSale",
									"nameLocation": "3740:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_totalTokensforSale",
												"nameLocation": "3784:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "3776:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3766:43:9"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3829:0:9"
									},
									"scope": 1728,
									"src": "3731:294:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4070:35:9",
										"statements": [
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1046,
														"name": "saleStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4080:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4093:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4080:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "4080:18:9"
											}
										]
									},
									"functionSelector": "e36b0b37",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1043,
												"name": "onlyOwner",
												"nameLocations": [
													"4060:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4060:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4060:9:9"
										}
									],
									"name": "stopSale",
									"nameLocation": "4040:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4048:2:9"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:9"
									},
									"scope": 1728,
									"src": "4031:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "4152:34:9",
										"statements": [
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1056,
														"name": "saleStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4162:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4175:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4162:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "4162:17:9"
											}
										]
									},
									"functionSelector": "33e364cb",
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1054,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1053,
												"name": "onlyOwner",
												"nameLocations": [
													"4142:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4142:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4142:9:9"
										}
									],
									"name": "resumeSale",
									"nameLocation": "4120:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4130:2:9"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:0:9"
									},
									"scope": 1728,
									"src": "4111:75:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "4414:375:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1074,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "4445:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4453:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4445:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1076,
																	"name": "_prices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "4463:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4471:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4463:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4445:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20746f6b656e7320262070726963657320617272617973206c656e677468206d69736d61746368",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4491:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
																"typeString": "literal_string \"Presale: tokens & prices arrays length mismatch\""
															},
															"value": "Presale: tokens & prices arrays length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
																"typeString": "literal_string \"Presale: tokens & prices arrays length mismatch\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4424:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4424:126:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "4424:126:9"
											},
											{
												"body": {
													"id": 1120,
													"nodeType": "Block",
													"src": "4605:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1094,
																				"name": "_prices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1068,
																				"src": "4627:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1096,
																			"indexExpression": {
																				"id": 1095,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4635:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4627:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4641:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4627:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a2050726963652063616e6e6f74206265207a65726f",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4644:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
																			"typeString": "literal_string \"Presale: Price cannot be zero\""
																		},
																		"value": "Presale: Price cannot be zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
																			"typeString": "literal_string \"Presale: Price cannot be zero\""
																		}
																	],
																	"id": 1093,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4619:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4619:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "4619:57:9"
														},
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1102,
																		"name": "payableTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "4690:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1106,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1103,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "4704:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1105,
																		"indexExpression": {
																			"id": 1104,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "4712:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4704:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4690:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4718:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4690:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "4690:32:9"
														},
														{
															"expression": {
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1110,
																		"name": "tokenPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "4736:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1114,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1111,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "4748:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1113,
																		"indexExpression": {
																			"id": 1112,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "4756:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4748:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4736:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1115,
																		"name": "_prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "4762:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1117,
																	"indexExpression": {
																		"id": 1116,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "4770:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4762:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4736:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1119,
															"nodeType": "ExpressionStatement",
															"src": "4736:36:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1086,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "4580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1087,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "4584:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4592:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4584:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4580:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"initializationExpression": {
													"assignments": [
														1083
													],
													"declarations": [
														{
															"constant": false,
															"id": 1083,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4573:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1121,
															"src": "4565:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1082,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4565:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1085,
													"initialValue": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4577:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4565:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4600:3:9",
														"subExpression": {
															"id": 1090,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "4600:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1092,
													"nodeType": "ExpressionStatement",
													"src": "4600:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4560:223:9"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "4192:98:9",
										"text": " @dev Adds new ERC20 tokens that can be used for purchase and sets their prices."
									},
									"functionSelector": "5413c1c8",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1070,
												"name": "onlyOwner",
												"nameLocations": [
													"4404:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4404:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4404:9:9"
										}
									],
									"name": "addPayableTokens",
									"nameLocation": "4304:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "4347:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4330:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1063,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4330:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1064,
													"nodeType": "ArrayTypeName",
													"src": "4330:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "_prices",
												"nameLocation": "4381:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4364:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1066,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4364:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1067,
													"nodeType": "ArrayTypeName",
													"src": "4364:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:74:9"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4414:0:9"
									},
									"scope": 1728,
									"src": "4295:494:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "4970:154:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1134,
																	"name": "payableTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "4988:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1136,
																"indexExpression": {
																	"id": 1135,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "5002:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4988:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1137,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "5013:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4988:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a2053746174757320697320616c72656164792073657420746f2074686520646573697265642076616c7565",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5022:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189",
																"typeString": "literal_string \"Presale: Status is already set to the desired value\""
															},
															"value": "Presale: Status is already set to the desired value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffb56e77f1f2fdfe978f387461ba79de91cf73e47383438075e05894c95d2189",
																"typeString": "literal_string \"Presale: Status is already set to the desired value\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4980:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4980:96:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "4980:96:9"
											},
											{
												"expression": {
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1142,
															"name": "payableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5086:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "5100:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1145,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5110:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5086:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "5086:31:9"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "4795:71:9",
										"text": " @dev Enables or disables an ERC20 token for payment."
									},
									"functionSelector": "29d429a8",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1130,
												"name": "onlyOwner",
												"nameLocations": [
													"4960:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4960:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4960:9:9"
										}
									],
									"name": "payableTokenStatus",
									"nameLocation": "4880:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4916:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "4908:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "4937:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "4932:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4932:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:52:9"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4970:0:9"
									},
									"scope": 1728,
									"src": "4871:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "5383:491:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1164,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "5414:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5422:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5414:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1166,
																	"name": "_prices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "5432:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5440:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5432:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5414:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a20746f6b656e7320262070726963657320617272617973206c656e677468206d69736d61746368",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5460:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
																"typeString": "literal_string \"Presale: tokens & prices arrays length mismatch\""
															},
															"value": "Presale: tokens & prices arrays length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f6e6277a5719e18c8e133f2b6db32c3e849331e20ab6f2a3af3ee24f95e8355",
																"typeString": "literal_string \"Presale: tokens & prices arrays length mismatch\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5393:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:126:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "5393:126:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "5533:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5542:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5533:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "5529:53:9",
												"trueBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "5545:37:9",
													"statements": [
														{
															"expression": {
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1175,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "5559:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1176,
																	"name": "_rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "5566:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5559:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1178,
															"nodeType": "ExpressionStatement",
															"src": "5559:12:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1223,
													"nodeType": "Block",
													"src": "5639:229:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1194,
																				"name": "payableTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "5661:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1198,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1195,
																					"name": "_tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "5675:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1197,
																				"indexExpression": {
																					"id": 1196,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "5683:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5675:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5661:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "5661:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206973206e6f7420612070617961626c6520746f6b656e",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5696:39:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48",
																			"typeString": "literal_string \"Presale: Token is not a payable token\""
																		},
																		"value": "Presale: Token is not a payable token"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c8243ae5107095622782aa873b8290455ae5e160bcbb529c625dc3ad7c611f48",
																			"typeString": "literal_string \"Presale: Token is not a payable token\""
																		}
																	],
																	"id": 1193,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5653:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5653:83:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "5653:83:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1205,
																				"name": "_prices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1156,
																				"src": "5758:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1207,
																			"indexExpression": {
																				"id": 1206,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1182,
																				"src": "5766:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5758:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5772:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5758:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a2050726963652063616e6e6f74206265207a65726f",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5775:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
																			"typeString": "literal_string \"Presale: Price cannot be zero\""
																		},
																		"value": "Presale: Price cannot be zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3fd3aada7628a1a4b329e425c3cfb7c4b088b357dad2cabcca54564afa8243fe",
																			"typeString": "literal_string \"Presale: Price cannot be zero\""
																		}
																	],
																	"id": 1204,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5750:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5750:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "5750:57:9"
														},
														{
															"expression": {
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1213,
																		"name": "tokenPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "5821:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1217,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1214,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "5833:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1216,
																		"indexExpression": {
																			"id": 1215,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "5841:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5833:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5821:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1218,
																		"name": "_prices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "5847:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1220,
																	"indexExpression": {
																		"id": 1219,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "5855:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5847:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1222,
															"nodeType": "ExpressionStatement",
															"src": "5821:36:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5611:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1186,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "5615:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5623:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5615:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5611:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"initializationExpression": {
													"assignments": [
														1182
													],
													"declarations": [
														{
															"constant": false,
															"id": 1182,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5604:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1224,
															"src": "5596:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1181,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5596:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1184,
													"initialValue": {
														"hexValue": "30",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5608:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5596:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1189,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5631:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5636:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5631:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1192,
													"nodeType": "ExpressionStatement",
													"src": "5631:6:9"
												},
												"nodeType": "ForStatement",
												"src": "5591:277:9"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "5130:107:9",
										"text": " @dev Updates the prices of allowed ERC20 tokens and optionally the native currency rate."
									},
									"functionSelector": "3115329e",
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1160,
												"name": "onlyOwner",
												"nameLocations": [
													"5373:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5373:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5373:9:9"
										}
									],
									"name": "updateTokenRate",
									"nameLocation": "5251:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "5293:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "5276:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1151,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5276:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1152,
													"nodeType": "ArrayTypeName",
													"src": "5276:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_prices",
												"nameLocation": "5327:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "5310:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5310:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1155,
													"nodeType": "ArrayTypeName",
													"src": "5310:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "5352:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "5344:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5266:97:9"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:9"
									},
									"scope": 1728,
									"src": "5242:632:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "6064:110:9",
										"statements": [
											{
												"body": {
													"id": 1251,
													"nodeType": "Block",
													"src": "6118:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1246,
																			"name": "buyers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "6147:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1248,
																		"indexExpression": {
																			"id": 1247,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1235,
																			"src": "6154:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6147:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1245,
																	"name": "unlockTokenFor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "6132:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6132:25:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "6132:25:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "6094:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1239,
															"name": "buyers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "6098:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6098:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6094:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"initializationExpression": {
													"assignments": [
														1235
													],
													"declarations": [
														{
															"constant": false,
															"id": 1235,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6087:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1252,
															"src": "6079:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1234,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6079:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1237,
													"initialValue": {
														"hexValue": "30",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6091:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6079:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6113:3:9",
														"subExpression": {
															"id": 1242,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "6113:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1244,
													"nodeType": "ExpressionStatement",
													"src": "6113:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6074:94:9"
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "5880:122:9",
										"text": " @dev Unlocks and sends tokens for all buyers. Can only be called by the owner when the sale is stopped."
									},
									"functionSelector": "5e0be607",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1229,
												"name": "onlyOwner",
												"nameLocations": [
													"6043:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6043:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6043:9:9"
										},
										{
											"id": 1232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1231,
												"name": "saleStoped",
												"nameLocations": [
													"6053:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 922,
												"src": "6053:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6053:10:9"
										}
									],
									"name": "unlockAllTokens",
									"nameLocation": "6016:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6031:2:9"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:9"
									},
									"scope": 1728,
									"src": "6007:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "6345:158:9",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "6363:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "6355:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6355:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1270,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6405:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																],
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6397:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6397:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6397:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1265,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "6376:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1264,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6369:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6369:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6387:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "6369:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6369:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6448:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6448:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "6460:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1275,
																	"name": "saleToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "6428:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1274,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6421:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6421:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6439:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "6421:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6421:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "6421:43:9"
											},
											{
												"expression": {
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1283,
														"name": "totalTokensforSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "6474:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6495:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6474:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "6474:22:9"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "6180:97:9",
										"text": " @dev Allows the owner to withdraw all remaining sale tokens from the contract."
									},
									"functionSelector": "9ae2fd34",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyOwner",
												"nameLocations": [
													"6324:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6324:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6324:9:9"
										},
										{
											"id": 1260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1259,
												"name": "saleStoped",
												"nameLocations": [
													"6334:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 922,
												"src": "6334:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6334:10:9"
										}
									],
									"name": "withdrawAllSaleTokens",
									"nameLocation": "6291:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6312:2:9"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6345:0:9"
									},
									"scope": 1728,
									"src": "6282:221:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "6572:60:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1301,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6609:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6613:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6609:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "6621:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1298,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "6589:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1297,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6582:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6582:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6596:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "6582:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6582:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "6582:43:9"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1294,
												"name": "onlyOwner",
												"nameLocations": [
													"6562:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6562:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6562:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "6518:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6535:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "6527:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "6550:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "6542:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6526:28:9"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6572:0:9"
									},
									"scope": 1728,
									"src": "6509:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "6691:99:9",
										"statements": [
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "6709:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "6701:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1314,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1322,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6747:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INTBuyStake_$1728",
																		"typeString": "contract INTBuyStake"
																	}
																],
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6739:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1320,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6739:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6739:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1317,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "6722:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1316,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6715:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6715:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6729:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "6715:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6715:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "6772:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1328,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "6779:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "6763:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6763:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "6763:20:9"
											}
										]
									},
									"functionSelector": "fa09e630",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1311,
												"name": "onlyOwner",
												"nameLocations": [
													"6681:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6681:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6681:9:9"
										}
									],
									"name": "withdrawAll",
									"nameLocation": "6647:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6667:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "6659:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:15:9"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:9"
									},
									"scope": 1728,
									"src": "6638:152:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "6852:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "6891:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1341,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6870:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6874:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6870:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6862:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6862:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6862:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6882:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6862:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6862:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "6862:33:9"
											}
										]
									},
									"functionSelector": "3c00a36c",
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1336,
												"name": "onlyOwner",
												"nameLocations": [
													"6842:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6842:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6842:9:9"
										}
									],
									"name": "withdrawCurrency",
									"nameLocation": "6805:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "6830:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "6822:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6821:13:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6852:0:9"
									},
									"scope": 1728,
									"src": "6796:106:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "7174:1087:9",
										"statements": [
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "saleTokenAmt",
														"nameLocation": "7192:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "7184:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7184:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1361,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7207:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7217:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7217:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7217:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7207:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7303:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7295:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7295:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7295:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1376,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7307:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7311:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7307:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1371,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7280:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7280:37:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7207:110:9",
													"trueExpression": {
														"arguments": [
															{
																"id": 1368,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "7253:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1369,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "7261:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1367,
															"name": "getTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7238:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7238:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:133:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1382,
																			"name": "totalTokensSold",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "7358:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1383,
																			"name": "saleTokenAmt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1360,
																			"src": "7376:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7358:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7357:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1386,
																"name": "totalTokensforSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "7392:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7357:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a204e6f7420656e6f75676820746f6b656e7320746f2062652073616c65",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7424:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77",
																"typeString": "literal_string \"Presale: Not enough tokens to be sale\""
															},
															"value": "Presale: Not enough tokens to be sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bc5fb06649d73a4bfffdeb335e5490a6bcf09adf98ebccaee9729004ff22e77",
																"typeString": "literal_string \"Presale: Not enough tokens to be sale\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7336:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:137:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "7336:137:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "7488:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7498:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7498:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7498:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7488:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1426,
													"nodeType": "Block",
													"src": "7678:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1422,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7718:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7722:5:9",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7718:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1418,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "7700:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7700:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7692:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7692:8:9",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7692:16:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7709:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7692:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7692:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1425,
															"nodeType": "ExpressionStatement",
															"src": "7692:36:9"
														}
													]
												},
												"id": 1427,
												"nodeType": "IfStatement",
												"src": "7484:255:9",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "7510:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1398,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "7532:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7542:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7532:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7545:40:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986",
																			"typeString": "literal_string \"Presale: Amount must be greater than 0\""
																		},
																		"value": "Presale: Amount must be greater than 0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b2647ee994852c4ff4b30121285fbc9b0fe2df0c21c3b1a1acdff6c29c667986",
																			"typeString": "literal_string \"Presale: Amount must be greater than 0\""
																		}
																	],
																	"id": 1397,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7524:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7524:62:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1403,
															"nodeType": "ExpressionStatement",
															"src": "7524:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1408,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7632:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7636:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7632:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1410,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "7644:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7644:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1412,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "7653:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1405,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "7607:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1404,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7600:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7600:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7615:16:9",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "7600:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7600:61:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1414,
															"nodeType": "ExpressionStatement",
															"src": "7600:61:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "totalTokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "7749:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1429,
														"name": "saleTokenAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "7768:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7749:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "7749:31:9"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "buyerDetails",
														"nameLocation": "7816:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "7790:38:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
															"typeString": "struct INTBuyStake.BuyerTokenDetails"
														},
														"typeName": {
															"id": 1433,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1432,
																"name": "BuyerTokenDetails",
																"nameLocations": [
																	"7790:17:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 870,
																"src": "7790:17:9"
															},
															"referencedDeclaration": 870,
															"src": "7790:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																"typeString": "struct INTBuyStake.BuyerTokenDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"baseExpression": {
														"id": 1435,
														"name": "buyersDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "7831:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
															"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
														}
													},
													"id": 1438,
													"indexExpression": {
														"expression": {
															"id": 1436,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7845:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7849:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7845:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7831:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
														"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7790:66:9"
											},
											{
												"condition": {
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7871:20:9",
													"subExpression": {
														"expression": {
															"id": 1440,
															"name": "buyerDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "7872:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7885:6:9",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "7872:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1457,
																"name": "buyerDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "7991:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																	"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8004:6:9",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "7991:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8013:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7991:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1471,
													"nodeType": "IfStatement",
													"src": "7987:164:9",
													"trueBody": {
														"id": 1470,
														"nodeType": "Block",
														"src": "8016:135:9",
														"statements": [
															{
																"expression": {
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1461,
																			"name": "buyerDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1434,
																			"src": "8091:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																				"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "8104:6:9",
																		"memberName": "reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 867,
																		"src": "8091:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1465,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8129:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8133:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8129:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1464,
																			"name": "getBuyerReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1623,
																			"src": "8114:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8114:26:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8091:49:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1469,
																"nodeType": "ExpressionStatement",
																"src": "8091:49:9"
															}
														]
													}
												},
												"id": 1472,
												"nodeType": "IfStatement",
												"src": "7867:284:9",
												"trueBody": {
													"id": 1456,
													"nodeType": "Block",
													"src": "7893:88:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1446,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7919:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7923:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7919:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1443,
																		"name": "buyers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "7907:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7914:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "7907:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7907:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "7907:23:9"
														},
														{
															"expression": {
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1450,
																		"name": "buyerDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "7944:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																			"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7957:6:9",
																	"memberName": "exists",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 863,
																	"src": "7944:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7966:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7944:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "7944:26:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1473,
															"name": "buyerDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "8160:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8173:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "8160:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1476,
														"name": "saleTokenAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "8183:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8160:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "8160:35:9"
											},
											{
												"expression": {
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1479,
															"name": "buyerDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "8205:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage_ptr",
																"typeString": "struct INTBuyStake.BuyerTokenDetails storage pointer"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8218:18:9",
														"memberName": "lastCalculatedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "8205:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1482,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8239:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8245:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8239:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8205:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "8205:49:9"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "6951:116:9",
										"text": " @dev Allows a user to buy saleToken using native currency (msg.value) or an approved ERC20 token."
									},
									"functionSelector": "68f8fc10",
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "saleEnabled",
												"nameLocations": [
													"7162:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 911,
												"src": "7162:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7162:11:9"
										}
									],
									"name": "buyToken",
									"nameLocation": "7081:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "7107:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7099:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7099:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7131:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "7123:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7089:55:9"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7174:0:9"
									},
									"scope": 1728,
									"src": "7072:1189:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "8433:163:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1494,
																		"name": "buyersDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "8464:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																			"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																		}
																	},
																	"id": 1497,
																	"indexExpression": {
																		"expression": {
																			"id": 1495,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8478:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8482:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8478:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8464:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																		"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8490:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "8464:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8499:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8464:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c653a204e6f20746f6b656e7320746f20636c61696d",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8514:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf",
																"typeString": "literal_string \"Presale: No tokens to claim\""
															},
															"value": "Presale: No tokens to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f284fe2ebed2efb7b891ce81e3a8c8dff468334cfc4518f2dae5e00ea829dcf",
																"typeString": "literal_string \"Presale: No tokens to claim\""
															}
														],
														"id": 1493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8443:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:110:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "8443:110:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1505,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8578:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8582:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8578:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1504,
														"name": "unlockTokenFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "8563:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8563:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "8563:26:9"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "8267:118:9",
										"text": " @dev Allows a buyer to claim their purchased tokens and accrued rewards after the sale has stopped."
									},
									"functionSelector": "18a24b5b",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1490,
												"name": "saleStoped",
												"nameLocations": [
													"8422:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 922,
												"src": "8422:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8422:10:9"
										}
									],
									"name": "unlockToken",
									"nameLocation": "8399:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8410:2:9"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8433:0:9"
									},
									"scope": 1728,
									"src": "8390:206:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "9061:372:9",
										"statements": [
											{
												"assignments": [
													1521
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "amtOut",
														"nameLocation": "9079:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "9071:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9071:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"nodeType": "VariableDeclarationStatement",
												"src": "9071:14:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1523,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "9099:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9116:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9108:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1524,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9108:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9108:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9099:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "9330:74:9",
													"statements": [
														{
															"expression": {
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1558,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "9344:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1559,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "9354:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1562,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1560,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9364:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"id": 1561,
																								"name": "saleTokenDec",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 878,
																								"src": "9370:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9364:18:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1563,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9363:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9354:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1565,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9353:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"id": 1566,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 874,
																				"src": "9388:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1567,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9387:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9353:40:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9344:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1570,
															"nodeType": "ExpressionStatement",
															"src": "9344:49:9"
														}
													]
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "9095:309:9",
												"trueBody": {
													"id": 1557,
													"nodeType": "Block",
													"src": "9120:204:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1530,
																				"name": "payableTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "9142:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1532,
																			"indexExpression": {
																				"id": 1531,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1513,
																				"src": "9156:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9142:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9166:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "9142:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "50726573616c653a20546f6b656e206e6f7420616c6c6f776564",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9172:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323",
																			"typeString": "literal_string \"Presale: Token not allowed\""
																		},
																		"value": "Presale: Token not allowed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_37133ecc866db9d6bb2be8ae3474ea4f461c72e2629b2dd51b1830a9a7a86323",
																			"typeString": "literal_string \"Presale: Token not allowed\""
																		}
																	],
																	"id": 1529,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9134:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9134:67:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1537,
															"nodeType": "ExpressionStatement",
															"src": "9134:67:9"
														},
														{
															"assignments": [
																1539
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1539,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "9223:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1557,
																	"src": "9215:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9215:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1543,
															"initialValue": {
																"baseExpression": {
																	"id": 1540,
																	"name": "tokenPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "9231:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1542,
																"indexExpression": {
																	"id": 1541,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "9243:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9231:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9215:34:9"
														},
														{
															"expression": {
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1544,
																	"name": "amtOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "9263:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1545,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "9273:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9283:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"id": 1547,
																								"name": "saleTokenDec",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 878,
																								"src": "9289:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9283:18:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1549,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9282:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9273:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1551,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9272:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"id": 1552,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "9307:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1553,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9306:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9272:41:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9263:50:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1556,
															"nodeType": "ExpressionStatement",
															"src": "9263:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1573,
													"name": "amtOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1521,
													"src": "9420:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1574,
												"nodeType": "Return",
												"src": "9413:13:9"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "8638:311:9",
										"text": " @dev Calculates the amount of saleToken a user will receive for a given amount of payment token.\n @param token The address of the payment token (address(0) for native currency).\n @param amount The amount of the payment token.\n @return The amount of saleToken to be received."
									},
									"functionSelector": "115ece4c",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmount",
									"nameLocation": "8963:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8995:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "8987:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8987:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9018:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "9010:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9010:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:53:9"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "9052:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9051:9:9"
									},
									"scope": 1728,
									"src": "8954:479:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "9579:309:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1584,
																"name": "buyersDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "9593:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																	"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																}
															},
															"id": 1586,
															"indexExpression": {
																"id": 1585,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "9607:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9593:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9614:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "9593:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9624:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9593:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "9589:46:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9634:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1583,
													"id": 1591,
													"nodeType": "Return",
													"src": "9627:8:9"
												}
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "daysPassed",
														"nameLocation": "9651:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "9646:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9646:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1595,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9665:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9671:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "9665:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1597,
																			"name": "buyersDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "9695:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																				"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																			}
																		},
																		"id": 1599,
																		"indexExpression": {
																			"id": 1598,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "9709:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9695:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																			"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9716:18:9",
																	"memberName": "lastCalculatedTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 869,
																	"src": "9695:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9665:69:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1602,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9664:71:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3836343030",
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9738:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "9664:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9646:97:9"
											},
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9762:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "9754:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9754:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1608,
																				"name": "buyersDetails",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "9772:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																					"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																				}
																			},
																			"id": 1610,
																			"indexExpression": {
																				"id": 1609,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1579,
																				"src": "9786:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9772:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																				"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																			}
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9793:6:9",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "9772:27:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1612,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "9814:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9772:52:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1614,
																	"name": "daysPassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "9839:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9772:77:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9771:79:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9853:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "9771:87:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9754:104:9"
											},
											{
												"expression": {
													"id": 1620,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1607,
													"src": "9875:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1621,
												"nodeType": "Return",
												"src": "9868:13:9"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "9439:66:9",
										"text": " @dev Calculates the pending reward for a buyer."
									},
									"functionSelector": "828b7953",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyerReward",
									"nameLocation": "9519:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "9542:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "9534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9534:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9533:15:9"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "9570:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9569:9:9"
									},
									"scope": 1728,
									"src": "9510:378:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "10099:296:9",
										"statements": [
											{
												"body": {
													"id": 1671,
													"nodeType": "Block",
													"src": "10153:236:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1638,
																			"name": "buyersDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "10171:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																				"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																			}
																		},
																		"id": 1642,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1639,
																				"name": "buyers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "10185:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1641,
																			"indexExpression": {
																				"id": 1640,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1628,
																				"src": "10192:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10185:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10171:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																			"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10196:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "10171:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10205:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10171:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1670,
															"nodeType": "IfStatement",
															"src": "10167:212:9",
															"trueBody": {
																"id": 1669,
																"nodeType": "Block",
																"src": "10208:171:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1646,
																						"name": "buyersDetails",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 896,
																						"src": "10226:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																							"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																						}
																					},
																					"id": 1650,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1647,
																							"name": "buyers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 885,
																							"src": "10240:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1649,
																						"indexExpression": {
																							"id": 1648,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1628,
																							"src": "10247:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10240:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10226:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																						"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																					}
																				},
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10251:6:9",
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 867,
																				"src": "10226:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1653,
																							"name": "buyers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 885,
																							"src": "10275:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1655,
																						"indexExpression": {
																							"id": 1654,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1628,
																							"src": "10282:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10275:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1652,
																					"name": "getBuyerReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1623,
																					"src": "10260:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10260:25:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10226:59:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1658,
																		"nodeType": "ExpressionStatement",
																		"src": "10226:59:9"
																	},
																	{
																		"expression": {
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1659,
																						"name": "buyersDetails",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 896,
																						"src": "10303:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																							"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																						}
																					},
																					"id": 1663,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1660,
																							"name": "buyers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 885,
																							"src": "10317:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1662,
																						"indexExpression": {
																							"id": 1661,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1628,
																							"src": "10324:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10317:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10303:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																						"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																					}
																				},
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10328:18:9",
																				"memberName": "lastCalculatedTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 869,
																				"src": "10303:43:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1665,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10349:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10355:9:9",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10349:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10303:61:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1668,
																		"nodeType": "ExpressionStatement",
																		"src": "10303:61:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1631,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "10129:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1632,
															"name": "buyers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10133:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10140:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10133:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10129:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"initializationExpression": {
													"assignments": [
														1628
													],
													"declarations": [
														{
															"constant": false,
															"id": 1628,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10122:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1672,
															"src": "10114:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1627,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10114:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1630,
													"initialValue": {
														"hexValue": "30",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10126:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10114:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10148:3:9",
														"subExpression": {
															"id": 1635,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "10148:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ExpressionStatement",
													"src": "10148:3:9"
												},
												"nodeType": "ForStatement",
												"src": "10109:280:9"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "9929:131:9",
										"text": " @dev Updates the rewards for all buyers.\n This is called internally before changing the reward multiplier."
									},
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRewards",
									"nameLocation": "10074:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10087:2:9"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10099:0:9"
									},
									"scope": 1728,
									"src": "10065:330:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "10637:397:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1680,
																"name": "buyersDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "10651:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																	"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																}
															},
															"id": 1682,
															"indexExpression": {
																"id": 1681,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "10665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10651:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10672:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "10651:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10651:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "10647:381:9",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "10684:344:9",
													"statements": [
														{
															"assignments": [
																1687
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1687,
																	"mutability": "mutable",
																	"name": "tokensforWithdraw",
																	"nameLocation": "10706:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1724,
																	"src": "10698:25:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1686,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10698:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1701,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1688,
																				"name": "buyersDetails",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "10726:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																					"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																				}
																			},
																			"id": 1690,
																			"indexExpression": {
																				"id": 1689,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1677,
																				"src": "10740:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10726:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																				"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10747:6:9",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "10726:27:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1692,
																				"name": "buyersDetails",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "10768:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																					"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																				}
																			},
																			"id": 1694,
																			"indexExpression": {
																				"id": 1693,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1677,
																				"src": "10782:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10768:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																				"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10789:6:9",
																		"memberName": "reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 867,
																		"src": "10768:27:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10726:69:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1698,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1677,
																			"src": "10825:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1697,
																		"name": "getBuyerReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "10810:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10810:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10726:105:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10698:133:9"
														},
														{
															"expression": {
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1702,
																			"name": "buyersDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "10858:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																				"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																			}
																		},
																		"id": 1704,
																		"indexExpression": {
																			"id": 1703,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1677,
																			"src": "10872:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10858:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																			"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10879:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "10858:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10888:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10858:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1708,
															"nodeType": "ExpressionStatement",
															"src": "10858:31:9"
														},
														{
															"expression": {
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1709,
																			"name": "buyersDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "10903:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerTokenDetails_$870_storage_$",
																				"typeString": "mapping(address => struct INTBuyStake.BuyerTokenDetails storage ref)"
																			}
																		},
																		"id": 1711,
																		"indexExpression": {
																			"id": 1710,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1677,
																			"src": "10917:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10903:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerTokenDetails_$870_storage",
																			"typeString": "struct INTBuyStake.BuyerTokenDetails storage ref"
																		}
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10924:6:9",
																	"memberName": "reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 867,
																	"src": "10903:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10933:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10903:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1715,
															"nodeType": "ExpressionStatement",
															"src": "10903:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "10992:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "tokensforWithdraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "10999:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "saleToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 876,
																				"src": "10968:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1716,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "10961:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10961:17:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10979:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 386,
																	"src": "10961:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10961:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "10961:56:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "10401:183:9",
										"text": " @dev Performs the token unlock and transfer for a specific buyer.\n It calculates total tokens (purchased + existing rewards + new rewards) and transfers them."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlockTokenFor",
									"nameLocation": "10598:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "10621:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "10613:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10613:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10612:15:9"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10637:0:9"
									},
									"scope": 1728,
									"src": "10589:445:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1729,
							"src": "672:10364:9",
							"usedErrors": [
								13,
								18,
								353
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "69:10967:9"
				},
				"id": 9
			}
		}
	}
}