{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_provenanceGraphAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					}
				],
				"name": "GraphNotFinalized",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					}
				],
				"name": "NoContributors",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					}
				],
				"name": "SplitterAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "assetId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "splitterAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "payees",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "shares",
						"type": "uint256[]"
					}
				],
				"name": "SplitterCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "assetIdToSplitter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_assetId",
						"type": "uint256"
					}
				],
				"name": "createSplitter",
				"outputs": [
					{
						"internalType": "address",
						"name": "splitterAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "provenanceGraph",
				"outputs": [
					{
						"internalType": "contract IProvenanceGraph",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Your Name",
			"kind": "dev",
			"methods": {
				"createSplitter(uint256)": {
					"details": "Reads contributor data from the finalized ProvenanceGraph for the asset. Can be called by anyone, but only once per finalized asset.",
					"params": {
						"_assetId": "The token ID of the asset for which to create a splitter."
					},
					"returns": {
						"splitterAddress": "The address of the newly deployed PaymentSplitter contract."
					}
				}
			},
			"title": "RoyaltySplitFactory",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"createSplitter(uint256)": {
					"notice": "Deploys a new PaymentSplitter contract for a given asset."
				}
			},
			"notice": "A factory contract that deploys a unique PaymentSplitter for each finalized asset. This contract reads provenance data to create on-chain royalty distribution mechanisms.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/RoyaltySplitFactory.sol": "RoyaltySplitFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/finance/PaymentSplitter.sol": {
			"keccak256": "0xba00a079c0def02f9e905ed091f01bcf9caa41ec215862a315e9f3838be61cdc",
			"license": "MIT",
			"urls": [
				"bzz-raw://64c2cac21034117cbda842f32ae50ab87aa0e71ffbeb94d9b6051f8085abd8a7",
				"dweb:/ipfs/QmYUCe45jDezpnK9y7ecqZVy1iECqW63mUrgqnM6YZdrrF"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
			"license": "MIT",
			"urls": [
				"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
				"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Errors.sol": {
			"keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
			"license": "MIT",
			"urls": [
				"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
				"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"contracts/RoyaltySplitFactory.sol": {
			"keccak256": "0xe18039cd489b7b260f8a83c97890f6697c28054fb4cb0c68e76fa53cd771fdd0",
			"license": "MIT",
			"urls": [
				"bzz-raw://e7dd99b84f21a61a8965cc1c3a81069451b9073de28bc4dc2f6a5071b81ccac1",
				"dweb:/ipfs/QmNjCUBkWCLPY6QAc8GiLB7bUtF87XmzKrWytXHomPzx5y"
			]
		},
		"contracts/interfaces/IProvenanceGraph.sol": {
			"keccak256": "0xfe265a3d2903187520ccc12d703e3638cf4edec3fe017cdeca61437343bb04c9",
			"license": "MIT",
			"urls": [
				"bzz-raw://06194e2104340bbadc63f2192b1ac6b58878b9c54be90c78ee2aec579451b368",
				"dweb:/ipfs/QmQ4p8DJ534hngPVALiuhM7v5hVnzGjXcyxaCjixmTZ37E"
			]
		}
	},
	"version": 1
}